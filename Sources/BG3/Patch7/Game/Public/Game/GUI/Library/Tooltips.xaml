<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
                    xmlns:ls="clr-namespace:ls;assembly=Code"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Core;component/Library/DataTemplates.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- The default "Show Delay" (milliseconds) for Tooltips -->
    <System:Int32 x:Key="ToolTipInitialShowDelay">80</System:Int32>

    <!-- The default "Show Delay" (milliseconds) for Tooltips -->
    <System:Int32 x:Key="LSTooltipOpeningDelay">160</System:Int32>

    <!-- Status ID for Gale's item consuming is requested to show different than all others in UI (GUS-213259) -->
    <!-- It's not great, but we do it here so we keep the hacky stuff out of code -->
    <System:String x:Key="GaleConsumeStatusId">ORI_GALE_CONSUMABLE</System:String>

    <!-- Tooltip Sizes -->
    <System:Double x:Key="MaxNarrowTooltipContentWidth">630</System:Double>
    <System:Double x:Key="MaxCombatEntryTooltipWidth">2000</System:Double>
    <System:Double x:Key="SurfaceTooltipContentWidth">668</System:Double>
    <System:Double x:Key="SurfaceTooltipMinHeight">100</System:Double>

    <!-- Tooltip Spaces -->
    <System:Double x:Key="DefaultSpace">16</System:Double>
    <Thickness x:Key="DefaultMarginTop">0,16,0,0</Thickness>
    <Thickness x:Key="DefaultMarginBottom">0,0,0,16</Thickness>
    <Thickness x:Key="DefaultMarginTopBottom">0,16</Thickness>
    <Thickness x:Key="DefaultMarginRight">0,0,16,0</Thickness>



    <ImageSource x:Key="TTHourglassImage">pack://application:,,,/Core;component/Assets/Tooltips/ico_hourglass.png</ImageSource>
    <ImageSource x:Key="TTACImage">pack://application:,,,/Core;component/Assets/Tooltips/ico_AC_primary.png</ImageSource>

    <ImageSource x:Key="CTXArrowImage">pack://application:,,,/Core;component/Assets/ContextMenu/ico_arrow.png</ImageSource>
    <ImageSource x:Key="IconD20" >pack://application:,,,/Core;component/Assets/Tooltips/ico_d20.png</ImageSource>
    <ImageSource x:Key="InspectHintBackground" >pack://application:,,,/Core;component/Assets/Tooltips/TT_inspect_bg.png</ImageSource>
    <Geometry x:Key="DiceGeometryD20">M11,26 L44,6 L76,26 V63 L44,82 L11,63 Z</Geometry>

    <!-- Hint Text Pad-->
    <ControlTemplate x:Key="TooltipPadHintStyle" TargetType="ContentControl">
        <ls:LSNineSliceImage Height="106" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,0,0,-37" ImageSource="{StaticResource InspectHintBackground}" Slices="28,30,28,20" Focusable="False" Opacity="0.9">
            <StackPanel Orientation="Horizontal" Margin="14,0,36,0">
                <ls:LSButton VerticalAlignment="Center" Margin="-5,16,0,0" Style="{StaticResource TooltipControllerButton}" Content=""
                                 DataContext ="{Binding OwnerDCWidget.CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIPinTooltip', RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}">
                    <ls:LSButton.RenderTransform>
                        <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
                    </ls:LSButton.RenderTransform>
                </ls:LSButton>
                <TextBlock Text="{Binding Source='hafde27eeg294dg41c9g9aa1g5d5f2be9afea', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" Foreground="{StaticResource TooltipColor.Primary}" FontSize="{StaticResource SmallFontSize}" FontWeight="DemiBold" Margin="-30,-2,0,0" />
            </StackPanel>
        </ls:LSNineSliceImage>
    </ControlTemplate>

    <!-- Equipped Text Pad-->
    <ControlTemplate x:Key="TooltipPadEquippedStyle" TargetType="ContentControl">
        <ls:LSNineSliceImage Height="106" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,0,0,0" ImageSource="{StaticResource InspectHintBackground}" Slices="28,30,28,20" Focusable="False" Opacity="0.9">
            <TextBlock Text="{Binding Source='ha1ff7c28g1ddcg41d2g92e4g3b15371c596d', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" Foreground="{StaticResource TooltipColor.Primary}" FontSize="{StaticResource SmallFontSize}" FontWeight="DemiBold" Margin="38,-2,38,0" />
        </ls:LSNineSliceImage>
    </ControlTemplate>

    <!-- Tooltip bottom gradient -->
    <Style x:Key="TooltipBottomGradientStyle" TargetType="Rectangle">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Height" Value="200"/>
        <Setter Property="Margin" Value="-60,0,-60,-35"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Opacity" Value="0.4" />
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="Transparent" Offset="0" />
                    <GradientStop Color="{Binding Source={StaticResource LS_guestTxtColor}, Path=Color}" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Clip">
            <Setter.Value>
                <PathGeometry Transform="{Binding ElementName=ActualContainer,Path=RenderTransform}">
                    <PathGeometry.Figures>
                        <PathFigure StartPoint="24,0" IsClosed="True">
                            <LineSegment Point="24,172"/>
                            <LineSegment Point="26,177"/>
                            <LineSegment Point="29,181"/>
                            <LineSegment Point="32,183"/>
                            <LineSegment Point="37,186"/>

                            <LineSegment Point="872,186"/>
                            <LineSegment Point="876,183"/>
                            <LineSegment Point="880,181"/>
                            <LineSegment Point="883,177"/>
                            <LineSegment Point="885,172"/>
                            <LineSegment Point="885,0"/>
                        </PathFigure>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding ActualHeight, ElementName=tooltipContent, Converter={StaticResource LessThanConverter}, ConverterParameter=150}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <!-- Check for supported widths -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding Path="ActualWidth" ElementName="tooltipContent"/>
                                <Binding Source="{StaticResource MaxTooltipContentWidth}"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding Path="ActualWidth" ElementName="tooltipContent"/>
                                <Binding Source="{StaticResource MaxWideTooltipContentWidth}"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding DataContext, ElementName=tooltipContent, Converter={StaticResource TypeConverter}}" Value="ls.VMStat">
                <Setter Property="Clip">
                    <Setter.Value>
                        <PathGeometry Transform="{Binding ElementName=ActualContainer,Path=RenderTransform}">
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="24,0" IsClosed="True">
                                    <LineSegment Point="24,172"/>
                                    <LineSegment Point="26,177"/>
                                    <LineSegment Point="29,181"/>
                                    <LineSegment Point="32,183"/>
                                    <LineSegment Point="39,186"/>

                                    <LineSegment Point="942,186"/>
                                    <LineSegment Point="948,183"/>
                                    <LineSegment Point="952,181"/>
                                    <LineSegment Point="954,177"/>
                                    <LineSegment Point="956,172"/>
                                    <LineSegment Point="956,0"/>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Rarity gradient -->
    <Style x:Key="TooltipItemRarityRectangleStyle" TargetType="Rectangle" BasedOn="{StaticResource TooltipItemRarityRectangleStyleBase}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Rarity}" Value="Uncommon">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="{StaticResource ItemRarityColour.UncommonGradientBottom}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Rarity}" Value="Rare">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="{StaticResource ItemRarityColour.RareGradientBottom}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Rarity}" Value="VeryRare">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="{StaticResource ItemRarityColour.VeryRareGradientBottom}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Rarity}" Value="Legendary">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Opacity" Value="0.6"/>
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="{StaticResource ItemRarityColour.LegendaryGradientBottom}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsStoryItem}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Opacity" Value="0.6"/>
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="{StaticResource ItemRarityColour.storyGradientBottom}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ls:LSTooltip x:Key="PlacementParentDCTooltip" IsHitTestVisible="False" Content="{Binding Path=PlacementTarget.DataContext ,RelativeSource={RelativeSource Mode=Self}}" ToolTipService.HorizontalOffset="{Binding (ToolTipService.HorizontalOffset), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
    <ls:LSTooltip x:Key="PlacementParentDCTooltipOffset" IsHitTestVisible="False" Content="{Binding Path=PlacementTarget.DataContext ,RelativeSource={RelativeSource Mode=Self}}" ToolTipService.HorizontalOffset="{Binding (ToolTipService.HorizontalOffset), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

    <Style x:Key="TooltipTitleNoCollapseStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{StaticResource BigFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Title}" />
    </Style>

    <Style x:Key="TooltipAbilityModifierStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Title}" />
    </Style>

    <Style x:Key="TooltipCtxTransStringBodyStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipStringBodyStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Description.Text}" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Description.Text}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBodyStyle}">
        <Setter Property="Width" Value="{StaticResource MaxTooltipContentWidth}" />
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
        <Setter Property="Margin" Value="0,0,0,12" />
    </Style>

    <Style x:Key="TooltipAdjustableDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipDescriptionStyle}">
        <Setter Property="ls:MeasurementProperties.CalculateMeasures" Value="True" />
        <Setter Property="Tag">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                    <Binding Path="(ls:MeasurementProperties.TopY)" RelativeSource="{RelativeSource Self}"/>
                    <Binding Path="(ls:MeasurementProperties.BottomY)" ElementName="DecorationImage"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Value="{StaticResource FalseValue}" Binding="{Binding RelativeSource={RelativeSource Self},Path=Tag}">
                <Setter Property="Width" Value="{StaticResource MaxWidthOnCollisionWithImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipCtxTransStringDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringBodyStyle}">
        <Setter Property="Width" Value="{StaticResource MaxTooltipContentWidth}"/>
        <Setter Property="Margin" Value="{StaticResource DefaultMarginTop}"/>
    </Style>

    <Style x:Key="TooltipOverrideTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Override}" Value="Worse">
                <Setter Property="Foreground" Value="{StaticResource LS_SpellOverrideWorse}"/>
                <Setter Property="Text" Value="{Binding Source='hfa9b9be2gb7eeg4d98g8869gc4126276e512', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Override}" Value="Equal">
                <Setter Property="Foreground" Value="{StaticResource LS_SpellOverrideEqual}"/>
                <Setter Property="Text" Value="{Binding Source='ha231a88fg57f3g4bf2g9bd5g21c728ca318f', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Override}" Value="Better">
                <Setter Property="Foreground" Value="{StaticResource LS_SpellOverrideBetter}"/>
                <Setter Property="Text" Value="{Binding Source='h5f14e2f1g251cg4d45g972dg35f77e231d81', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Override}" Value="Different">
                <Setter Property="Foreground" Value="{StaticResource LS_SpellOverrideDifferent}"/>
                <Setter Property="Text" Value="{Binding Source='hf70e793egfa56g4da3ga018ga4c6a012733f', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#region Tooltip narrow base-->
    <Style x:Key="NarrowTooltipDescriptionText" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Special}" />
    </Style>

    <Style x:Key="NarrowTooltipModifierText" TargetType="TextBlock" BasedOn="{StaticResource NarrowTooltipDescriptionText}">
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>
    <!--#endregion-->

    <!-- Tooltip ctxTransString parameter unit conversion -->
    <Style x:Key="TooltipUnitParamRun" TargetType="ls:LSRun">

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipSectionType}" Value="Description" />
                    <Condition Binding="{Binding Type}" Value="Distance" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipSectionType}" Value="Range" />
                    <Condition Binding="{Binding Type}" Value="Distance" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipSectionType}" Value="Description" />
                    <Condition Binding="{Binding Type}" Value="Weight" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Weight Short'}"/>
            </MultiDataTrigger>

            <!-- Check damage types -->
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="HealAmount">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Weapon">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Type}" Value="DiceOutcome">
                <Setter Property="ls:AttachedProperties.InheritedTag" Value="{Binding DiceTypeSet, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='minmax'}"/>
                <Setter Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h1c706361g066ag4701gb902g31e2406b5dea"/>
                            <Binding Path="(ls:AttachedProperties.InheritedTag).x" RelativeSource="{RelativeSource Mode=Self}"/>
                            <Binding Path="(ls:AttachedProperties.InheritedTag).y" RelativeSource="{RelativeSource Mode=Self}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="DiceOutcome"/>
                    <Condition Value="True">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" RelativeSource="{RelativeSource Self}"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).y" RelativeSource="{RelativeSource Self}"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding (ls:AttachedProperties.InheritedTag).x, RelativeSource={RelativeSource Self}}"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Type}" Value="DamagesOutcome">
                <Setter Property="ls:AttachedProperties.InheritedTag" Value="{Binding DamageRolls, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='minmax'}"/>
                <Setter Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h1c706361g066ag4701gb902g31e2406b5dea"/>
                            <Binding Path="(ls:AttachedProperties.InheritedTag).x" RelativeSource="{RelativeSource Mode=Self}"/>
                            <Binding Path="(ls:AttachedProperties.InheritedTag).y" RelativeSource="{RelativeSource Mode=Self}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="DamagesOutcome"/>
                    <Condition Value="True">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" RelativeSource="{RelativeSource Self}"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).y" RelativeSource="{RelativeSource Self}"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding (ls:AttachedProperties.InheritedTag).x, RelativeSource={RelativeSource Self}}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Tooltip ctxTransString parameter unit conversion END-->

    <ControlTemplate x:Key="DamageTypeNameTemplate" TargetType="Control">
        <TextBlock x:Name="DamageType"/>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h16a3bf2egf261g4952g8df2ga6c302681bdd',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h2173a7c3g3e9ag45e4g9059g63ee74145fcb',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h07a51f3dgc8ecg4d95g807fg27d92fbaf15c',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h6920ee6dga8aag49ffg98d3g4beb0518d3b4',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h24650d5cgd8afg46e7ga817g87a20ae8da3d',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h5c48deedg618bg4c80g83c8g9a8c2e6c1125',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='hd00151c9g54bfg4d57gacaag97ce8b276bd3',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h647de1eege687g4fe6g83dbg732e1c6e117b',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h04def29eg5741g4282ga637ge31d55bc542f',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='he341e7a8gc1a7g4d24g95a9g94465f8b9c46',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h3023a555g9355g4982gb857g036adcc93e96',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h97e5a269gf0ecg4481g9ccbge4a60aadfcaa',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter TargetName="DamageType" Property="Text" Value="{Binding Source='h1e927ef5g95e7g4c38g8534g39dcb3d42691',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DamageValueTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Primary}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding DamageType}" Value="None">
                <Setter Property="Foreground" Value="{StaticResource DamageType.None}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="HealAmount">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AbilityTooltipIconStyle" TargetType="Image" BasedOn="{StaticResource TooltipMainIconStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Ability}" Value="Strength">
                <Setter Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_abilityStrength.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Constitution">
                <Setter Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_abilityConstitution.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Dexterity">
                <Setter Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_abilityDexterity.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Intelligence">
                <Setter Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_abilityIntelligence.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Wisdom">
                <Setter Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_abilityWisdom.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Charisma">
                <Setter Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_abilityCharisma.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="DiceImage" TargetType="Control">
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
            <Path x:Name="colourPath" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Width="88" Height="88" StrokeThickness="10" Style="{DynamicResource DiceBgStyle}" Data="{StaticResource DiceGeometryD20}"/>
            <Image x:Name="frontImg" VerticalAlignment="Center" HorizontalAlignment="Center"  Source="{StaticResource IconD20}" Stretch="None"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="None">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d4">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_d4.png" />
                <Setter TargetName="colourPath" Property="Data">
                    <Setter.Value>
                        <Geometry>M11,58 L44,12 L76,58 L44,77 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d6">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_d6.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M15,28 L44,11 L72,28 V60 L44,77 L15,60 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d8">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_d8.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M15,28 L44,11 L72,28 V60 L44,77 L15,60 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d10">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_d10.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M15,39 L44,13 L73,42 L72,54 L45,75 L16,52 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d12">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_d12.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M63.958,70.734L44.006,77.226,24.057,70.715,11.732,53.688,11.738,32.65,24.073,15.635,44.026,9.144l19.949,6.511L76.3,32.681,76.293,53.72Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RollDiceBgStyle" TargetType="Path">
        <Setter Property="Fill" Value="#6da4e7" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AdvantageType}" Value="Advantage" >
                <Setter Property="Fill" Value="{StaticResource TooltipColor.Bonus}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding AdvantageType}" Value="Disadvantage">
                <Setter Property="Fill" Value="{StaticResource TooltipColor.Alert}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DamageDiceBgStyle" TargetType="Path">
        <Setter Property="Fill" Value="White" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding DamageType}" Value="None">
                <Setter Property="Fill" Value="{StaticResource DamageType.None}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Fill" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Fill" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Fill" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Fill" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Fill" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Fill" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Fill" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Fill" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Fill" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Fill" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Fill" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Fill" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Fill" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="HealAmount">
                <Setter Property="Fill" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ItemsControlHorizontalWrapPanel" TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Properties Template -->
    <Style x:Key="PropertyKeyStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipSectionTextStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MaxWidth" Value="{StaticResource MaxTooltipContentWidth}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TypeId}" Value="Range">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb984e30dgab6ag4f54g883fg2f499f03b5f5',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Range"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Melee"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hde2dafecgf6f5g489ag9baeg23d0610570f5',Converter={StaticResource TranslatedStringConverter}}" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="ZoneRadius">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1151f17bgf35fg4312g9f25g7052866afc5d',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Light">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h463784c4gb6b5g43cdga821gaee496c3b1ec',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Heavy">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5bc7fbd4gfd81g4e6eg94a5g1b655286b07c',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Ammunition">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc2a87d26g99e3g40f8gb2cag8145328af515',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Loading">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hff3fef16g4dcbg44e3g8bfbg3b15c27102c5',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Finesse">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7edff38ag7aaeg4e90g99fcgc0287127c41e',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="TwoHanded">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h71bfc5dcg7f7dg4f57gbae4g047a4a7f6fc2',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Thrown">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1cf683bdg186eg4818gbf84g6255a3436a74',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Reach">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha287aa54g9a53g4c18ga0f4gfeb652a28da4',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Versatile">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfbf78535g63cbg497bg9f0ag260553831875',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Dippable">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4bf65b5ag7f76g41caga545g0266adc4acab',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="NoDualWield">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb0ae571cg757fg4b57g9fbcge9ac40b8244b',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="AlwaysPrepared">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h54296628gd80ag4dc0g8ac0g4fa344620eae',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Concentration">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd10ab864g0d67g4b14g969ag8f2388253efe',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Type">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf777db58gf537g4f59g8bb2g4fb9b9d3fd59',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hddc0f4c0g9f50g450cg92b4g454f5a9e7700',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h14a75f4bg9f6ag485bg9105gb970ffad5b6d',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <!-- Save -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Strength"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="hc8c67074g3c19g44d1g8b7bg9e5a8d06d87f" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Dexterity"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="hc30ef867gedecg4c22ga387g648ea8224248" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Constitution"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="hcd19f46ag85bcg41f2gb8fbg1dc69843d250" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Intelligence"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="h33d41553g12cag401eg8c71g640d3d654054" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Wisdom"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="hfb735304g4b35g49e2gbabeg05b183cb6de1" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Charisma"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="habf9df38g5018g44c4gbb6fga77177a64218" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Attack -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Attack"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Melee"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hde05b30egd3d5g4105g9d9ag6ef5ccb7ed95',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Attack"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Ranged"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha4376985g7a7ag4c2agbf9cg43664c163828',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Proficiency -->
            <DataTrigger Binding="{Binding TypeId}" Value="Proficiency">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc36a544fg6ae1g45f0gb74aga36d2961a9b1',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertySeparatorStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipSectionTextStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Text" Value="{Binding Source='hb897c56egaa6fg460bg8676g8ebfa0340954',Converter={StaticResource TranslatedStringConverter}}"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TypeId}" Value="Range">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Radius">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="ZoneRadius">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Type">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Proficiency">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyValueStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipSectionTextStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Secondary}"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TypeId}" Value="Range">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding DoubleValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Long'}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Radius">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="ZoneRadius">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding DoubleValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Long'}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Concentration">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Type">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding TypeList}" />
            </DataTrigger>

            <!-- Cast Ability -->
            <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Strength"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc8c67074g3c19g44d1g8b7bg9e5a8d06d87f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Dexterity"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc30ef867gedecg4c22ga387g648ea8224248',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Constitution"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hcd19f46ag85bcg41f2gb8fbg1dc69843d250',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Intelligence"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h33d41553g12cag401eg8c71g640d3d654054',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Wisdom"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfb735304g4b35g49e2gbabeg05b183cb6de1',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Charisma"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='habf9df38g5018g44c4gbb6fga77177a64218',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Cooldown -->
            <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerTurn"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h62e22cc6g2c55g4e71g9210ge285ab6b4e96',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerTurnNoRealtime"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h62e22cc6g2c55g4e71g9210ge285ab6b4e96',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerCombat"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he160aa33g42bdg461dg8a94g6b40c8e2d44b',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilRest"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd710a0f7g9695g497dg95c1g754b679cd05c',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilShortRest"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h70cd2327g366dg4a63g9a32g29bd83fd88d3',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilRestPerItem"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd710a0f7g9695g497dg95c1g754b679cd05c',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilShortRestPerItem"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h70cd2327g366dg4a63g9a32g29bd83fd88d3',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Proficiency -->
            <DataTrigger Binding="{Binding TypeId}" Value="Proficiency">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Battleaxes"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0987de21g7f18g46bdg96b6g251f0d886fd8',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Clubs"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf7ee4cf2g8054g4cecgaf42g00e26e4c6301',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Daggers"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha9bc5c71gf7fdg4f77gad7eg14da6c8ecfc2',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Darts"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf8205efdgf1f5g4581g8391g829af9b98138',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Flails"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf61bb53cg6987g4c34gbaf3g008e491dd1bd',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Glaives"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h899d4afbgabdag433ag924ag1aa328117d8a',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Greataxes"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h9430a867gd49ag48c8g9900gc945e3326765',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Greatclubs"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hec8a15degd33fg4fdagaf70gf0f1c9dd53e9',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Greatswords"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8d8817a2gf20dg4eb8gbcd0gfd1bc5428004',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Halberds"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha9d067e1g28dfg4fa3gbdabg0c3fa133279d',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Handaxes"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h35568a26gee03g4dfagb3d0g35db1faec364',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="HandCrossbows"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h23613b92g02b0g4b9cg9b7fg937f0d83f7d8',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="HeavyArmor"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfa2140c8g0b74g4ac0g81ffg75146ee3ef6c',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="HeavyCrossbows"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5b736f1eg9895g4263gb76dg76c06c1038ae',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Javelins"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hbfcb8bcbg561ag473bga1a0g4e184d2b2692',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="LightArmor"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1f5f61b0ge1b7g4d5fga2e9g46b1d5a9330b',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="LightCrossbows"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h210d748egfceeg4e76gabe5g9080c902693f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="LightHammers"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha0df64f6gae3cg4dd4gaee6g8aa988bfde8f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Longbows"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h68720f95gd2c6g4b0ega150geece5a885719',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Longswords"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h23d056e9g6d0cg47d1g9603g873752123142',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Maces"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h6718875ag0e2eg46eag98f0gb8d626d5ec13',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="MartialWeapons"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h93cf8a7dgf14dg4f68g816fgdbf4de0dae41',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Mauls"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1332cd56g203fg4919gac2dg2d2443302a31',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="MediumArmor"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hdc524c1age0cdg4303g9e52g7bcc933c7b0b',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Morningstars"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc622f5a9gf7cag4b6ag8e99g792d3831fdfc',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Pikes"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he28bbadcgf4fdg48f8gb59bg89d5895d1267',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Quarterstaffs"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3fcd9f76g0dcfg4038g9a56g06353c1c0cea',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Rapiers"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3c574faagd3dbg4b38gbca9g2a71750dfcf0',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Scimitars"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4caa96c2g100fg4292ga543g740f93ad59ca',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Shields"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7a819a15g5129g48bagafc1g1c73cc6634ab',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Shortbows"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h931161d1ge54ag480agb3d1gdaf3ed47004c',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Shortswords"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2529ddf4gb846g4940g9b1dg9969718fe87d',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Sickles"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h28d04d64ge35dg4469g956bg27d715d6e9b1',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="SimpleWeapons"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd0ea839ag4be2g455bgbff6g71446c4f1355',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Slings"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc5bd4565g187cg49e2ga99eg43b33c5b8142',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Spears"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h45a6183ag755ag4fdagb147gae8c86ceec57',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Tridents"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf2542d79gdedfg4a37gb9d2g2238be0f9f4c',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Warhammers"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4e50a96bg2c2bg41daga27eg623eeae44daf',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Warpicks"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2914d6ecg0f4ag4452ga88cg59a2f075a69f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Instrument"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd29bbe68g0a7fg4861g8e94gf6e9ee63804d',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="PropertyTemplate">
        <StackPanel x:Name="PropertyContainer" Orientation="Horizontal" Margin="-8,8,32,0" ToolTipService.Placement="Top" ToolTipService.IsEnabled="False"
                    Visibility="{Binding TypeId, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}"
                    Tag="{Binding Path=Owner, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ls:LSElementCopy}}">

            <StackPanel.ToolTip>
                <ls:LSTooltip x:Name="PropertyTooltip" ls:TooltipExtender.Owner="{Binding (ls:TooltipExtender.Owner), ElementName=PropertyContainer}" Style="{StaticResource ManagedTooltipStyle}"
                              ls:AttachedProperties.InheritedTag="{Binding Path=(ls:TooltipExtender.Data), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                    <ls:LSTooltip.ContentTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Grid x:Name="PropertyTitle" Visibility="Collapsed" Margin="0,0,0,12" VerticalAlignment="Top">
                                    <Border Style="{StaticResource TooltipStripTopStyleWithContent}" >
                                        <!-- HEADER -->
                                        <DockPanel Style="{StaticResource tooltipElementPadOnly}">
                                            <Image x:Name="PropertyTitleIcon" DockPanel.Dock="Left" Source="{x:Null}" Stretch="None" Margin="-6 -8 18 0" Visibility="Collapsed"/>
                                            <TextBlock x:Name="TitleText" DockPanel.Dock="Left" Style="{StaticResource TooltipTitleStyle}" Margin="{StaticResource TitleWithoutSubtitleMargin}" VerticalAlignment="Center"/>
                                        </DockPanel>
                                    </Border>

                                    <Rectangle VerticalAlignment="Bottom" Style="{StaticResource tooltipHeaderDividerLine}" />
                                </Grid>

                                <DockPanel>
                                    <WrapPanel x:Name="KeyValue" DockPanel.Dock="Top" Style="{StaticResource SmallTooltipWidthWrapPanel}" >
                                        <Image x:Name="PropertyIcon" Source="{x:Null}" Stretch="None" Margin="0 0 11 0" Visibility="Collapsed"/>
                                        <TextBlock Style="{StaticResource PropertyKeyStyle}" />
                                        <TextBlock Style="{StaticResource PropertySeparatorStyle}" />
                                        <TextBlock Style="{StaticResource PropertyValueStyle}"  />
                                    </WrapPanel>
                                    <TextBlock x:Name="AdditionalText" DockPanel.Dock="Bottom" Text="" Style="{StaticResource TooltipSectionTextStyle}" Visibility="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </DockPanel>
                            </StackPanel>
                            <DataTemplate.Triggers>

                                <DataTrigger Binding="{Binding TypeId}" Value="Range">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconRange}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="ZoneRadius">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconRadius}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="Light">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconLight}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="Heavy">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconHeavy}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="Ammunition">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconAmmunition}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="Loading">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconLoading}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="Finesse">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconFinesse}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="TwoHanded">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconHanded}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="Thrown">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconThrown}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="Reach">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconReach}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="Dippable">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconDippable}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="NoDualWield">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconNoDuelWield}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="AlwaysPrepared">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconPreparation}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="Concentration">
                                    <Setter TargetName="TitleText" Property="Text" Value="{Binding Source='hccfa6976gd950g49e0g88a3gbb0e8380175f',Converter={StaticResource TranslatedStringConverter}}" />
                                    <Setter TargetName="PropertyTitleIcon" Property="Source" Value="{StaticResource IconConcentration}" />
                                    <Setter TargetName="PropertyTitleIcon" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PropertyTitle" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconPreparation}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconCooldown}" />
                                    <Setter TargetName="PropertyIcon" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TypeId}" Value="Type"/>
                                        <Condition Binding="{Binding SubtypeId}" Value="Charmed"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter TargetName="AdditionalText" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="AdditionalText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h82396fb0gde0ag407egb22dgf910bf3bbe7d',Converter={StaticResource TranslatedStringConverter}}" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TypeId}" Value="Type"/>
                                        <Condition Binding="{Binding SubtypeId}" Value="Cursed"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter TargetName="AdditionalText" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="AdditionalText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb0e52a34g0bc5g496ega45fg7b802ba9eb68',Converter={StaticResource TranslatedStringConverter}}" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ls:LSTooltip.ContentTemplate>
                </ls:LSTooltip>
            </StackPanel.ToolTip>

            <Image x:Name="PropertyIcon" HorizontalAlignment="Center" Stretch="None" Style="{StaticResource SectionImageStyle}"/>
            <TextBlock x:Name="PropertyText" Style="{StaticResource IconDetailSectionTextStyle}" Visibility="Visible" Margin="8,0,0,0">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding ContextStringValue}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                </b:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding TypeId}" Value="Range">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding DoubleValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Range"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Melee"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hde2dafecgf6f5g489ag9baeg23d0610570f5',Converter={StaticResource TranslatedStringConverter}}" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Radius">
                <Setter TargetName="PropertyContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="ZoneRadius">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding DoubleValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Light">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h463784c4gb6b5g43cdga821gaee496c3b1ec',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Heavy">
                <Setter TargetName="PropertyContainer" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Ammunition">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc2a87d26g99e3g40f8gb2cag8145328af515',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Loading">
                <Setter TargetName="PropertyContainer" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Finesse">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7edff38ag7aaeg4e90g99fcgc0287127c41e',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="TwoHanded">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h71bfc5dcg7f7dg4f57gbae4g047a4a7f6fc2',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Thrown">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1cf683bdg186eg4818gbf84g6255a3436a74',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Reach">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha287aa54g9a53g4c18ga0f4gfeb652a28da4',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Versatile">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfbf78535g63cbg497bg9f0ag260553831875',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Dippable">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4bf65b5ag7f76g41caga545g0266adc4acab',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="NoDualWield">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb0ae571cg757fg4b57g9fbcge9ac40b8244b',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="AlwaysPrepared">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h54296628gd80ag4dc0g8ac0g4fa344620eae',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Concentration">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hccfa6976gd950g49e0g88a3gbb0e8380175f',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Type">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding SubtypeId}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="TargetSelf">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h02316c7bgeac5g4b0egb78cg44b193b2e233',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <!-- Cast Ability -->
            <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Strength"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1579d774gdbcdg4a97gb3fage409138d104d',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Dexterity"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8d7356d7g4c37g41e4gb8a2gef3459e12b97',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Constitution"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h20676a9ag9216g47dbgba3ag82bd734cfd53',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Intelligence"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha1a41e74g2804g4a70g9a85g6235163d41da',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Wisdom"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2e9f1067g2dceg4640g8816gc6394e9f0303',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Charisma"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha2fc9b3dg3305g404eg9256gf25a06d0b2aa',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Cooldown -->
            <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerTurn"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8c45d8a5gf1b2g4723ga21ageacde38ba8cc',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerTurnNoRealtime"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8c45d8a5gf1b2g4723ga21ageacde38ba8cc',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerCombat"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h223d44e2g5654g496cg8997gb218f29eba0c',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilRest"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8d993cfag30d7g474fgaf29gdcdc3cd67bdc',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilRestPerItem"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8d993cfag30d7g474fgaf29gdcdc3cd67bdc',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilShortRest"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h199b711fg12f1g49c1ga68dg576a864a1fc2',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilShortRestPerItem"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h199b711fg12f1g49c1ga68dg576a864a1fc2',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Save -->
            <DataTrigger Binding="{Binding TypeId}" Value="Save">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter TargetName="PropertyTooltip" Property="ContentTemplate" Value="{DynamicResource SavingThrowTooltipTemplate}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding IsPerTurn}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconSaveTurn}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Strength"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h67f440bfgca03g4c43g990egec5b9bfc3c13',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Dexterity"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7865432age2d5g4481gb9d5gd99f9468cdbb',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Constitution"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h64a1c287g0939g46a9gbd9cg29d4a369f893',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Intelligence"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h353282a7g2947g43c3g95f4g0e786b4a23ec',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Wisdom"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd144ef6fg3449g4963gb9afg3fbb0ff2c63f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Charisma"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha69b733ag00b9g4ddcga1a0gb1c058b8e3a9',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Attack -->
            <DataTrigger Binding="{Binding TypeId}" Value="Attack">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Attack"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Melee"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hde2dafecgf6f5g489ag9baeg23d0610570f5',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Attack"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Ranged"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h52df2583g5fc1g4182g9511g36238e4e0c19',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Attack Roll -->
            <DataTrigger Binding="{Binding TypeId}" Value="AttackRoll">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter TargetName="PropertyTooltip" Property="ContentTemplate" Value="{DynamicResource AttackRollTooltipTemplate}"/>
                <Setter TargetName="PropertyTooltip" Property="Content" Value="{Binding Path=(ls:TooltipExtender.Data).AttackRoll, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2f87537agd7e2g4e34g9dd7gf3a6f9baf298',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <!-- Proficiency -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Battleaxes"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0f24a0dag08bbg49fcga71egedbe3f64b331',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Clubs"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h058d54a6g9dc3g4f4dg994fg88a15b2842d3',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Daggers"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hdd0b05e3gd03cg485dg8de2g6ebabc00b214',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Darts"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h88b8cd86gdf58g466ag9dbaga8b649339a55',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Flails"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hddb48511g0748g43afg99e2g01cfacd58afb',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Glaives"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb96be45dgf7e9g4b83g9007g0c45baf5fa62',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Greataxes"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd9ab04d5g884ag418bgae08g13c54d1e2c17',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Greatclubs"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hce65c424g6bebg4589gad5eg01d76406130d',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Greatswords"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb426f608ga7f6g41c6g9bb1g38b02784f14a',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Halberds"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h66f64922g1bbbg4668g9b91g00bba46ef7db',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Handaxes"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7ad13e94g51e4g4cf8ga50cg1fbb5bfc9eb9',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="HandCrossbows"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h579a013egaf2dg4df0ga826gf9980e4c4c94',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="HeavyArmor"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfa2140c8g0b74g4ac0g81ffg75146ee3ef6c',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="HeavyCrossbows"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he7d5e399g0f9dg4d03gabc4gfe02ff7a6170',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Javelins"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h85452b27gc430g4da4g8133g62493e0c764f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="LightArmor"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1f5f61b0ge1b7g4d5fga2e9g46b1d5a9330b',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="LightCrossbows"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h969a09e2gfeb5g4b9agae63g5c51195c3973',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="LightHammers"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf0fdf976g5f6dg44e1ga191g02c18ef4ff96',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Longbows"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h91b20b51gacb0g4f22gaadfgbab5703dda4b',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Longswords"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hcec8435fgabd7g4f32g8e12g538fe5bb4e68',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Maces"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha7668408g97feg42acgb9f7g7f9eb951cc85',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="MartialWeapons"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7df2c944gd524g424dga4e7g031a97be4f1e',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Mauls"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hbd876c12g581fg4369g8048gc54c436372fa',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="MediumArmor"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hdc524c1age0cdg4303g9e52g7bcc933c7b0b',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Morningstars"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h26d4e472g8031g4522g8832g4bd9eb8435b4',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Pikes"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2fffc752g7f15g4203g9ad0gb268c25dd710',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Quarterstaffs"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h787ec264g5ad4g43f3g8896g4d2bf8d84f68',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Rapiers"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h95d07e1ag0bcdg4b82gabfcgf9192ea9205e',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Scimitars"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h57197717ge47bg4fc6g8857gd062ba9cadb6',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Shields"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h9fb17844g263cg48e7g9d5cga5ddbd96352f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Shortbows"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5d97e306g9b35g4a98g8276g792a206d22d1',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Shortswords"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h978f9e38g7dc7g4effga726g91e512768a02',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Sickles"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4ffb7bacgad4cg43c4gbdc1g3759cd2bac12',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="SimpleWeapons"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h07e6785bg9c25g4cd8ga892g606a6c07a2b8',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Slings"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h9cd08861g50cfg4a67gb598gdbe47fbce245',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Spears"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc822646agd243g4d4cga4ecg0331bfdfefeb',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Tridents"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h661d9ca8g7392g4703g96fcgd398e347dd31',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Warhammers"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0bb20a29gd01bg4d72ga526gd827f3db1f1a',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Warpicks"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hed0f9876g1925g49dag9523gc6ae9cbf3608',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Proficiency"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Instrument"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd29bbe68g0a7fg4861g8e94gf6e9ee63804d',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DamageDiceSet">
        <DataTemplate.Resources>
            <Style x:Key="DiceBgStyle" TargetType="Path" BasedOn="{StaticResource DamageDiceBgStyle}"/>
        </DataTemplate.Resources>
        <Grid ClipToBounds="False">
            <Control Template="{StaticResource DiceImage}" DataContext="{Binding .}"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="DieItemContainerStyle"  TargetType="{x:Type ContentPresenter}">
        <Setter Property="Panel.ZIndex" Value="1" />
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Panel.ZIndex" Value="99" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Panel.ZIndex" Value="98" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="2">
                <Setter Property="Panel.ZIndex" Value="97" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="3">
                <Setter Property="Panel.ZIndex" Value="95" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="4">
                <Setter Property="Panel.ZIndex" Value="94" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="5">
                <Setter Property="Panel.ZIndex" Value="93" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="6">
                <Setter Property="Panel.ZIndex" Value="92" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="7">
                <Setter Property="Panel.ZIndex" Value="91" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="8">
                <Setter Property="Panel.ZIndex" Value="90" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="9">
                <Setter Property="Panel.ZIndex" Value="96" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DieListStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="AlternationCount" Value="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DieItemContainerStyle}" />
        <Setter Property="ItemsPanel" >
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
    </Style>

    <Style x:Key="DieIconStyle"  TargetType="ContentControl">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="0" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                    <Condition Binding="{Binding (ls:AttachedProperties.InheritedTag), RelativeSource={RelativeSource Mode=Self}}" Value="HideFirst"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Hidden"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="0" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="2" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="0" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="1" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="2" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="44,0,0,25"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="1" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,25"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="2" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,60,25"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="3" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,50"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="4" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,60,50"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="5" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,75"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="6" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,60,75"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="7" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,100"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <!-- Currently only supporting up to 8 dice. If we run into a case where we need more we need a design first -->
            <!-- As a current failsafe, hide any dice past 8 so they don't pile up behind the first one -->
            <DataTrigger Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=7}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="DieItemContainerTemplate">
        <ContentControl x:Name="Die" Style="{StaticResource DieIconStyle}" ContentTemplate="{StaticResource DamageDiceSet}" Content="{Binding .}" RenderTransformOrigin="0.5,0.5"/>
    </DataTemplate>

    <DataTemplate x:Key="RollDiceSet">
        <DataTemplate.Resources>
            <Style x:Key="DiceBgStyle" TargetType="Path" BasedOn="{StaticResource RollDiceBgStyle}"/>
        </DataTemplate.Resources>
        <Grid ClipToBounds="False">
            <Control Template="{StaticResource DiceImage}" DataContext="{Binding}"/>
        </Grid>
    </DataTemplate>

    <!--
        Tooltip ControlTemplates
    -->


    <DataTemplate x:Key="HeaderBodyTemplate">
        <StackPanel>
            <Border Style="{StaticResource TooltipStripTopStyleWithContent}">
                <TextBlock x:Name="Title" Style="{StaticResource TooltipTitleStyle}" TextWrapping="Wrap" Margin="{StaticResource TitleWithoutSubtitleMargin}" Width="{StaticResource MaxTooltipContentWidth}" TextAlignment="Left" ls:TextBlockFormatter.SourceText="{Binding Path=(ls:AttachedProperties.InheritedTag), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource TranslatedStringConverter}}"/>
            </Border>
            <Rectangle Style="{StaticResource tooltipHeaderDividerLine}" />

            <TextBlock Style="{StaticResource TooltipDefaultTextStyle}" Margin="{StaticResource ExtraPadSpaceTop}"  TextWrapping="Wrap" Width="{StaticResource MaxTooltipContentWidth}" TextAlignment="Left" ls:TextBlockFormatter.SourceText="{Binding ., Converter={StaticResource TranslatedStringConverter}}"/>

        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="HeaderBodyLocaStringTemplate">
        <StackPanel>
            <Border Style="{StaticResource TooltipStripTopStyleWithContent}">
                <TextBlock x:Name="Title" Style="{StaticResource TooltipTitleStyle}" TextWrapping="Wrap" Margin="{StaticResource TitleWithoutSubtitleMargin}" Width="{StaticResource MaxTooltipContentWidth}" TextAlignment="Left" ls:TextBlockFormatter.SourceText="{Binding Path=(ls:AttachedProperties.InheritedTag), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
            </Border>
            <Rectangle Style="{StaticResource tooltipHeaderDividerLine}" />

            <TextBlock Style="{StaticResource TooltipDefaultTextStyle}" TextWrapping="Wrap" Width="{StaticResource MaxTooltipContentWidth}" TextAlignment="Left" ls:TextBlockFormatter.SourceText="{Binding .}"/>

        </StackPanel>
    </DataTemplate>

    <Style x:Key="InlineTooltip" TargetType="ls:LSTooltip" BasedOn="{StaticResource LSTooltipStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Inline, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                <Setter Property="PlayerId" Value="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ls:TooltipExtender.Owner" Value="{Binding Path=Inline.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=InlineParent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                <Setter Property="ls:TooltipExtender.Owner" Value="{Binding Path=InlineParent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>
    <Style x:Key="InlineTagTooltip" TargetType="ls:LSTooltip" BasedOn="{StaticResource InlineTooltip}">
        <Setter Property="ContentTemplate" Value="{StaticResource HeaderBodyTemplate}"/>
    </Style>

    <!-- Special tooltip template for surfaces -->
    <ControlTemplate x:Key="BaseSurfaceTooltipTemplate" TargetType="ContentControl">
        <ls:LSNineSliceImage Style="{StaticResource DefaultTooltip9Slice}">

            <ContentPresenter x:Name="tooltipContent" MaxWidth="{StaticResource MaxTooltipContentWidth}" />

            <b:Interaction.Triggers>
                <b:EventTrigger EventName="Loaded">
                    <ls:LSPlaySound Sound="UI_HUD_Shared_Tooltip_Show"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="Unloaded">
                    <ls:LSPlaySound Sound="UI_HUD_Shared_Tooltip_Hide"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </ls:LSNineSliceImage>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data), RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipStat">
                <Setter TargetName="tooltipContent" Property="Width" Value="{StaticResource MaxWideTooltipContentWidth}"/>
                <Setter TargetName="tooltipContent" Property="MaxWidth" Value="{StaticResource MaxWideTooltipContentWidth}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
        LSSpan Styling
    -->

    <Style x:Key="LSSpanStyle" TargetType="ls:LSSpan" BasedOn="{StaticResource BaseSpanStyle}">
        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
        <Setter Property="ls:TooltipExtender.PlayerId" Value="{Binding Path=PlayerId, RelativeSource={RelativeSource AncestorType=ls:LSElementCopy}}"/>
        <Setter Property="ls:TooltipExtender.Owner" Value="{Binding Path=(ls:TooltipExtender.Owner), RelativeSource={RelativeSource AncestorType=TextBlock}}"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding ., RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Primary}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ., ElementName=tooltipContent, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Primary}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TagTooltip, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TagTooltip, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                    <Condition Binding="{Binding TagType, RelativeSource={RelativeSource Mode=Self},Converter={StaticResource CompareStringConverter}, ConverterParameter='NoStyle'}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Tags}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TagTooltip, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Tags}" />
            </MultiDataTrigger>

            <Trigger Property="TagTooltip" Value="stub">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="ha80d9b90g21bcg44a2gbedfgc4672da63a81" Tag="hdcf47f9ag2bbfg4ce6gba35g33f0a1dd77b4" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Stats -->
            <Trigger Property="TagTooltip" Value="ArmourClass">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.ArmorClass, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HitPoints">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Health, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MeleeAttackBonus">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.MeleeAttackBonus, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="OffHandMeleeAttackBonus">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.OffHandMeleeAttackBonus, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="RangedAttackBonus">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.RangedAttackBonus, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="OffHandRangedAttackBonus">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.OffHandRangedAttackBonus, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellAttackBonus">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.SpellAttackBonus, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellDifficultyClass">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.SpellDifficultyCheck, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="ProficiencyBonus">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.ProficiencyBonus, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MovementSpeed">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.MovementResource, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Abilities -->
            <Trigger Property="TagTooltip" Value="Strength">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Dexterity">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[1], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Constitution">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[2], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Intelligence">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Wisdom">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Charisma">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[5], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Skills -->
            <Trigger Property="TagTooltip" Value="Deception">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[5].Skills[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Intimidation">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[5].Skills[1], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Performance">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[5].Skills[2], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Persuasion">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[5].Skills[3], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Acrobatics">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[1].Skills[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SleightOfHand">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[1].Skills[1], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Stealth">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[1].Skills[2], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Arcana">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3].Skills[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="History">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3].Skills[1], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Investigation">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3].Skills[2], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Nature">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3].Skills[3], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Religion">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3].Skills[4], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Athletics">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[0].Skills[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AnimalHandling">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4].Skills[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Insight">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4].Skills[1], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Medicine">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4].Skills[2], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Perception">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4].Skills[3], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Survival">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4].Skills[4], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Concepts -->
            <Trigger Property="TagTooltip" Value="Abilities">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h65fb6cd0g8607g4934gb7c4g104c02bc16b9" ls:AttachedProperties.InheritedTag="hd1f220a4g25dcg4b09g89c7g835f1226e19b" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AbilityCheck">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he7cfd682g4dc5g48a2gb092gf0a95867a56c" ls:AttachedProperties.InheritedTag="hfe8e49d4gaf99g4b2dg8daag33c2570ced45" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AbilityModifier">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="heb5af8afgc5feg469cg8511gb6e0ce14510f" ls:AttachedProperties.InheritedTag="ha064084dg4b5cg45cbg8645ge19ab3b65e21" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Action">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hfcd95fc3g4707g4262g80f7gacb371aa8e92" ls:AttachedProperties.InheritedTag="hba0d4fd0ga762g43bfgb86fg1c9c8982c6b2" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Advantage">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h079123e0geee2g410cgaaf3g7978a3dafdc7" ls:AttachedProperties.InheritedTag="h986f906agb172g4956g9567g5cbd32150349" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AlwaysPrepared">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he7ce4a41g56a9g4abdg9dbcg311275bfb868" ls:AttachedProperties.InheritedTag="h9d690e3fg8baag4917ga818gf127b3da7b93" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="ArmourProficiency">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he15abbcag7b88g4a1dg912cgfd0eb15c18af" ls:AttachedProperties.InheritedTag="hc59029cbgfc04g4b48gaef3gee950831af87" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MusicalInstrumentProficiency">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hda062ae6g33a4g408fgac35gba055bc72cdb" ls:AttachedProperties.InheritedTag="hafe95d21g2fb1g44c4g817agffd28dd019f7" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AttackRoll">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h4a99c2a6g82e6g42e4ga19dg92a27c7c8b77" ls:AttachedProperties.InheritedTag="h2f87537agd7e2g4e34g9dd7gf3a6f9baf298" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Background">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h3d129eb2g502dg477fgbfe7gad33c8b508a9" ls:AttachedProperties.InheritedTag="hd020153fg6a95g4ebegb6c3g043bb05c7bba" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="BackgroundGoals">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h5b3d2eb3g5ec9g47acg9d0ag456e4dae5d00" ls:AttachedProperties.InheritedTag="hb217debcgddbfg4a07g9822g0bdc63c1c178" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="CampSupplies">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h5ea38d02gf6cbg407aga1adg879a5b259f8d" ls:AttachedProperties.InheritedTag="h3cef439fg92cdg4b5bgb3fdg5fd5db63d33a" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Cantrip">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h9dd3b484g4092g4f1bgb272gb64846326fdb" ls:AttachedProperties.InheritedTag="h7175e72dgff3ag4f4cg99e0g98b787956275" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="CarryWeight">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h752667e2g5fc4g4d9cg851eg953eb1031379" ls:AttachedProperties.InheritedTag="h5993ac14ga81fg4902g90bage47c540e3fad" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Check">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h00e54a74ga0acg4b44g94d1gb31afcc7cd25" ls:AttachedProperties.InheritedTag="h3cbb470dg461bg4744gab02g515b1a981cbf" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="DifficultyClass">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="ha80d9b90g21bcg44a2gbedfgc4672da63a81" ls:AttachedProperties.InheritedTag="hdcf47f9ag2bbfg4ce6gba35g33f0a1dd77b4" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Dippable">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h0aca5069g42a6g4f69ga43ag1622334c5324" ls:AttachedProperties.InheritedTag="hb4d757c3g2661g4ccbg9572g14fc97502d31" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Disadvantage">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h3723f6abgc46cg42b4gb95eg2449e683e25a" ls:AttachedProperties.InheritedTag="h8d1a14e2gc17cg4ab6gbe5dg85557ae06a7e" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Downed">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h82d41284g4437g4202g859cgb7470b39bc22" ls:AttachedProperties.InheritedTag="h371b7c23g65beg45f4g8680gbcd03907e57f" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Encumbered">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h04852025ga3c0g47b2gbe02g7d22a3d12ab8" ls:AttachedProperties.InheritedTag="h4bffc7fbgfeaag44d9gb179gfd55c807b440" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Expertise">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hfa5d1a58ged7dg40c8g8783g14f58399525d" ls:AttachedProperties.InheritedTag="h314e6b7ege3a1g4333g8798g461554dfda30" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Finesse">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h69e74667g16c7g4826g823ege6fc84ef8d77" ls:AttachedProperties.InheritedTag="h95e41a96g0bbcg4932gabf4g1fda223a1ee9" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Thrown">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hed951236g8283g4cafgb782g053ae0e08595" ls:AttachedProperties.InheritedTag="h608694d6g3d2fg46acg8411gba7ce43e6a5e" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HeavilyEncumbered">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hde40b598g2937g47f5ga342g2480628c8106" ls:AttachedProperties.InheritedTag="h18065f0dg0169g4560gaff3g46fea09fd366" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HeavyArmour">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he3e40c35g7afeg4727g9233gd5b818f8a2c1" ls:AttachedProperties.InheritedTag="h378386abgaaa6g4852gb788g7f47b59ded25" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HighGroundRules">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h0e6581dag3136g4990gb14eg8a3f8f2ebba1" ls:AttachedProperties.InheritedTag="h34b3cc1ag0d97g481fg9bdfge1233821e3cb" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Immune">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h5dba2ef6g7b52g4167ga0f4g68342e3b3c29" ls:AttachedProperties.InheritedTag="hf49397fdgff4cg4749g91bbg904baf2aa1d9" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Inspiration">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hd14181dbgc234g48f9gbb1dg4a014583669e" ls:AttachedProperties.InheritedTag="h62619d26gd851g48a3g9c91ge21ad5928086" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Light">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h36799934g476eg45beg9ca6geb9589e75380" ls:AttachedProperties.InheritedTag="h5cc9c7e9g048ag43c7g8b08gba53ec2423a2" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="LongRest">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h631e68c7g95f2g4437ga8cfg13e7449d375f" ls:AttachedProperties.InheritedTag="h8d993cfag30d7g474fgaf29gdcdc3cd67bdc" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MeleeSpellAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hb7b21e1fg9371g4c90ga8ddg2bf398db2ea2" ls:AttachedProperties.InheritedTag="hd8904247g6498g4ff6g8285g89651ca68092" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MeleeWeaponAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="heda1f51fge118g41d4gb3abg9548ac7a7243" ls:AttachedProperties.InheritedTag="h2a2aa88bg8cfbg40c9gae2egffc0e0996787" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="OpportunityAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h4e93ecd7g953cg4af6gbddag3a698f2a6d0f" ls:AttachedProperties.InheritedTag="he003d2eeg8a1eg4b5fgbc67g1e78799e8610" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="PortentDie">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h386781f4gd840g4a70g853agc3149c6b35e4" ls:AttachedProperties.InheritedTag="hcf9b9da3g1648g44dbga313gd760dbf22a33" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="PreparedSpells">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hd23c59cegee91g48b4ga353g1b626f6f801b" ls:AttachedProperties.InheritedTag="h9d690e3fg8baag4917ga818gf127b3da7b93" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Proficiency">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h92a7f788g9fd4g419eg9c88gebd9d9bd1667" ls:AttachedProperties.InheritedTag="hc36a544fg6ae1g45f0gb74aga36d2961a9b1" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="RangedSpellAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h56d23fbbg59ddg491fg86e5g8999d98bcb09" ls:AttachedProperties.InheritedTag="h8b85b657g17fbg41fdg9b25g44d2d80d1700" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="RangedWeaponAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h31e87ff2g4eb9g4464gafdcg08e7468ed844" ls:AttachedProperties.InheritedTag="h68f90b52gfa7cg4be3ga606gfe6cef184567" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Reach">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h88026dfbgaedbg446fga24eg7397ffff5a2c" ls:AttachedProperties.InheritedTag="h4ca07d0bg10cag4f06g9bc6gf7ac4fe61322" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Resistant">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hd5621692g0ff6g4040g8836gb4ada9467f31" ls:AttachedProperties.InheritedTag="h8e7780bcg328cg44b3g88d8g94fd6001d60a" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="RitualSpell">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h7d0978a3gd7a9g4f28g9456g6ae4e367018e" ls:AttachedProperties.InheritedTag="h2dbc4086gf142g4edfgad33g0df59faa59da" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SavingThrow">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h9cca53d7g6b66g4224g94cdg918af4ee01fe" ls:AttachedProperties.InheritedTag="he05df610g11a9g404bgb057g9456bdbe6883" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="ShortRest">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h5f8707edgc150g4445gaefeg8fe0236fca03" ls:AttachedProperties.InheritedTag="h199b711fg12f1g49c1ga68dg576a864a1fc2" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Skill">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h499b7b98g1d6bg4cb9g87afgf4425c5e8dd1" ls:AttachedProperties.InheritedTag="h8caa094cg4365g483fgb63ag3e6267854a33" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SkillCheck">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="had597db8g1555g4d1cgb0e5g788de86ebf19" ls:AttachedProperties.InheritedTag="he4acf6a5gd317g410fgada7gddc109ec2f5b" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellSlot">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h2ace8502g2abag418ag96bbgfbe3b64d60dc" ls:AttachedProperties.InheritedTag="hbdeb8e2fg50e9g424fgbe6dg248268275452" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellcastingAbility">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hab459fecge010g4b13g8e54gb99d5a3a5620" ls:AttachedProperties.InheritedTag="h29093bb2g6cf3g4eadgba58ge1cefb1019eb" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellcastingAbilityModifier">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h3502e160g4d67g4686ga7f9gc2ab5c7619ad" ls:AttachedProperties.InheritedTag="hd58f8757gb382g4417g93edg53208eb2fd38" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="TemporaryHitPoints">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h55f7caaag8004g4057g9712g9fbfc31bfc49" ls:AttachedProperties.InheritedTag="h8aaf9bf5g6eb5g4417g9a93g89319d3c7c41" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="TwoHanded">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he07ef4d4gd151g4071gbcb4ge33046cb0453" ls:AttachedProperties.InheritedTag="hc18aa105g6477g47dcg9962gc0554eda3c77" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Versatile">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h755f7955g27b6g499fgb0aag0b51d65fc7a7" ls:AttachedProperties.InheritedTag="h3aa10065g9edcg407bg82f8g4c445f4c0ae2" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Vulnerable">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h4a1dfb35g09eag4137g90b3g2a6f0abc4feb" ls:AttachedProperties.InheritedTag="hb48857d9g5c80g46bfg912dge0e7c86fa6a4" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="WarlockSpellSlot">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h045fee7agb340g404cg8b4cgd638ab01f04e" ls:AttachedProperties.InheritedTag="h89f33eeeg9befg4fa7g96f6g715568bf3e9b" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="WildMagic">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h63415200gb6c7g41c2g9d2dg8a0341e5afe3" ls:AttachedProperties.InheritedTag="h04ded653gcf76g4ad4gaa36g523db04a9487" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="CriticalHit">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h3eb5959eg32a3g4476g907eg60d5c432b937" ls:AttachedProperties.InheritedTag="hcc0b883agcc2fg498egbb88g3274f89ded44" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="CharmedGroup">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h82396fb0gde0ag407egb22dgf910bf3bbe7d" ls:AttachedProperties.InheritedTag="h5061ac31ga861g4f56g8debg5544f103c9e9" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="CursedGroup">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hb0e52a34g0bc5g496ega45fg7b802ba9eb68" ls:AttachedProperties.InheritedTag="h989ffb42g54cbg44b6gbcc8g6bc9704215a9" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Concentration">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h824c03aag36cbg4859g9d41gf563c252b08e" ls:AttachedProperties.InheritedTag="hccfa6976gd950g49e0g88a3gbb0e8380175f" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MonkWeapon">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hf3d0709agb51eg40d0g8268g514eb9c9fd5a" ls:AttachedProperties.InheritedTag="h0db2dca8g05e6g448cga12ag87f170a5bef9" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="WeaponProficiency">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h15f47a7cg8dd9g411fgb258gd1795b955fb6" ls:AttachedProperties.InheritedTag="h4e3eb4bdg5df8g4319g9ebfgd6324f6565c7" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="ArmourNotProficient">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h776f82a2gd944g43cag8cfdg644b87077f31" ls:AttachedProperties.InheritedTag="h914b85fagc3feg4d93g840fgca1cb6984494" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="EvocationSpells">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hfa24f52dg98aag452fga843g24bd1c792907" ls:AttachedProperties.InheritedTag="h5e18aaf9g0ffeg45ddga42agfe7bbd7d73fd" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="IncapacitatingCondition">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hf7983b05gc0e4g472ag927bg08b3f56d7db4" ls:AttachedProperties.InheritedTag="he6eefc83g5a51g46a7ga1c2g982ee6dc72bc" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Extended types -->
            <Trigger Property="TagType" Value="Spell">
                <Setter Property="DataContext">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource TooltipContextMultiConverter}">
                            <Binding Path="TagType" RelativeSource="{RelativeSource Mode=Self}" />
                            <Binding Path="TagTooltip" RelativeSource="{RelativeSource Mode=Self}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TagType" Value="Status">
                <Setter Property="DataContext">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource TooltipContextMultiConverter}">
                            <Binding Path="TagType" RelativeSource="{RelativeSource Mode=Self}" />
                            <Binding Path="TagTooltip" RelativeSource="{RelativeSource Mode=Self}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TagType" Value="Passive">
                <Setter Property="DataContext">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource TooltipContextMultiConverter}">
                            <Binding Path="TagType" RelativeSource="{RelativeSource Mode=Self}" />
                            <Binding Path="TagTooltip" RelativeSource="{RelativeSource Mode=Self}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TagType" Value="ActionResource">
                <Setter Property="DataContext">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource TooltipContextMultiConverter}">
                            <Binding Path="TagType" RelativeSource="{RelativeSource Mode=Self}" />
                            <Binding Path="TagTooltip" RelativeSource="{RelativeSource Mode=Self}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TagType" Value="Text"/>
                    <Condition Property="TagInfo" Value="Warning"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.WarningSoft}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TagType" Value="Text"/>
                    <Condition Property="TagInfo" Value="ImportantWarning"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Warning}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ls:LSSpan" BasedOn="{StaticResource LSSpanStyle}"/>

    <!--
        Strips
    -->
    <Style x:Key="TooltipStripDP" TargetType="Grid">
        <Setter Property="Margin" Value="-40,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!-- Base Tooltip Strip Template -->
    <ControlTemplate x:Key="TooltipStripTemplate" TargetType="ContentControl">
        <Grid>

            <!-- Background Images -->
            <Grid x:Name="StripBackground" Style="{StaticResource TooltipStripDP}" >
                <Grid.Background>
                    <ImageBrush ImageSource="pack://application:,,,/Core;component/Assets/Tooltips/TT_hStrip.png" Stretch="Fill" TileMode="Tile" AlignmentY="Top" Opacity="{StaticResource TooltipStripOpacity}"/>
                </Grid.Background>
            </Grid>

            <!-- Text and other content -->
            <ContentPresenter/>
        </Grid>
    </ControlTemplate>

    <!-- Tooltip Strip Template for Magical Properties -->
    <ControlTemplate x:Key="TooltipStripMagicalPropertiesTemplate">
        <ls:LSNineSliceImage x:Name="Container" Slices="4,18" IconWidth="56" Margin="-40,-8,-40,-16" ImageSource="pack://application:,,,/Core;component/Assets/Tooltips/TT_full_magical_bg.png">
            <ContentPresenter x:Name="Content" VerticalAlignment="Center"  Margin="38,40"/>
        </ls:LSNineSliceImage>
    </ControlTemplate>

    <!-- Tooltip Strip Template for Metamagic section -->
    <ControlTemplate x:Key="TooltipStripMetamagicTemplate" TargetType="ContentControl">
        <ls:LSNineSliceImage x:Name="Container" Slices="4,18" IconWidth="56" Margin="-40,-8,-40,-16" ImageSource="pack://application:,,,/Core;component/Assets/Tooltips/TT_full_metamagic_bg.png">
            <ContentPresenter x:Name="Content" VerticalAlignment="Center" Margin="38,40" />
        </ls:LSNineSliceImage>
    </ControlTemplate>

    <!-- Tooltip Strip Template for Lore texts -->
    <ControlTemplate x:Key="TooltipStripLoreTextTemplate" TargetType="Control">
        <Grid Width="{StaticResource MaxTooltipContentWidth}" x:Name="ExtraDescBlock" Visibility="Visible">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Image x:Name="LoreIconQuote" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-8,4,8,0" Source="{StaticResource IconQuote}" Stretch="Uniform" Width="44" Opacity="0.6"  Visibility="Visible"/>
            <!-- We will re-add this, so just hide for the moment -->
            <TextBlock Style="{StaticResource TooltipSpecialDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding LoreDescription.Str}" Margin="0,12,0,16" Grid.Column="1" x:Name="ContentText" Width="Auto" >
                <TextBlock.Tag>
                    <MultiBinding Converter="{StaticResource LessThanOrEqualMultiConverter}">
                        <Binding Path="(ls:MeasurementProperties.TopY)" ElementName="ContentText"/>
                        <Binding Path="(ls:MeasurementProperties.BottomY)" ElementName="DecorationImage"/>
                    </MultiBinding>
                </TextBlock.Tag>
            </TextBlock>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                <Setter TargetName="LoreIconQuote" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="Tag" Value="{StaticResource TrueValue}" SourceName="ContentText">
                <Setter TargetName="ContentText" Property="Width" Value="500" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SummonDurationTemplate">
        <Grid>
            <Grid x:Name="StripBackground" Style="{StaticResource TooltipStripDP}" >
                <Grid.Background>
                    <ImageBrush ImageSource="pack://application:,,,/Core;component/Assets/Tooltips/TT_hStrip.png" Stretch="Fill" TileMode="Tile" AlignmentY="Top" Opacity="{StaticResource TooltipStripOpacity}"/>
                </Grid.Background>
            </Grid>

            <StackPanel x:Name="Duration" Orientation="Horizontal" Margin="{StaticResource DefaultMarginTopBottom}">
                <Image Source="{StaticResource TTHourglassImage}" Stretch="None" VerticalAlignment="Center" Margin="108,0,28,0" />
                <TextBlock x:Name="DurationText" FontSize="{StaticResource MediumFontSize}" VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Special}">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h2dc60835g9000g440fga70fg330291eda7eb"/>
                            <Binding Path="DataContext.Lifetime" RelativeSource="{RelativeSource Mode=Self}"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Lifetime}" Value="1">
                <Setter TargetName="DurationText" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h134a812fgc09eg43d7gbaadg9cb153532707"/>
                            <Binding Source="1"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Section separator -->

    <Style x:Key="SubSectionPanelStyle" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <!-- Removing this as it stops wrapping -->
        <!--<Setter Property="MaxHeight" Value="42"/>-->
        <Setter Property="Margin" Value="0,0,0,6"/>
    </Style>

    <Style x:Key="SubSectionImageStyle" TargetType="Image">
        <Setter Property="Stretch" Value="None" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="-12,0,0,0" />
    </Style>

    <!-- Metamagic + Upcast sections (DataContext = Item/Spell, Tag = Spell) -->
    <DataTemplate x:Key="SpellModifiersSection">
        <ContentControl x:Name="SpellModifiersSectionRoot" Template="{StaticResource TooltipStripMetamagicTemplate}" Margin="{StaticResource DefaultMarginBottom}" Visibility="Collapsed">
            <StackPanel>
                <!-- Upcast section -->
                <StackPanel x:Name="Upcast" Visibility="{Binding Tag.UpcastDescription, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource StringToVisibilityConverter}, FallbackValue=Collapsed}">
                    <StackPanel Style="{StaticResource SubSectionPanelStyle}">
                        <Image Source="{StaticResource IconUpcast}" Style="{StaticResource SubSectionImageStyle}" Margin="-4,0,8,0"/>
                        <TextBlock Style="{StaticResource TooltipSectionTitleStyle}" Visibility="Visible" VerticalAlignment="Center" Text="{Binding Source='h0f8acaadgd1f6g4a7ega71ageda041426536', Converter={StaticResource TranslatedStringConverter}}"/>
                    </StackPanel>

                    <TextBlock x:Name="UpcastDescription" Style="{StaticResource TooltipDescriptionStyle}" Visibility="Visible" Margin="{StaticResource DefaultMarginBottom}">
                        <b:Interaction.Behaviors>
                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Tag.UpcastDescription, RelativeSource={RelativeSource Mode=TemplatedParent}}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                        </b:Interaction.Behaviors>
                    </TextBlock>
                </StackPanel>

                <!-- Metamagic section -->
                <StackPanel x:Name="Metamagic" Visibility="{Binding Metamagic.Enabled, Converter={StaticResource BoolToVisibleConverter}}">
                    <!-- Empowered section -->
                    <StackPanel x:Name="EmpoweredMetamagicSectuib" Visibility="{Binding Metamagic.IsEmpowered, Converter={StaticResource BoolToVisibleConverter}}">
                        <StackPanel Style="{StaticResource SubSectionPanelStyle}">
                            <Image Source="{StaticResource MagicalProperties}" Style="{StaticResource SubSectionImageStyle}"/>
                            <TextBlock Style="{StaticResource TooltipSectionTitleStyle}" Visibility="Visible" VerticalAlignment="Center" Text="{Binding Source='h672032fcg3562g4dccgbe76g720228818da1', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource TooltipColor.Metamagic}"/>
                        </StackPanel>

                        <TextBlock x:Name="EmpoweredMetamagicText" Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='hc215d788gec91g4f43g97e9gdbf1a904e041', Converter={StaticResource TranslatedStringConverter}}" Margin="{StaticResource DefaultMarginBottom}"/>
                    </StackPanel>

                    <!-- Exclusive meta magic section (where only one can be enabled at a time)-->
                    <StackPanel x:Name="ExclusiveMetamagicSection" Visibility="Collapsed">
                        <StackPanel Style="{StaticResource SubSectionPanelStyle}">
                            <Image Source="{StaticResource MagicalProperties}" Style="{StaticResource SubSectionImageStyle}"/>
                            <TextBlock x:Name="MetamagicType" Style="{StaticResource TooltipSectionTitleStyle}" Visibility="Visible" VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Metamagic}"/>
                        </StackPanel>

                        <Control x:Name="metamagicEffectSection"/>
                    </StackPanel>
                </StackPanel>

                <!-- UnlockSpellVariant section -->
                <StackPanel x:Name="Variant" Visibility="{Binding HasVariant, Converter={StaticResource BoolToVisibleConverter}, FallbackValue=Collapsed}">
                    <StackPanel Style="{StaticResource SubSectionPanelStyle}">
                        <Image Source="{StaticResource MagicalProperties}" Style="{StaticResource SubSectionImageStyle}"/>
                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding VariantSourceName}" Style="{StaticResource TooltipSectionTitleStyle}" Visibility="Visible" VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Metamagic}"/>
                    </StackPanel>

                    <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding VariantSourceDescription}" TextWrapping="Wrap"/>
                </StackPanel>
            </StackPanel>
        </ContentControl>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Careful">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='hc60f063eg9286g4461g9781g3d6d66af7384', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h128bef82g7eb4g4ce1g9d55g5f0e816da7c5', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Distant">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='hb9ef85e6gb3d0g4295g8c89g69a102a0444a', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource IconRange}" Stretch="None" VerticalAlignment="Center" Margin="-8,0,0,0"/>
                                <TextBlock VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Primary}" FontSize="{StaticResource MediumFontSize}" ls:TextBlockFormatter.SourceText="{Binding Source='hb984e30dgab6ag4f54g883fg2f499f03b5f5', Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0}: '}"/>
                                <TextBlock Foreground="{StaticResource TooltipColor.Special}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}">
                                    <b:Interaction.Behaviors>
                                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Metamagic.OldValue}">
                                            <ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                                <Style TargetType="ls:LSRun">
                                                    <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
                                                </Style>
                                            </ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                        </ls:CtxTransStringRunGeneratorBehavior>
                                    </b:Interaction.Behaviors>
                                </TextBlock>
                                <Image Source="{StaticResource CTXArrowImage}" Stretch="None" VerticalAlignment="Center" Margin="8,0"/>
                                <TextBlock Foreground="{StaticResource TooltipColor.Highlight}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}">
                                    <b:Interaction.Behaviors>
                                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Metamagic.NewValue}">
                                            <ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                                <Style TargetType="ls:LSRun">
                                                    <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
                                                </Style>
                                            </ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                        </ls:CtxTransStringRunGeneratorBehavior>
                                    </b:Interaction.Behaviors>
                                </TextBlock>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Metamagic.NewValue.Text}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metamagic.OldValue.Text}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Extended">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='h9dacdfbcg09bag4071gb453g164764a12a95', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <TextBlock x:Name="GenericDuration" Style="{StaticResource TooltipDescriptionStyle}" Width="Auto" HorizontalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Source='h35573af4g0f87g4ce0gb759g4f4904c04e87', Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed"/>
                                <StackPanel x:Name="SpecificDuration" Orientation="Horizontal">
                                    <Image Source="{StaticResource IconDuration}" Stretch="None" VerticalAlignment="Center" Margin="-14,0,0,0"/>
                                    <TextBlock VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Primary}" FontSize="{StaticResource MediumFontSize}" ls:TextBlockFormatter.SourceText="{Binding Source='hea6f3450g9430g46bbga707g63aac4dd0bbc', Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0}: '}"/>
                                    <TextBlock Foreground="{StaticResource TooltipColor.Special}" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}">
                                        <b:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Metamagic.OldValue}">
                                                <ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                                    <Style TargetType="ls:LSRun">
                                                        <Setter Property="Text" Value="{Binding Text}"/>
                                                    </Style>
                                                </ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                            </ls:CtxTransStringRunGeneratorBehavior>
                                        </b:Interaction.Behaviors>
                                    </TextBlock>
                                    <Image Source="{StaticResource CTXArrowImage}" Stretch="None" VerticalAlignment="Center" Margin="8,0"/>
                                    <TextBlock Foreground="{StaticResource TooltipColor.Highlight}" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}">
                                        <b:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Metamagic.NewValue}">
                                                <ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                                    <Style TargetType="ls:LSRun">
                                                        <Setter Property="Text" Value="{Binding Text}"/>
                                                    </Style>
                                                </ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                            </ls:CtxTransStringRunGeneratorBehavior>
                                        </b:Interaction.Behaviors>
                                    </TextBlock>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Metamagic.NewValue.Text}" Value="">
                                    <Setter TargetName="SpecificDuration" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="GenericDuration" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metamagic.OldValue.Text}" Value="">
                                    <Setter TargetName="SpecificDuration" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="GenericDuration" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Heightened">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='hc6d29819g33d5g4ca7g9957gb8c47d823262', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='he1e8bfc3g6befg49afga083g284a45191d82', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Quickened">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='h7a4aed26ga038g4775g885ag81cc91f418ac', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="pack://application:,,,/Core;component/Assets/Shared/Resources/ap_h.png" Stretch="None" VerticalAlignment="Center" Margin="0,0,2,0"/>
                                <TextBlock VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}" Foreground="{StaticResource ActionPoint}" ls:TextBlockFormatter.SourceText="{Binding Source='hba0d4fd0ga762g43bfgb86fg1c9c8982c6b2', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                                <Image Source="{StaticResource CTXArrowImage}" Stretch="None" VerticalAlignment="Center" Margin="8,0"/>
                                <Image Source="pack://application:,,,/Core;component/Assets/Shared/Resources/bap_h.png" Stretch="None" VerticalAlignment="Center" Margin="0,0,2,0"/>
                                <TextBlock VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}" Foreground="{StaticResource BonusActionPoint}" ls:TextBlockFormatter.SourceText="{Binding Source='h7a2b85d6g3761g4f1fgb6b2g53cf10b449ea', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Subtle">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='h51c6fd28gb431g46bfg8415gad6a9a5151a4', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='hf22ebe0fgc409g42c0gacc9gdb230f898e4b', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Twinned">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='h8d567697g1843g4bdcga303g744782e3c803', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h5e3393e9g1125g4f89gba33g55e52287ac30', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Visibility, ElementName=EmpoweredMetamagicSectuib}" Value="Visible" />
                    <Condition Binding="{Binding Path=Visibility, ElementName=ExclusiveMetamagicSection}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="EmpoweredMetamagicText" Property="Margin" Value="0"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Visibility, ElementName=Upcast}" Value="Visible" />
                    <Condition Binding="{Binding Path=Visibility, ElementName=Metamagic}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="UpcastDescription" Property="Margin" Value="0"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Visibility, ElementName=Upcast}" Value="Visible">
                <Setter TargetName="SpellModifiersSectionRoot" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Visibility, ElementName=Metamagic}" Value="Visible">
                <Setter TargetName="SpellModifiersSectionRoot" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Visibility, ElementName=Variant}" Value="Visible">
                <Setter TargetName="SpellModifiersSectionRoot" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Status Damage section -->
    <DataTemplate x:Key="StatusDamageSection">
        <StackPanel x:Name="Container" Visibility="{Binding Damages.Count, Converter={StaticResource CountToVisibilityConverter}}" ls:AttachedProperties.InheritedTag="{Binding Damages, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='minmax'}">
            <StackPanel.Tag>
                <MultiBinding Converter="{StaticResource EqualConverter}">
                    <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="Container"/>
                    <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="Container"/>
                </MultiBinding>
            </StackPanel.Tag>
            <TextBlock x:Name="DamageRange" Style="{StaticResource TooltipTitleStyle}" >
                <ls:TextBlockFormatter.SourceText>
                    <!-- [1]~[2] Damage -->
                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                        <Binding Source="h4b0d6407g56b2g408cga7f8gda7a3c0affe4"/>
                        <Binding Path="(ls:AttachedProperties.InheritedTag).x" RelativeSource="{RelativeSource Mode=Self}"/>
                        <Binding Path="(ls:AttachedProperties.InheritedTag).y" RelativeSource="{RelativeSource Mode=Self}"/>
                    </MultiBinding>
                </ls:TextBlockFormatter.SourceText>
            </TextBlock>

            <StackPanel Orientation="Horizontal" Visibility="{Binding Path=Tag, ElementName=Container, Converter={StaticResource BoolToCollapsedConverter}}" Margin="{StaticResource ExtraPadSpace}">
                <ItemsControl ItemsSource="{Binding Damages}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" Margin="-10,0,0,0"/>

                <ItemsControl x:Name="DamagesList" ItemsSource="{Binding Damages}" AlternationCount="{Binding Damages.Count}" VerticalAlignment="Center" Margin="0,10,0,10" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel x:Name="DamageListEntry" Orientation="Horizontal">
                                <TextBlock x:Name="DamageLabel" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}">
                                    <ls:TextBlockFormatter.SourceText>
                                        <MultiBinding StringFormat="{}+{0}{1:+#;-#;}">
                                            <Binding Path="DiceTypeSet.Str"/>
                                            <Binding Path="DamageBonus"/>
                                        </MultiBinding>
                                    </ls:TextBlockFormatter.SourceText>
                                </TextBlock>

                                <Image HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageIconStyle}" />
                                <Control HorizontalAlignment="Left" VerticalAlignment="Center" Template="{StaticResource DamageTypeNameTemplate}">
                                    <Control.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource DamageValueTextStyle}"/>
                                    </Control.Resources>
                                </Control>

                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" ls:TextBlockFormatter.SourceText="{Binding DiceTypeSet.ExtraStr, StringFormat=' ({0})'}" Visibility="{Binding DiceTypeSet.ExtraStr, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}"/>
                            </StackPanel>

                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DiceTypeSet.Str}" Value=""/>
                                        <Condition Binding="{Binding DamageBonus}" Value="0"/>
                                        <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="DamageListEntry" Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger>

                                <DataTrigger Binding="{Binding DiceTypeSet.Str}" Value="">
                                    <Setter TargetName="DamageLabel" Property="ls:TextBlockFormatter.SourceText" Value="{Binding DamageBonus, StringFormat='{}{0:+#;-#;}'}"/>
                                </DataTrigger>

                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                    <Setter TargetName="DamageLabel" Property="ls:TextBlockFormatter.SourceText">
                                        <Setter.Value>
                                            <MultiBinding StringFormat="{}{0}{1:+#;-#;}">
                                                <Binding Path="DiceTypeSet.Str"/>
                                                <Binding Path="DamageBonus"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                <Setter TargetName="DamagesList" Property="Margin" Value="10,10,0,10"/>
            </DataTrigger>

            <!-- [1]~[2] Healing -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                    <Condition Binding="{Binding Damages[0].DamageType}" Value="HealAmount"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DamageRange" Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="heee371a2g2a69g4c4bga922g82fb51e57290"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="Container"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="Container"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- [1] Damage -->
            <DataTrigger Binding="{Binding Path=Tag, ElementName=Container}" Value="True">
                <Setter TargetName="DamageRange" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h7c2d15afg7583g4e8agb6ffgb06a0d6b6992"/>
                            <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="Container"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <!-- [1] Healing -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag, ElementName=Container}" Value="True"/>
                    <Condition Binding="{Binding Damages[0].DamageType}" Value="None"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DamageRange" Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="he522728cgcbb9g4854g80e7gfcd1610b2e34"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="Container"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- [1]~[2] Damage Per Turn -->
            <DataTrigger Binding="{Binding DurationType}" Value="Timer">
                <Setter TargetName="DamageRange" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h90a7ff55g589dg43f4gb38egd040fea0d635"/>
                            <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="Container"/>
                            <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="Container"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <!-- [1]~[2] Healing Per Turn -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                    <Condition Binding="{Binding Damages[0].DamageType}" Value="HealAmount"/>
                    <Condition Binding="{Binding DurationType}" Value="Timer"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DamageRange" Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="heee371a2g2a69g4c4bga922g82fb51e57290"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="Container"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="Container"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- [1] Damage Per Turn-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag, ElementName=Container}" Value="True"/>
                    <Condition Binding="{Binding DurationType}" Value="Timer"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DamageRange" Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h7e1aa3a5g2d52g4179gbce9gbdb4182f5211"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="Container"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- [1] Healing Per Turn -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag, ElementName=Container}" Value="True"/>
                    <Condition Binding="{Binding Damages[0].DamageType}" Value="None"/>
                    <Condition Binding="{Binding DurationType}" Value="Timer"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DamageRange" Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h151e5400g4218g486fga6ccg5bc82239aa09"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="Container"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(ls:AttachedProperties.InheritedTag).x, ElementName=Container}" Value="0" />
                    <Condition Binding="{Binding Path=(ls:AttachedProperties.InheritedTag).y, ElementName=Container}" Value="0" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DamageRange" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="StatusListElement">
        <DockPanel x:Name="StatusRoot" Background="Transparent" Visibility="Visible" ClipToBounds="False" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right">
            <Ellipse x:Name="SectionIcon" DockPanel.Dock="Left" Style="{StaticResource roundStatusIcon}" Fill="{Binding Brush}" Visibility="{Binding Brush, Converter={StaticResource NullToCollapsedConverter}}"/>

            <TextBlock x:Name="SectionDuration" DockPanel.Dock="Left" Margin="14,0,0,0" Style="{StaticResource TooltipDescriptionStyle}" Width="Auto" TextWrapping="Wrap" Foreground="{StaticResource TooltipColor.Secondary}" VerticalAlignment="Center">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                        <Binding Source="h6e1e86b5g98f8g42c8ga383gf770838ca349"/>
                        <Binding Path="Duration"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger  Binding="{Binding Statuses.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0, FallbackValue=True}" Value="False" >
                <Setter Property="ToolTipService.IsEnabled" Value="False" TargetName="StatusRoot"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Duration, Converter={StaticResource LessThanConverter}, ConverterParameter=1.1}" Value="True">
                <Setter TargetName="SectionDuration" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h10fa4ad9ga019g4a5dg96edg94a25156b950"/>
                            <Binding Path="Duration"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Duration, Converter={StaticResource LessThanConverter}, ConverterParameter=0.1}" Value="True">
                <Setter TargetName="SectionDuration" Property="Text" Value="{Binding Source='h50ea69dagf61eg466fga47eg530c55933114',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DurationType}" Value="Permanent">
                <Setter TargetName="SectionDuration" Property="Text" Value="{Binding Source='hf5d92374g1f72g4b7bga1d5g178ff9c36ed5',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DurationType}" Value="UntilRest">
                <Setter TargetName="SectionDuration" Property="Text" Value="{Binding Source='h50ea69dagf61eg466fga47eg530c55933114',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="StatusList">
        <ItemsControl ItemsSource="{Binding .}" HorizontalAlignment="Center" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" AlternationCount="{Binding Count}"  Margin="0,0,0,10">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <ItemsControl x:Name="ItemEntry" ItemsSource="{Binding Details}" VerticalAlignment="Center" Margin="0,6,0,0" ItemTemplate="{StaticResource StatusListElement}"/>

                    <DataTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter TargetName="ItemEntry" Property="Margin" Value="0"/>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

    </DataTemplate>

    <!-- Spell Damage section -->
    <DataTemplate x:Key="SpellDamageSection">
        <StackPanel x:Name="SpellDamageMainPanel" ls:TooltipExtender.Owner="{Binding Path=Owner,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ls:LSElementCopy}}" ClipToBounds="False" Visibility="{Binding Damages.Count, Converter={StaticResource CountToVisibilityConverter}, FallbackValue=Collapsed}">
            <b:Interaction.Behaviors>
                <ls:CollectionFilterBehavior x:Name="DisplayedDamageModifiers" ItemsSource="{Binding DamageModifiers}" Predicate="{Binding DamageModifiersPredicate}"/>
            </b:Interaction.Behaviors>

            <StackPanel.Tag>
                <MultiBinding Converter="{StaticResource EqualConverter}">
                    <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                    <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="SpellDamageMainPanel"/>
                </MultiBinding>
            </StackPanel.Tag>
            <TextBlock x:Name="SpellDamageText" VerticalAlignment="Top" HorizontalAlignment="Left" Style="{StaticResource TooltipTitleStyle}">
                <ls:TextBlockFormatter.SourceText>
                    <!-- [1]~[2] Damage -->
                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                        <Binding Source="h4b0d6407g56b2g408cga7f8gda7a3c0affe4"/>
                        <Binding Path="(ls:AttachedProperties.InheritedTag).x" RelativeSource="{RelativeSource Mode=Self}"/>
                        <Binding Path="(ls:AttachedProperties.InheritedTag).y" RelativeSource="{RelativeSource Mode=Self}"/>
                    </MultiBinding>
                </ls:TextBlockFormatter.SourceText>
            </TextBlock>

            <StackPanel x:Name="SpellDiceContainer" VerticalAlignment="Center" ClipToBounds="False" Visibility="{Binding Path=Tag, ElementName=SpellDamageMainPanel, Converter={StaticResource BoolToCollapsedConverter}}">
                <StackPanel Orientation="Horizontal">
                    <ItemsControl x:Name="DiceIcon" VerticalAlignment="Top" HorizontalAlignment="Left" ItemsSource="{Binding Damages}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" Margin="-10,0,0,0"/>

                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <ItemsControl x:Name="DamagesList" ItemsSource="{Binding Damages}" ls:AttachedProperties.InheritedTag="{Binding IsDirectDamage}" AlternationCount="{Binding Damages.Count}" VerticalAlignment="Center">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <WrapPanel x:Name="DamageListEntry" Orientation="Horizontal">
                                        <TextBlock x:Name="DiceValue" Style="{StaticResource DamageValueTextStyle}">
                                            <ls:TextBlockFormatter.SourceText>
                                                <MultiBinding StringFormat="{}+{0}{1:+#;-#;}{2: /#;'';''}">
                                                    <Binding Path="DiceTypeSet.Str"/>
                                                    <Binding Path="DamageBonus"/>
                                                    <Binding Path="DamageDivider"/>
                                                </MultiBinding>
                                            </ls:TextBlockFormatter.SourceText>
                                        </TextBlock>
                                        <Image HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageIconStyle}" />
                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}"/>
                                        <Control HorizontalAlignment="Left" VerticalAlignment="Center" Template="{StaticResource DamageTypeNameTemplate}">
                                            <Control.Resources>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource DamageValueTextStyle}"/>
                                            </Control.Resources>
                                        </Control>
                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" ls:TextBlockFormatter.SourceText="{Binding DiceTypeSet.ExtraStr, StringFormat=' ({0})'}" Visibility="{Binding DiceTypeSet.ExtraStr, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}"/>
                                        <TextBlock x:Name="IgnoreResistanceTypeText" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" Visibility="Collapsed"/>
                                    </WrapPanel>

                                    <DataTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding DiceTypeSet.Str}" Value=""/>
                                                <Condition Binding="{Binding DamageBonus}" Value="0"/>
                                                <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="DamageListEntry" Property="Visibility" Value="Collapsed"/>
                                        </MultiDataTrigger>

                                        <DataTrigger Binding="{Binding DiceTypeSet.Str}" Value="">
                                            <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="DiceValue">
                                                <Setter.Value>
                                                    <MultiBinding StringFormat="{}{0:+#;-#;}{1: /#;'';''}">
                                                        <Binding Path="DamageBonus"/>
                                                        <Binding Path="DamageDivider"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>

                                        <!-- First in the list should not include a '+' in front of the damage -->
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="DiceValue">
                                                <Setter.Value>
                                                    <MultiBinding StringFormat="{}{0}{1:+#;-#;}{2: /#;'';''}">
                                                        <Binding Path="DiceTypeSet.Str"/>
                                                        <Binding Path="DamageBonus"/>
                                                        <Binding Path="DamageDivider"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <!-- Hidden weapon damages -->
                                        <DataTrigger Binding="{Binding DamageType}" Value="Weapon">
                                            <Setter TargetName="DamageListEntry" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding IgnoreResistanceType}" Value="Resistant">
                                            <Setter TargetName="IgnoreResistanceTypeText" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="IgnoreResistanceTypeText" Property="Text" Value="{Binding Source='h85ad064cg8cd0g4f24gae50g6257bd080eca', StringFormat=' ({0})', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>

										<DataTrigger Binding="{Binding Path=DataContext.Intent, ElementName=root}" Value="Summon">
											<Setter TargetName="IgnoreResistanceTypeText" Property="Visibility" Value="Hidden"/>
										</DataTrigger>

										<DataTrigger Binding="{Binding Path=DataContext.Spell.SpellType, ElementName=root}" Value="Wall">
											<Setter TargetName="IgnoreResistanceTypeText" Property="Visibility" Value="Hidden"/>
										</DataTrigger>

                                        <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                                            <Setter TargetName="DamageListEntry" Property="MaxWidth" Value="520"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>


                        <ItemsControl x:Name="DamageModifiersList" ItemsSource="{Binding FilteredItems, ElementName=DisplayedDamageModifiers}" AlternationCount="{Binding FilteredItems.Count, ElementName=DisplayedDamageModifiers}" VerticalAlignment="Center">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <WrapPanel x:Name="DamageModifierListEntry" Orientation="Horizontal">
                                        <TextBlock x:Name="ModifierValue" Style="{StaticResource DamageValueTextStyle}" Text="{Binding Value, StringFormat={}{0:+#;-#;}}"/>

                                        <Image HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageIconStyle}" />
                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}"/>
                                        <Control HorizontalAlignment="Left" VerticalAlignment="Center" Template="{StaticResource DamageTypeNameTemplate}">
                                            <Control.Resources>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource DamageValueTextStyle}"/>
                                            </Control.Resources>
                                        </Control>

                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}">
											<ls:TextBlockFormatter.SourceText>
												<MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
													<Binding Source="h1109c54dg7c37g4a86gabcag745a8199cc5e"/>
													<Binding Path="SourceType" Converter="{StaticResource EnumTranslatedStringConverter}"/>
													<Binding Path="SourceId"/>
													<Binding Path="Name"/>
												</MultiBinding>
											</ls:TextBlockFormatter.SourceText>
                                        </TextBlock>

                                    </WrapPanel>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Value}" Value="0">
                                            <Setter TargetName="DamageModifierListEntry" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                                            <Setter TargetName="DamageModifierListEntry" Property="MaxWidth" Value="520"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding FilteredItems.Count, ElementName=DisplayedDamageModifiers, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SpellDamageMainPanel" Property="ls:AttachedProperties.InheritedTag">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ModifiedRollOutcomeConverter}" ConverterParameter="minmax">
                            <Binding Path="Damages"/>
                            <Binding Path="FilteredItems" ElementName="DisplayedDamageModifiers"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding FilteredItems.Count, ElementName=DisplayedDamageModifiers, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False">
                <Setter TargetName="SpellDamageMainPanel" Property="ls:AttachedProperties.InheritedTag" Value="{Binding Damages, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='minmax'}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SpellDamageMainPanel" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SpellDamageMainPanel" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ResultSections.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SpellDamageMainPanel" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Name, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False">
                <Setter TargetName="SpellDamageMainPanel" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Visibility}" Value="Collapsed">
                <Setter TargetName="SpellDamageMainPanel" Property="Margin" Value="0" />
            </DataTrigger>


            <!-- [1]~[2] Healing -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                    <Condition Binding="{Binding Damages[0].DamageType}" Value="HealAmount"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="SpellDamageText" Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="heee371a2g2a69g4c4bga922g82fb51e57290"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="SpellDamageMainPanel"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- [1] Damage -->
            <DataTrigger Binding="{Binding Path=Tag, ElementName=SpellDamageMainPanel}" Value="True">
                <Setter TargetName="SpellDamageText" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h7c2d15afg7583g4e8agb6ffgb06a0d6b6992"/>
                            <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <!-- [1] Healing -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag, ElementName=SpellDamageMainPanel}" Value="True"/>
                    <Condition Binding="{Binding Damages[0].DamageType}" Value="HealAmount"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="SpellDamageText" Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="he522728cgcbb9g4854g80e7gfcd1610b2e34"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- [1] Healing -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag, ElementName=SpellDamageMainPanel}" Value="True"/>
                    <Condition Binding="{Binding Damages[0].DamageType}" Value="None"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="SpellDamageText" Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="he522728cgcbb9g4854g80e7gfcd1610b2e34"/>
                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding IncompleteWeaponDamage}" Value="True">
                <Setter TargetName="SpellDamageText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb115268eg66f3g4f91g827bgdbad9a941c6b', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(ls:AttachedProperties.InheritedTag).x, ElementName=SpellDamageMainPanel}" Value="0" />
                    <Condition Binding="{Binding Path=(ls:AttachedProperties.InheritedTag).y, ElementName=SpellDamageMainPanel}" Value="0" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="SpellDamageText" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Permanent warnings section -->
    <DataTemplate x:Key="PermanentWarningSection">
        <ItemsControl x:Name="PermanentWarnings" ItemsSource="{Binding PermanentWarnings}" Margin="{StaticResource AdditionalMessagesMargin}" Visibility="{Binding PermanentWarnings.Count, Converter={StaticResource CountToVisibilityConverter}}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock VerticalAlignment="Center" MaxWidth="{StaticResource DetailSectionWidth}" Foreground="{StaticResource TooltipColor.Secondary}" Style="{StaticResource TooltipStringBodyStyle}" Margin="8,2,0,2">
                        <b:Interaction.Behaviors>
                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding .}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                        </b:Interaction.Behaviors>
                    </TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>
    <DataTemplate x:Key="SpellSchoolTitle">
        <TextBlock x:Name="txt" Style="{StaticResource TooltipSubTitleNoCollapseStyle}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(ls:AttachedProperties.InheritedTag), RelativeSource={RelativeSource Mode=Self}}" Value="SmallSize">
                <Setter TargetName="txt" Property="FontSize" Value="{StaticResource SmallFontSize}"/>
                <Setter TargetName="txt" Property="Margin" Value="0"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsSpell}" Value="False">
                <Setter Property="Text" TargetName="txt" Value="{Binding GroupType, Converter={StaticResource EnumTranslatedStringConverter}}"/>
            </DataTrigger>

            <!--cantrips-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Abjuration"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt" Value="{Binding Source='h84d192f5g6473g4932gb6a8g1387eae58320',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Conjuration"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt" Value="{Binding Source='he52cfcbag8a50g453agb4c8g2fac2ff17c10',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Divination"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt" Value="{Binding Source='h39ad0edbg77d3g4021g9e2eg191042e6d467',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Enchantment"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt" Value="{Binding Source='h79636df9g296cg4bfdga59cgb7db7d3419ab',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Evocation"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt" Value="{Binding Source='h42bcd6b2g9deag452cgb9adg4ce569758b0f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Illusion"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt" Value="{Binding Source='h6b2a69f0g57e8g45c0gb271gbd317790bc8f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Necromancy"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt" Value="{Binding Source='h1431ea5eg3cd6g464dga8c6gfd9653e48f7e',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Transmutation"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt" Value="{Binding Source='h2e7f0955g4be5g4a21g8f1cg221d590807d4',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!--Levelled Spells W SpellSchool-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Abjuration"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h3d4828d5gd55ag409dgae7dg3bd8a511ab88"/>
                                <Binding Path="Level" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Conjuration"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="ha6d3a561g6626g44fegbbd4g77ad67a79367"/>
                                <Binding Path="Level" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Divination"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h4059b271gffb3g401dga73ag759f7727aa35"/>
                                <Binding Path="Level" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Enchantment"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h53d95750g137ag47f1ga9f4g80a302360a96"/>
                                <Binding Path="Level" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Evocation"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h3fe64b3dgfa67g41acg8626g616f6431c50e"/>
                                <Binding Path="Level" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Illusion"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h777f9097ge5e2g4741g8b78gde7559263ce5"/>
                                <Binding Path="Level" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Necromancy"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h3818a08fg8f0fg47d1gaadegffd9ad47278e"/>
                                <Binding Path="Level" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Transmutation"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="had85051cg9819g432ag8014gcd586df07944"/>
                                <Binding Path="Level" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Text, ElementName=txt, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="True">
                <Setter TargetName="txt" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Items Boosts -->
    <DataTemplate x:Key="ItemBoostsSection">
        <ItemsControl ItemsSource="{Binding .}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" AlternationCount="{Binding Count}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <DockPanel x:Name="EntryContainer" Margin="{StaticResource DefaultMarginTop}" Width="{StaticResource MaxTooltipContentWidth}" HorizontalAlignment="Left">
                        <DockPanel.ToolTip>
                            <ls:LSTooltip Content="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </DockPanel.ToolTip>

                        <Grid x:Name="Icon" DockPanel.Dock="Left" Visibility="Collapsed" Margin="{StaticResource DefaultMarginRight}">
                            <Rectangle x:Name="IconBorder" Style="{StaticResource TooltipBoostIconBorderDashedStyle}" Width="{StaticResource TooltipActionIconFrameSize}" Height="{StaticResource TooltipActionIconFrameSize}"/>
                            <Rectangle x:Name="IconImage" Style="{StaticResource TooltipBoostIconStyle}" Fill="{Binding Icon}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Width="{StaticResource TooltipActionIconSize}" Height="{StaticResource TooltipActionIconSize}">
                            </Rectangle>
                        </Grid>

                        <StackPanel DockPanel.Dock="Left" VerticalAlignment="Center" Background="Transparent" Margin="0,4,0,0">
                            <WrapPanel HorizontalAlignment="Stretch">
                                <TextBlock x:Name="Name" ls:TextBlockFormatter.SourceText="{Binding Name}" FontSize="{StaticResource MediumFontSize}" Foreground="{StaticResource TooltipColor.Highlight}" Style="{StaticResource TooltipDefaultTextStyle}" Margin="0,0,0,0"/>
                                <TextBlock x:Name="Value" Text="{Binding Value, StringFormat={}{0:+#;-#;''}}" Visibility="Visible" FontSize="{StaticResource MediumFontSize}" Style="{StaticResource TooltipBaseTextStyle}" Margin="10,0,0,0"/>
                                <TextBlock x:Name="Maximum" Visibility="Collapsed" Style="{StaticResource TooltipBaseTextStyle}" FontSize="{StaticResource MediumFontSize}" Margin="10,0,0,0">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                            <Binding Source="h29900944ga4c3g49ffg8a15g5970c20a9cdd"/>
                                            <Binding Path="Maximum"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </WrapPanel>

                            <ContentPresenter ContentTemplate="{StaticResource SpellSchoolTitle}" Content="{Binding UnlockSpell}" Width="430" HorizontalAlignment="Left" ls:AttachedProperties.InheritedTag="SmallSize"/>
                        </StackPanel>
                    </DockPanel>

                    <DataTemplate.Triggers>

                        <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                            <Setter  TargetName="Name" Property="FontWeight" Value="DemiBold"/>
                            <Setter TargetName="Name" Property="FontSize" Value="{DynamicResource SmallFontSize}"/>
                            <Setter  TargetName="Value" Property="FontWeight" Value="DemiBold"/>
                            <Setter TargetName="Value" Property="FontSize" Value="{DynamicResource SmallFontSize}"/>
                            <Setter  TargetName="Maximum" Property="FontWeight" Value="DemiBold"/>
                            <Setter TargetName="Maximum" Property="FontSize" Value="{DynamicResource SmallFontSize}"/>
                        </DataTrigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter TargetName="EntryContainer" Property="Margin" Value="0"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding Type}" Value="WeaponEnchantment">
                            <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IconImage" Property="Width" Value="56" />
                            <Setter TargetName="IconImage" Property="Height" Value="56" />
                            <Setter TargetName="IconImage" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{StaticResource IconDippable}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Type}" Value="UnlockSpell">
                            <Setter TargetName="Value" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                            <Setter TargetName="Value" Property="Foreground" Value="{StaticResource TooltipColor.Alert}"/>
                            <Setter TargetName="Name" Property="Foreground" Value="{StaticResource TooltipColor.Alert}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding GUID}" Value="Movement">
                            <Setter TargetName="Value" Property="Text" Value="{Binding DValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short',StringFormat='+{0}'}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Maximum, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                            <Setter TargetName="Maximum" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <Style x:Key="ItemBoostsContentPresenterStyle" TargetType="ContentPresenter">
        <Setter Property="ContentTemplate" Value="{StaticResource ItemBoostsSection}" />
    </Style>

    <!-- Items Passives -->
    <DataTemplate x:Key="ItemPassivesSection">
        <DataTemplate.Resources>
            <Style TargetType="ls:LSSpan" BasedOn="{StaticResource LSSpanStyle}">
                <Style.Triggers>
                    <Trigger Property="TagType" Value="hl">
                        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Secondary}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </DataTemplate.Resources>
        <ItemsControl ItemsSource="{Binding .}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" AlternationCount="{Binding Count}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid x:Name="EntryContainer" Margin="{StaticResource DefaultMarginTop}" Width="{StaticResource MaxTooltipContentWidth}" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="IconContainer" Grid.Column="0" Visibility="{Binding IconName, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}" Width="{StaticResource TooltipActionIconSize}" Height="{StaticResource TooltipActionIconSize}" Tag="Controller" VerticalAlignment="Top" HorizontalAlignment="Left" ClipToBounds="False">
                            <Image Width="{StaticResource TooltipActionIconSize}" Height="{StaticResource TooltipActionIconSize}" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform">
                                <Image.Source>
                                    <MultiBinding Converter="{StaticResource IconIdToSourceConverter}">
                                        <Binding Source="Assets/Tooltips/Icons/"/>
                                        <Binding Path="IconName"/>
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                            <Ellipse Height="56" Width="56" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Brush}" />
                        </Grid>

                        <TextBlock x:Name="PassiveInfo" Grid.Column="1" FontSize="{StaticResource MediumFontSize}" TextWrapping="Wrap" ls:MeasurementProperties.CalculateMeasures="True" Style="{StaticResource TooltipSectionTextStyle}" Foreground="{StaticResource TooltipColor.Secondary}">
                            <TextBlock.Tag>
                                <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                                    <Binding Path="(ls:MeasurementProperties.TopY)" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="(ls:MeasurementProperties.BottomY)" ElementName="DecorationImage"/>
                                </MultiBinding>
                            </TextBlock.Tag>
                            <Span ls:TextBlockFormatter.SourceText="{Binding Name, StringFormat='{}{0}:'}" Foreground="{StaticResource TooltipColor.Highlight}" FontWeight="SemiBold"/>
                            <Span>
                                <b:Interaction.Behaviors>
                                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                </b:Interaction.Behaviors>
                            </Span>
                        </TextBlock>
                        <Grid.ToolTip>
                            <ls:LSTooltip Content="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Grid.ToolTip>
                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Keyboard">
                            <Setter TargetName="PassiveInfo" Property="Width" Value="725"/>
                            <Setter TargetName="IconContainer" Property="Tag" Value="Keyboard"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="Keyboard">
                            <Setter TargetName="PassiveInfo" Property="Width" Value="725"/>
                            <Setter TargetName="IconContainer" Property="Tag" Value="Keyboard"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Tag,ElementName=IconContainer}" Value="Keyboard"/>
                                <Condition Binding="{Binding ElementName=PassiveInfo,Path=Tag}"  Value="{StaticResource FalseValue}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PassiveInfo" Property="Width" Value="575" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Visibility, ElementName=IconContainer}" Value="Visible"/>
                                <Condition Binding="{Binding Path=Tag,ElementName=IconContainer}" Value="Keyboard"/>
                                <Condition Binding="{Binding ElementName=PassiveInfo,Path=Tag}"  Value="{StaticResource FalseValue}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PassiveInfo" Property="Width" Value="500" />
                        </MultiDataTrigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter TargetName="EntryContainer" Property="Margin" Value="0"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Visibility, ElementName=IconContainer}" Value="Visible">
                            <Setter TargetName="IconContainer" Property="Margin" Value="0,0,8,0"/>
                            <Setter TargetName="PassiveInfo" Property="MaxWidth" Value="{StaticResource MaxTooltipContentWidth}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Tag,ElementName=IconContainer}" Value="Controller">
                            <Setter  TargetName="PassiveInfo" Property="FontWeight" Value="DemiBold"/>
                            <Setter TargetName="PassiveInfo" Property="FontSize" Value="{DynamicResource SmallFontSize}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <Style x:Key="ItemPassivesContentPresenterStyle" TargetType="ContentPresenter">
        <Setter Property="ContentTemplate" Value="{StaticResource ItemPassivesSection}" />
    </Style>

    <!-- ============== Item Active Conditions ============== -->

    <!--These two next DataTemplates are similar, if you change one check if you need to change the other one too.-->

    <DataTemplate x:Key="ActiveConditionBasicTemplate" DataType="{x:Type ls:VMStatus}">
        <Grid x:Name="Root" Margin="0,2" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Margin="0,0,16,0">
                <Ellipse Width="48" Height="48" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Icon}" />
                <ls:LSPie x:Name="Progression" Value="{Binding RemainingPercentage, Converter={StaticResource MultiplierConverter}, ConverterParameter='0.8'}" SweepDirection="Clockwise" Width="64" Height="64" RenderTransformOrigin="0.5 0.5">
                    <Grid.RenderTransform>
                        <RotateTransform Angle="-126"/>
                    </Grid.RenderTransform>
                    <Image Source="pack://application:,,,/Core;component/Assets/Tooltips/status_progressAround.png" Stretch="UniformToFill" Width="64" Height="64" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </ls:LSPie>

                <Image x:Name="DurationIcon" Source="pack://application:,,,/Core;component/Assets/Tooltips/ico_statusTimer.png" Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Center" Width="48" Margin="-26,0,0,0" Visibility="Collapsed"/>
            </Grid>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DurationType}" Value="Timer">
                <Setter TargetName="DurationIcon" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Duration}" Value="0"/>
                    <Condition Binding="{Binding DurationType}" Value="Timer"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DurationIcon" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Duration}" Value="-1">
                <Setter TargetName="Progression" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="StatusPathStyle" TargetType="Path">
        <Setter Property="StrokeThickness" Value="6"/>
        <Setter Property="noesis:Element.PPAAIn" Value="0.3"/>
        <Setter Property="noesis:Element.PPAAOut" Value="2.0"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="72"/>
        <Setter Property="Height" Value="72"/>
        <Setter Property="Stroke" Value="{StaticResource LS_baseTxtColor}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Data">
            <Setter.Value>
                <EllipseGeometry RadiusX="34" RadiusY="34" Center="36,36"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding LifeTime, Converter={StaticResource TimeToTurnConverter}}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Physical}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Stroke" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="HealAmount">
                <Setter Property="Stroke" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="SingleIconStatusTemplate" DataType="{x:Type ls:VMStatus}">
        <Grid Width="72" Margin="0,0,9,0" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True">
            <Ellipse Width="48" Height="48" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Icon}" />
            <ls:LSPie x:Name="Progression" Value="{Binding RemainingPercentage, Converter={StaticResource MultiplierConverter}, ConverterParameter='0.88'}" SweepDirection="Clockwise" Width="72" Height="72" RenderTransformOrigin="0.5 0.5">
                <Grid.RenderTransform>
                    <RotateTransform Angle="104"/>
                </Grid.RenderTransform>
                <Path Style="{StaticResource StatusPathStyle}">
                    <b:Interaction.Behaviors>
                        <ls:PathDashBehavior SegmentCount="{Binding LifeTime, Converter={StaticResource TimeToTurnConverter}}" FixedGapLength="1.4" StartAngle="-90"/>
                    </b:Interaction.Behaviors>
                </Path>
            </ls:LSPie>

            <TextBlock x:Name="DurationText" Text="{Binding Duration}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,0,-12" Foreground="{StaticResource LS_PrimaryColor}"
                       noesis:Text.Stroke="{StaticResource LS_PrimaryColorOutlineColor}" noesis:Text.StrokeThickness="6" Style="{StaticResource NarrowTooltipModifierText}"
                       FontSize="{StaticResource SmallFontSize}"/>
        </Grid>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Duration}" Value="0"/>
                    <Condition Binding="{Binding DurationType}" Value="Timer"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DurationText" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Duration}" Value="-1">
                <Setter TargetName="Progression" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="DurationText" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ActiveConditionCompleteTemplate" DataType="{x:Type ls:VMStatus}">
        <Grid x:Name="Root" Margin="0,4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ContentPresenter Grid.Column="0" Margin="0,0,16,0" Content="{Binding .}" ContentTemplate="{StaticResource SingleIconStatusTemplate}"/>

            <TextBlock Grid.Column="1" ls:TextBlockFormatter.SourceText="{Binding Name}" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" Foreground="{StaticResource TooltipColor.Secondary}"
                       TextTrimming="CharacterEllipsis"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ObjectStatusTemplate" DataType="{x:Type ls:VMStatus}">
        <Grid x:Name="Root" Margin="0,2" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" Margin="0,0,16,0">
                <Ellipse Width="{StaticResource IconStatusSize}" Height="{StaticResource IconStatusSize}" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Icon}" />
                <ls:LSPie x:Name="Progression" Value="{Binding RemainingPercentage, Converter={StaticResource MultiplierConverter}, ConverterParameter='0.8'}" SweepDirection="Clockwise" Width="{StaticResource IconStatusSurroundSize}" Height="{StaticResource IconStatusSurroundSize}" RenderTransformOrigin="0.5 0.5">
                    <Grid.RenderTransform>
                        <RotateTransform Angle="-126"/>
                    </Grid.RenderTransform>
                    <Image Source="pack://application:,,,/Core;component/Assets/Tooltips/status_progressAround.png" Stretch="UniformToFill" Width="{StaticResource IconStatusSurroundSize}" Height="{StaticResource IconStatusSurroundSize}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </ls:LSPie>

                <Image x:Name="DurationIcon" Source="pack://application:,,,/Core;component/Assets/Tooltips/ico_statusTimer.png" Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Center" Width="{StaticResource IconStatusSize}" Margin="-26,0,0,0" Visibility="Collapsed"/>
            </Grid>
            <WrapPanel x:Name="Texts" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="1">
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Name}" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" Foreground="{StaticResource TooltipColor.Secondary}" Margin="0,0,16,0"/>

                <StackPanel Orientation="Horizontal" x:Name="DurationText">
                    <TextBlock ls:TextBlockFormatter.SourceText="(" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" Foreground="{StaticResource TooltipColor.Secondary}"/>
                    <TextBlock  Style="{DynamicResource StatusDurationTextStyle}" FontSize="{StaticResource MediumFontSize}" Foreground="{StaticResource TooltipColor.Secondary}" VerticalAlignment="Center"/>
                    <TextBlock ls:TextBlockFormatter.SourceText=")" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" Foreground="{StaticResource TooltipColor.Secondary}"/>
                </StackPanel>
            </WrapPanel>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DurationType}" Value="Timer">
                <Setter TargetName="DurationIcon" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Duration}" Value="0"/>
                    <Condition Binding="{Binding DurationType}" Value="Timer"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DurationText" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="DurationIcon" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Duration}" Value="-1">
                <Setter TargetName="Progression" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="ActiveConditionsSection" TargetType="ItemsControl">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Visibility" Value="{Binding ItemsSource.Count, Converter={StaticResource CountToVisibilityConverter}, RelativeSource={RelativeSource Self}, FallbackValue=Collapsed}"/>
        <Setter Property="ItemTemplate" Value="{StaticResource ObjectStatusTemplate}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="SingleIconInterruptTemplate" DataType="{x:Type ls:VMInterrupt}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Column="0" Width="72" Height="72" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Icon}" Margin="0,0,6,0" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True"/>
            <Rectangle x:Name="DisabledCover" Grid.Column="0" Opacity="0.5" Width="72" Height="72" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,6,0" Fill="Black" Visibility="Collapsed"/>
            <TextBlock x:Name="lvl" Grid.Column="0" Text="{Binding Level, Converter={StaticResource DecimalToRomanConverter}}" Visibility="{Binding Level, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter=1}" FontSize="{StaticResource InterruptNumberFontSize}" HorizontalAlignment="Right" VerticalAlignment="Bottom" noesis:Text.Stroke="{StaticResource LS_tint00}" noesis:Text.StrokeThickness="4" Margin="0,0,8,-8"/>
            <Image Grid.Column="1" x:Name="AskIcon" Source="pack://application:,,,/Core;component/Assets/Reactions_c/c_ico_reactionAsk_active.png" Width="44" Visibility="Collapsed"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Available}" Value="False">
                <Setter TargetName="DisabledCover" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ask}" Value="True">
                <Setter TargetName="AskIcon" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="InterruptCompleteTemplate" DataType="{x:Type ls:VMInterrupt}">
        <Grid x:Name="Root" Margin="0,2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ContentPresenter Grid.Column="0" Content="{Binding .}" ContentTemplate="{StaticResource SingleIconInterruptTemplate}"/>
            <TextBlock Grid.Column="1" ls:TextBlockFormatter.SourceText="{Binding Name}" Margin="16,0,0,0" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" Foreground="{StaticResource TooltipColor.Secondary}"
                       TextTrimming="CharacterEllipsis"/>
        </Grid>
    </DataTemplate>

    <!--Level and class description for character tooltip-->
    <ControlTemplate x:Key="LevelClassSubTitleTemplate">
        <TextBlock x:Name="ClassAndLevel" Text="{Binding Result, ElementName=ClassList}" Style="{StaticResource TooltipSubTitleStyle}">
            <b:Interaction.Behaviors>
                <ls:ConcatenateListBehavior x:Name="ClassList" ItemsSource="{Binding Stats.ClassList}" Separator="h2519408dg5fd7g4cbcg840cg14370239edf8"/>
            </b:Interaction.Behaviors>
        </TextBlock>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Stats.Level.Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="ClassAndLevel" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h5df00b79ga6acg4d9fgb8dag23340151fba7"/>
                            <Binding Path="Stats.Level.Value"/>
                            <Binding Path="Result" ElementName="ClassList"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Boost content -->
    <DataTemplate x:Key="BoostSimpleTooltipContent">
        <TextBlock x:Name="desc" ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource TooltipDefaultTextStyle}"/>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="WeaponEnchantment">
                <Setter TargetName="desc" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h22431a3cg7670g4cabg987fge9a1bbbbbd32"/>
                            <Binding Path="Value"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="AC">
                <Setter TargetName="desc" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h4200bb68gc854g4b01g8bb9gc64e9ba8457f"/>
                            <Binding Path="Value"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Advantage -->
    <DataTemplate DataType="{x:Type ls:VMAdvantage}">
        <ContentPresenter x:Name="AdvantageTooltipContent" Content="{Binding TooltipData}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding TooltipData, Converter={StaticResource NullToBoolFalseConverter}, FallbackValue=False}" Value="False">
                <Setter TargetName="AdvantageTooltipContent" Property="Content" Value="{Binding .}"/>
                <Setter TargetName="AdvantageTooltipContent" Property="ContentTemplate" Value="{StaticResource BoostSimpleTooltipContent}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipData, Converter={StaticResource NullToBoolFalseConverter}, FallbackValue=False}" Value="False"/>
                    <Condition Binding="{Binding AdvantageType}" Value="Advantage"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="AdvantageTooltipContent" Property="Content" Value="h079123e0geee2g410cgaaf3g7978a3dafdc7"/>
                <Setter TargetName="AdvantageTooltipContent" Property="ls:AttachedProperties.InheritedTag" Value="h986f906agb172g4956g9567g5cbd32150349"/>
                <Setter TargetName="AdvantageTooltipContent" Property="ContentTemplate" Value="{StaticResource HeaderBodyTemplate}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipData, Converter={StaticResource NullToBoolFalseConverter}, FallbackValue=False}" Value="False"/>
                    <Condition Binding="{Binding AdvantageType}" Value="Disadvantage"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="AdvantageTooltipContent" Property="Content" Value="h3723f6abgc46cg42b4gb95eg2449e683e25a"/>
                <Setter TargetName="AdvantageTooltipContent" Property="ls:AttachedProperties.InheritedTag" Value="h8d1a14e2gc17cg4ab6gbe5dg85557ae06a7e"/>
                <Setter TargetName="AdvantageTooltipContent" Property="ContentTemplate" Value="{StaticResource HeaderBodyTemplate}"/>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Approval Rating Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMApprovalRating}">
        <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Description}"/>
    </DataTemplate>

    <!-- Stat Desc Tooltip-->
    <DataTemplate x:Key="StatParamsTemplate">
        <ItemsControl Visibility="{Binding CalculationParameters.Count, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter=1}" ItemsSource="{Binding CalculationParameters}" AlternationCount="{Binding CalculationParameters.Count}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" MinWidth="{StaticResource StatTooltipMinWidth}">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringBodyStyle}"/>
                        </StackPanel.Resources>
                        <TextBlock x:Name="Value" Foreground="{DynamicResource TooltipColor.Secondary}" ls:TextBlockFormatter.SourceText="{Binding Value, StringFormat={}{0:+#;-#;+0}}" Margin="0,0,11,0"/>
                        <TextBlock x:Name="Description">
                            <ls:TextBlockFormatter.SourceText>
                                <MultiBinding StringFormat="{}{0} ({1})">
                                    <Binding Path="Description"/>
                                    <Binding Path="SourceName.Str"/>
                                </MultiBinding>
                            </ls:TextBlockFormatter.SourceText>
                        </TextBlock>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding SourceName.Str}" Value="">
                            <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Description}"/>
                        </DataTrigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter TargetName="Value" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Value}"/>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Value}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="DamageStatParamsTemplate">
        <ItemsControl Visibility="{Binding CalculationParameters.Count, Converter={StaticResource CountToVisibilityConverter}}" ItemsSource="{Binding CalculationParameters}" Margin="0,20,0,0" AlternationCount="{Binding CalculationParameters.Count}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid MinWidth="{StaticResource StatTooltipMinWidth}" Margin="0,0,0,12">
                        <Grid.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringBodyStyle}"/>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel HorizontalAlignment="Left" Grid.Column="1">
                            <TextBlock x:Name="Description" ls:TextBlockFormatter.SourceText="{Binding Description}" Margin="0,0,8,0" DockPanel.Dock="Left">
                                <TextBlock.Resources>
                                    <Style TargetType="ls:LSSpan" BasedOn="{StaticResource BaseSpanStyle}">
                                        <Style.Triggers>
                                            <Trigger Property="TagType" Value="Damage">
                                                <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Secondary}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Resources>
                            </TextBlock>
                            <TextBlock x:Name="additionSign"  DockPanel.Dock="Left" Text="+" Visibility="Collapsed" Foreground="{DynamicResource TooltipColor.Secondary}"/>
                            <TextBlock x:Name="statValue"  DockPanel.Dock="Left" Foreground="{DynamicResource TooltipColor.Secondary}" ls:TextBlockFormatter.SourceText="{Binding Value}"/>
                        </DockPanel>
                        <TextBlock Text="{Binding SourceName}" HorizontalAlignment="Right" Grid.Column="0"/>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter='-1'}" Value="True">
                            <Setter TargetName="additionSign" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value}" Value="0">
                            <Setter TargetName="statValue" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="additionSign" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsWeaponEnchantment}" Value="True">
                            <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0d6e5793g954eg40e4g8941gaf2367d0d939', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="VMStatTooltip">
        <Grid>
            <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Top" Template="{StaticResource TooltipStripTopBackground}" Tag="{Binding ElementName=TitleArea}" Margin="-36,-20,-36,-25" />
            <StackPanel>
                <StackPanel x:Name="TitleArea" Style="{StaticResource TooltipTitleSurround}" >
                    <Control x:Name="StatsTitle" Template="{StaticResource StatsDisplayNameWrap}" Style="{StaticResource TooltipControlTitleStyle}"/>
                    <TextBlock x:Name="Title" ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource TooltipTitleStyle}" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                </StackPanel>
                <TextBlock x:Name="Owner" ls:TextBlockFormatter.SourceText="{Binding Path=(ls:TooltipExtender.Owner).Name, RelativeSource={RelativeSource Mode=Self}}" Style="{StaticResource TooltipSubTitleStyle}"/>

                <Grid x:Name="AC" HorizontalAlignment="Left" Margin="-14,0,0,16" Visibility="Collapsed">
                    <Image Source="{StaticResource TTACImage}" Stretch="None" />
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource DamageText}" Text="{Binding Value}"/>
                </Grid>

                <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Path=(ls:TooltipExtender.Data).Description, RelativeSource={RelativeSource Mode=Self}}" Width="Auto" MaxWidth="{DynamicResource MaxWideTooltipContentWidth}"/>
                <ContentControl Content="{Binding Path=(ls:TooltipExtender.Data), RelativeSource={RelativeSource Mode=Self}}" ContentTemplate="{StaticResource StatParamsTemplate}" Width="{DynamicResource MaxWideTooltipContentWidth}" Visibility="{Binding Path=(ls:TooltipExtender.Data).CalculationParameters.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource CountToVisibilityConverter}}"/>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding .,Converter={StaticResource TypeConverter}}" Value="ls.VMActionResource">
                <Setter TargetName="Title" Property="Visibility" Value="Visible"/>
                <Setter TargetName="StatsTitle" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                <Setter TargetName="Owner" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IDString}" Value="ArmorClass"/>
                    <Condition Binding="{Binding Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter='-1'}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="AC" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding IDString}" Value="ArmorClass">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0} ({1})">
                            <Binding Source="h6d1b6256g3ea8g4e82gaa0agc7fbeb252fdf" Converter="{StaticResource TranslatedStringConverter}"/>
                            <Binding Source="hc2ca2d88gc99cg4361g801fgd34ecdb85f19" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Title" Property="Visibility" Value="Visible"/>
                <Setter TargetName="StatsTitle" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IDString}" Value="Health">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0} ({1})">
                            <Binding Source="hc410bc67g130dg4ccdgbb36g42bb0a72c08e" Converter="{StaticResource TranslatedStringConverter}"/>
                            <Binding Source="h74a449d3g1037g478agb169g8c786aaa7cdd" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Title" Property="Visibility" Value="Visible"/>
                <Setter TargetName="StatsTitle" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="VMDamageStatTooltip">
        <StackPanel ls:TooltipExtender.Owner="{Binding Path=(ls:TooltipExtender.Owner) , RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <TextBlock x:Name="Title" ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource TooltipTitleStyle}"/>
            <TextBlock x:Name="Owner" ls:TextBlockFormatter.SourceText="{Binding Path=(ls:TooltipExtender.Owner).Name, RelativeSource={RelativeSource Mode=Self}}" Style="{StaticResource TooltipSubTitleStyle}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding (ls:TooltipExtender.Data).Description, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="Auto" MaxWidth="{DynamicResource MaxWideTooltipContentWidth}"/>
            <ContentControl Content="{Binding (ls:TooltipExtender.Data), RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplate="{StaticResource DamageStatParamsTemplate}" Width="{DynamicResource MaxWideTooltipContentWidth}" Visibility="{Binding CalculationParameters.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                <Setter TargetName="Owner" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMStat}">
        <ContentPresenter x:Name="root" Content="{Binding .}" ContentTemplate="{StaticResource VMStatTooltip}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IDString}" Value="AttackBonus">
                <Setter TargetName="root" Property="ContentTemplate" Value="{StaticResource VMDamageStatTooltip}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IDString}" Value="EquippedWeaponDamage">
                <Setter TargetName="root" Property="ContentTemplate" Value="{StaticResource VMDamageStatTooltip}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Skill Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMSkill}">
        <StackPanel x:Name="root">
            <Border Style="{StaticResource TooltipStripTopStyleWithContent}">
                <StackPanel>
                    <TextBlock x:Name="TitleName" Text="{Binding SkillValue, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h65e11968gf9b6g4c47g9efcg03fb60fb923c'}" Style="{StaticResource TooltipTitleStyle}"/>
                    <TextBlock x:Name="AbilityName" Text="{Binding AbilityValue, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='hec30ce0dgb76bg45cagaf40gad771ff7902b'}" Style="{StaticResource TooltipSubTitleStyle}"/>
                </StackPanel>
            </Border>
            <Rectangle Style="{StaticResource tooltipHeaderDividerLine}" />
            <ContentControl x:Name="ValueStripBG" Template="{StaticResource TooltipStripTemplate}" Margin="{StaticResource DefaultMarginBottom}">
                <Grid x:Name="ValueStrip" VerticalAlignment="Top" HorizontalAlignment="Left" Width="{StaticResource MaxNarrowTooltipContentWidth}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" VerticalAlignment="Top">
                        <Path x:Name="DiceBg" Stretch="None" VerticalAlignment="Center" Width="88" Height="88" StrokeThickness="10" Fill="White" Data="{StaticResource DiceGeometryD20}"/>
                        <Image x:Name="DiceIcon" VerticalAlignment="Center" Source="{StaticResource IconD20}" Stretch="None"/>
                    </Grid>
                    <TextBlock Grid.Column="1" x:Name="SkillValue" VerticalAlignment="Center" Style="{StaticResource TooltipAbilityModifierStyle}" Margin="4,0,0,0">
                            <ls:TextBlockFormatter.SourceText>
                            <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                                <Binding Path="Value"/>
                                <Binding Source="h5f6a1f2ag0bc4g4ae6ga52ege6e0048af203" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                         </ls:TextBlockFormatter.SourceText>
                    </TextBlock>
                </Grid>
            </ContentControl>
            <TextBlock x:Name="Description" Style="{StaticResource TooltipDescriptionStyle}" Visibility="{Binding Text, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}" Margin="{StaticResource DefaultMarginBottom}"/>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                <Setter TargetName="DiceIcon" Property="Width" Value="126" />
                <Setter TargetName="DiceIcon" Property="Stretch" Value="Uniform"/>
                <Setter TargetName="DiceBg" Property="Width" Value="100"/>
                <Setter TargetName="DiceBg" Property="Height" Value="100"/>
                <Setter TargetName="DiceBg" Property="Stretch" Value="Uniform"/>
                <Setter TargetName="DiceBg" Property="Fill" Value="{StaticResource DiceColor.Default}"/>
                <Setter TargetName="SkillValue" Property="FontSize" Value="{StaticResource LargeFontSize}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Deception">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5febcaf6g13f4g4662g9c68ge24ec3c2d80a', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h5d18a95bgbe59g4d35g83b3g720d74f4b1bb" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Intimidation">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5e849499g23bfg4e5dga9f3gb6ce36f9abc2', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="hbb4b11fag38c1g4a50g8b68g311e8ff34997" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Performance">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha6c0ffb0g73ccg4435g9d7ag8a24ee90a849', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="hed4f2ecfg1ee8g4015g9954g7efed806cbf8" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Persuasion">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3d5ecb16g20f8g4febgba03g41ae11b9ddf2', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h114841e2gc52fg4ea3g985bgb85a03117ef5" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Acrobatics">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h241bfb0fgffa2g4ccega96fgb26da384ecf8', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="hb51313bbga377g42f2g99e9g68b7d51c64ff" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="SleightOfHand">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha18e79b2g111ag441egb532g3ff79d4ba842', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="hf46b2617g8fd2g4c84g9ea3g90e35dbef93e" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Stealth">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb2487d1bga7a8g4a2dgb6a8g447842179f6d', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h968f7f17gb2ecg4bd4ga96cgd708bebb38cd" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Arcana">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hda75bbd8g5613g4f40g8b8dgb8d3f4f6855d', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h0ba372fdge68bg40d6g94a2g43cb9c369eb4" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="History">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha31089eegb95fg44d8gb191g302341c0b57a', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h8c1259b2g1231g4b68g893ag1b2bc53cc7c5" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Investigation">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2a7019efgfaf7g455fg8fd9g4b7c275fbbfa', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h0e43523ag5ae7g4b17g8251g95f14a6d61a9" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Nature">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h94f2954eg8a71g49c9ga9bdg66b65a04a23c', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h5837aba1gf5f1g4eb2g8e4ag2ec040ec9264" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Religion">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3adc18e5gc8c3g459dgbe82gb27aca09da54', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h538e17dbge0cag4c76gbc64g74fb4e2e42e7" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Athletics">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha90cb8b6g3aa7g4b94ga7e3gfa0823672af1', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="hc4cbc7bcg3413g42a4g83f8g3379dc6a4e08" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="AnimalHandling">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfa186a8cg869cg4ecdgadf3gb7326ab444c4', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="he9ae12d6gccc1g4c8dg8e74gdffd58287cdc" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Insight">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2eb576b5gc088g40e6gad9ag52751e1f9be7', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h09a5ea20g22abg4d9bgb914geece8bd371eb" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Medicine">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0eb7380bg4477g4d04ga797ge577e24aa856', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h34dc74d6g8374g44b8g97b0gde4b69690f5a" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Perception">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7896bd12g83b9g4058gbc2cg477ba13c728a', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="hffe5599agfcf2g496dga29cg493db6d1c9cf" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Skill}" Value="Survival">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='had65a34cg53b1g4d6ag86d2g04258e4ed338', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="SkillValue" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Value"/>
                            <Binding Source="h33b37b3eg71efg4ef1g8318g3baa0f40c41a" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="PrimaryAbilityTooltipContentTemplate">
        <StackPanel Margin="0, 6">
            <TextBlock Text="{Binding Source='h6836c376g7c23g42fbgb5ceg5b1cbf054975', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipTitleNoCollapseStyle}" />
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h06a71ef5g7c5eg4b21g95dfg0cb4c47431b8', Converter={StaticResource TranslatedStringConverter}}" Margin="{StaticResource DefaultMarginBottom}"/>
        </StackPanel>
    </DataTemplate>

    <!-- Ability Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMAbility}">
        <Grid x:Name="root" Tag="{Binding Path=(ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}" >
            <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Top" Template="{StaticResource TooltipStripTopBackground}" Tag="{Binding ElementName=TitleArea}" Margin="-36,-20,-36,-25" />
            <Image x:Name="DecorationImage" Style="{DynamicResource AbilityTooltipIconStyle}" DataContext="{Binding}"/>
            <StackPanel Width="{DynamicResource MaxWideTooltipContentWidth}">
                <StackPanel x:Name="TitleArea" Style="{StaticResource TooltipTitleSurround}" >
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="TitleName" Text="{Binding AbilityValue, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='hec30ce0dgb76bg45cagaf40gad771ff7902b'}" Style="{StaticResource TooltipTitleStyle}"/>
                        <TextBlock x:Name="TitleValue" Text="{Binding Value, StringFormat={}({0})}" Style="{StaticResource TooltipTitleStyle}" Margin="10,0,0,0" VerticalAlignment="Bottom"/>
                    </StackPanel>
                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hdb40eff6g84d1g421dg906cg6779df63479f', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}"/>
                </StackPanel>
                <!-- Modifier -->
                <StackPanel x:Name="Modifier" Orientation="Horizontal">

                    <ContentControl ContentTemplate="{StaticResource DamageDiceSet}" VerticalAlignment="Center" Margin="-4,0,6,8"/>

                    <TextBlock x:Name="AbilityModifierDesc" VerticalAlignment="Center" Width="{StaticResource MaxNarrowTooltipContentWidth}" Style="{StaticResource TooltipAbilityModifierStyle}" >
                        <ls:TextBlockFormatter.SourceText>
                            <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                                <Binding Path="Modifier"/>
                                <Binding Source="hc95995a6gafa6g4d02g9e9ag87ed78dc1144" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </ls:TextBlockFormatter.SourceText>
                    </TextBlock>

                </StackPanel>

                <TextBlock x:Name="Description" Style="{StaticResource TooltipAdjustableDescriptionStyle}" Visibility="{Binding Text, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}" ls:TextBlockFormatter.SourceText="{Binding Source='haaf3959ag320eg4f68ga9c9gc143d7f64a8c', Converter={StaticResource TranslatedStringConverter}}"/>

                <StackPanel x:Name="SavingThrows" Margin="0,16,0,0" Style="{StaticResource SubSectionPanelStyle}">
                    <ContentControl ContentTemplate="{StaticResource DamageDiceSet}" VerticalAlignment="Center" Margin="0,0,6,0" RenderTransformOrigin="0.5,0.5">
                        <ContentControl.LayoutTransform>
                            <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                        </ContentControl.LayoutTransform>
                    </ContentControl>

                    <TextBlock Style="{StaticResource TooltipSectionTitleStyle}" Visibility="Visible" VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Title}">
                        <ls:TextBlockFormatter.SourceText>
                            <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                                <Binding Path="SavingThrow.AdditionalValue"/>
                                <Binding Source="ha9eabfe7ga85ag413cgb41dgb3dc10ac60f9" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </ls:TextBlockFormatter.SourceText>
                    </TextBlock>
                </StackPanel>

                <ItemsControl x:Name="SavingThrowParams"
                              Visibility="{Binding Path=Tag.SavingThrowParameters.Count, ElementName=root, Converter={StaticResource CountToVisibilityConverter}}"
                              ItemsSource="{Binding Path=Tag.SavingThrowParameters, ElementName=root}"
                              AlternationCount="{Binding Path=Tag.SavingThrowParameters.Count, ElementName=root}"
                              Margin="68,-4,0,0">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid MinWidth="{StaticResource StatTooltipMinWidth}">
                                <Grid.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringBodyStyle}"/>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="0">
                                    <TextBlock Foreground="{DynamicResource TooltipColor.Secondary}" ls:TextBlockFormatter.SourceText="{Binding Value ,StringFormat='{}{0:+#;-#;+0}'}" Margin="0,0,11,0"/>
                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Description}"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Value}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>

                <TextBlock x:Name="AbilityModifiersLabel" Text="{Binding Source='h6d38bfa3gc691g4615ga348g558bba90d805', Converter={StaticResource TranslatedStringConverter}}"
                           Style="{StaticResource TooltipSubTitleStyle}" FontSize="{StaticResource SmallishFontSize}"
                           Margin="0,24,0,0"
                           Visibility="{Binding Tag.CalculationParameters.Count, ElementName=root, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter=1}"/>

                <ContentControl x:Name="AbilityStatParams" Content="{Binding Tag, ElementName=root}" ContentTemplate="{StaticResource StatParamsTemplate}" Margin="12,4,0,0"/>
            </StackPanel>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Ability}" Value="Strength">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='haaf3959ag320eg4f68ga9c9gc143d7f64a8c', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AbilityModifierDesc" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Modifier"/>
                            <Binding Source="h0d7c6ca5g3899g4a98ga481g6ebcb5e33ace" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Dexterity">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hbf128ebdgdfffg4ea9gbf4bg1659ccefd287', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AbilityModifierDesc" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Modifier"/>
                            <Binding Source="h40b510fcg6ca8g41a5ga64ag1ba1e466ca59" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Intelligence">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h411a732ag4b4cg4094g9a5egd325fecf4645', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AbilityModifierDesc" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Modifier"/>
                            <Binding Source="h747b2490g6db3g4eb4gafb6geb7727fa7380" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Constitution">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7a02f64dg4593g408fgbf93gb0dbabc182c9', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AbilityModifierDesc" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Modifier"/>
                            <Binding Source="hc5fd4b41g56f4g4697gbd8bg26157dbd98bc" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Wisdom">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h35233e68gf68ag461cgac5fgc15806be3dc7', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AbilityModifierDesc" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Modifier"/>
                            <Binding Source="h075239cfg1a10g4488g9f69gd17325f79bc6" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Charisma">
                <Setter TargetName="Description" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h441085efge3a5g4004gba8dgf2378e8986c8', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AbilityModifierDesc" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                            <Binding Path="Modifier"/>
                            <Binding Source="h4f9a292fg3aa1g4fb0gb503g472a8ceac6f0" Converter="{StaticResource TranslatedStringConverter}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Status Tooltip -->
    <DataTemplate x:Key="StatusTooltip" >
        <StackPanel x:Name="root" DataContext="{Binding Path=(ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <Border Style="{StaticResource TooltipStripTopStyleWithContent}">
                <StackPanel>
                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource TooltipTitleStyle}" TextWrapping="Wrap"/>
                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h40b6867ag0d94g4132ga679g791cb1c8968a',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}"/>
                </StackPanel>
            </Border>
            <Rectangle Style="{StaticResource tooltipHeaderDividerLine}" />
            <StackPanel x:Name="DurationHolder" Orientation="Horizontal" HorizontalAlignment="Left">
                <Image Source="{StaticResource TTHourglassImage}" Stretch="None" VerticalAlignment="Center" Margin="0, -3, 10, 3" />
                <TextBlock x:Name="DurationText" MaxWidth="600" Style="{StaticResource StatusDurationTextStyle}" FontSize="{StaticResource MediumFontSize}" Foreground="{StaticResource TooltipColor.Special}" TextWrapping="Wrap" TextAlignment="Left" VerticalAlignment="Center" DataContext="{Binding Status}"/>

                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Margin" Value="0,8,0,0"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Status.DurationType}" Value="None"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True"/>
                                    <Condition Binding="{Binding DurationType}" Value="None"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>

                            <MultiDataTrigger >
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Status.Duration}" Value="0"/>
                                    <Condition Binding="{Binding Status.DurationType}" Value="Timer"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger >
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True"/>
                                    <Condition Binding="{Binding Duration}" Value="0"/>
                                    <Condition Binding="{Binding DurationType}" Value="Timer"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Status.DurationType}" Value="Timer" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Margin" Value="0"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True" />
                                    <Condition Binding="{Binding DurationType}" Value="Timer" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Margin" Value="0"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>

            <ContentPresenter ContentTemplate="{StaticResource StatusDamageSection}" Content="{Binding .}"/>

            <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}" Margin="{StaticResource DefaultMarginTopBottom}">
				<b:Interaction.Behaviors>
                	<ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>

            <!-- Permanent warnings -->
            <ContentPresenter x:Name="PermanentWarnings" ContentTemplate="{StaticResource PermanentWarningSection}" Content="{Binding .}"/>

            <ItemsControl ItemsSource="{Binding Properties}" ItemTemplate="{StaticResource PropertyTemplate}" Visibility="{Binding Properties.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource ItemsControlHorizontalWrapPanel}"/>
        </StackPanel>

        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Status.DurationType}" Value="Timer" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DurationText" Property="FontSize" Value="{StaticResource BigFontSize}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True" />
                    <Condition Binding="{Binding DurationType}" Value="Timer" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DurationText" Property="FontSize" Value="{StaticResource BigFontSize}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- When coming from a pinned tooltip, the DataContext must change -->
            <DataTrigger Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True">
                <Setter TargetName="DurationText" Property="DataContext" Value="{Binding}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                <Setter TargetName="DurationText" Property="MaxWidth" Value="560"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding DataContext.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Controller">
                <Setter TargetName="DurationText" Property="MaxWidth" Value="560"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMStatus}" >
        <ContentPresenter x:Name="root" Content="{Binding DataContext}" ContentTemplate="{StaticResource StatusTooltip}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ls:VMContextTransStringStatusParam}" >
        <ContentPresenter x:Name="root" Content="{Binding DataContext}" ContentTemplate="{StaticResource StatusTooltip}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ls:VMTooltipSectionDetail}" >
        <ContentPresenter x:Name="root" Content="{Binding DataContext}" ContentTemplate="{StaticResource StatusTooltip}" />
    </DataTemplate>

    <!-- Progression Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMProgression}">
        <StackPanel>
            <TextBlock Style="{StaticResource TooltipCtxTransStringTitleStyle}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>
            <TextBlock Style="{StaticResource TooltipSubTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding DisplayType}"/>
            <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <!-- FeatureBoost Tooltip -->
    <DataTemplate x:Key="NameAndDescTooltipContent">
        <StackPanel>
            <TextBlock Style="{StaticResource TooltipCtxTransStringTitleStyle}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>
            <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMFeatureBoost}">
        <ContentPresenter ContentTemplate="{StaticResource NameAndDescTooltipContent}" Content="{Binding .}"/>
    </DataTemplate>

    <DataTemplate x:Key="FooterFloatingWarningCost" DataType="ls:VMActionResource">
        <Grid VerticalAlignment="Center" Style="{StaticResource resourcePositioning}">
            <Grid x:Name="BouncingWarning" VerticalAlignment="Top" Visibility="Collapsed" ClipToBounds="False" Margin="-66,-66,-66,-66">
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Grid.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever" From="{StaticResource bounceWarningFrom}" To="{StaticResource bounceWarningTo}">
                                        <ThicknessAnimation.EasingFunction>
                                            <SineEase EasingMode="EaseInOut"/>
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                </Storyboard>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>

                <Image x:Name="errorFloatImage" Stretch="None" Source="{StaticResource errorFloatBG}" Margin="-66,-66,-66,-66" />
                <Image Stretch="None" Source="{StaticResource IconWarning}" Style="{StaticResource IconWarningFloat}"/>
            </Grid>
            <Image x:Name="ResourceIcon" Style="{StaticResource SectionImageStyle}" Stretch="None" VerticalAlignment="Center" Margin="0,-30"/>
        </Grid>
        <DataTemplate.Triggers>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Visible" TargetName="BouncingWarning"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="FooterCosts">
        <ItemsControl AlternationCount="{Binding Count}" ItemsSource="{Binding .}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" Margin="0,4,0,0" HorizontalAlignment="Left">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel x:Name="FooterItem" Orientation="Horizontal" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Margin="0,0,30,0" HorizontalAlignment="Left">
                        <ContentPresenter ContentTemplate="{StaticResource FooterFloatingWarningCost}" Content="{Binding .}"/>
                        <TextBlock Style="{StaticResource SectionResourceNameStyle}" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding MaxValue, StringFormat='{}{0} '}" Visibility="{Binding MaxValue, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter='1'}"/>
                        <TextBlock Style="{StaticResource SectionResourceNameStyle}" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsHidden}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="FooterItem"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- Text section template -->
    <DataTemplate x:Key="DetailSectionsTemplate" DataType="{x:Type ls:VMTooltipSectionDetail}">
        <StackPanel x:Name="DetailContainer" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Visible">
            <b:Interaction.Behaviors>
                <ls:ConcatenateListBehavior x:Name="CharacterList" ItemsSource="{Binding Entries}" Separator="h2519408dg5fd7g4cbcg840cg14370239edf8"/>
            </b:Interaction.Behaviors>
            <Grid x:Name="SectionIcon" VerticalAlignment="Top" HorizontalAlignment="Left">
                <Image Stretch="None" Style="{StaticResource SectionImageStyle}"/>
                <Rectangle Fill="{Binding Brush}" Width="48" Height="48"/>
            </Grid>

            <TextBlock x:Name="DetailText" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource SectionDescriptionStyle}" MaxWidth="{StaticResource DetailSectionWidth}" Margin="8,0,0,0">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior LocaSource="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                </b:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Brush}" Value="{x:Null}" />
                    <Condition Binding="{Binding TypeId}" Value="" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="SectionIcon"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Entries, Converter={StaticResource NullToBoolFalseConverter}, FallbackValue=False}" Value="True">
                <Setter TargetName="DetailText" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h5f70fbe9g3fc1g4d97g9619g407012798c10"/>
                            <Binding Path="Result" ElementName="CharacterList"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SectionTemplate" DataType="{x:Type ls:VMTooltipSection}">
        <ItemsControl ItemsSource="{Binding Details}" ItemTemplate="{StaticResource DetailSectionsTemplate}"/>
    </DataTemplate>

    <DataTemplate x:Key="SpellDescriptionTemplate" DataType="{x:Type ls:VMTooltipSpell}">
        <DataTemplate.Resources>
            <Storyboard x:Key="ExpandAnimation">
                <DoubleAnimation Storyboard.TargetName="ExtraDescription" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>

                <!-- Since we are in a template it wants to freeze this animation, meaning it can't use bindings -->
                <!-- To get around this we animate a percent value instead and handle the bindings at the target element -->
                <DoubleAnimation Storyboard.TargetName="DescriptionHolder" Storyboard.TargetProperty="Tag" From="0" To="1" Duration="0:0:0.15">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>

            <Storyboard x:Key="CollapseAnimation">
                <DoubleAnimation Storyboard.TargetName="ExtraDescription" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>

                <!-- Since we are in a template it wants to freeze this animation, meaning it can't use bindings -->
                <!-- To get around this we animate a percent value instead and handle the bindings at the target element -->
                <DoubleAnimation Storyboard.TargetName="DescriptionHolder" Storyboard.TargetProperty="Tag" From="1" To="0" Duration="0:0:0.15">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
        </DataTemplate.Resources>
        <StackPanel x:Name="DescriptionHolder">
            <StackPanel.Tag>
                <!-- Tag is 0-1 value animated by storyboards, and it used to created a dynamic margin -->
                <System:Double>0</System:Double>
            </StackPanel.Tag>
            <TextBlock x:Name="TechnicalDescription" Style="{StaticResource TooltipAdjustableDescriptionStyle}" Visibility="{Binding Description, Converter={StaticResource StringToVisibilityConverter}, FallbackValue=Collapsed}" Margin="{StaticResource DefaultMarginBottom}">
                <Span>
                    <b:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                    </b:Interaction.Behaviors>
                </Span>
                <Span x:Name="ExtraDescriptionIcon"/>
            </TextBlock>

            <TextBlock x:Name="ExtraDescription" Style="{StaticResource TooltipAdjustableDescriptionStyle}" Visibility="{Binding ExtraDescription, Converter={StaticResource StringToVisibilityConverter}, FallbackValue=Collapsed}" Margin="{StaticResource DefaultMarginBottom}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding ExtraDescription}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                </b:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>

        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="WhenPinned"/>
                    <Condition Binding="{Binding ExtraDescription.Text, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ExtraDescriptionIcon" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=h452c3409g8a01g42d8g991agc874738376be, Converter={StaticResource TranslatedStringConverter}, StringFormat='{} {0}'}"/>
                <Setter TargetName="ExtraDescription" Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>

            <!-- When pinned, only play the expand animation if it wasn't already being expanded in the actual tooltip -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="WhenPinned"/>
                    <Condition Binding="{Binding ExtraDescription.Text, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                    <Condition Binding="{Binding ShouldBeExpanded, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="False"/>
                </MultiDataTrigger.Conditions>

                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource ExpandAnimation}"/>
                </MultiDataTrigger.EnterActions>

                <Setter TargetName="ExtraDescription" Property="Margin">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource LinearInterpolationConverter}" ConverterParameter="Thickness">
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Path="ActualHeight" ElementName="ExtraDescription" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Source="{StaticResource DefaultSpace}"/>
                            <Binding Path="Tag" ElementName="DescriptionHolder" FallbackValue="0"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="WhenPinned"/>
                    <Condition Binding="{Binding ExtraDescription.Text, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                </MultiDataTrigger.Conditions>

                <Setter TargetName="ExtraDescription" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="Never">
                <Setter TargetName="ExtraDescription" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Never">
                <Setter TargetName="ExtraDescription" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <!-- Show holding 'ExpandTooltips' key -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="WhenPinned"/>
                    <Condition Binding="{Binding ExtraDescription.Text, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                    <Condition Binding="{Binding ShouldBeExpanded, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource ExpandAnimation}"/>
                </MultiDataTrigger.EnterActions>
                <Setter TargetName="ExtraDescription" Property="Margin">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource LinearInterpolationConverter}" ConverterParameter="Thickness">
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Path="ActualHeight" ElementName="ExtraDescription" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Source="{StaticResource DefaultSpace}"/>
                            <Binding Path="Tag" ElementName="DescriptionHolder" FallbackValue="0"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="ExtraDescriptionIcon" Property="ls:TextBlockFormatter.SourceText" Value=""/>
                <Setter TargetName="ExtraDescription" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="WhenPinned"/>
                    <Condition Binding="{Binding ExtraDescription.Text, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                    <Condition Binding="{Binding ShouldBeExpanded, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="False"/>
                    <Condition Binding="{Binding Tag, ElementName=DescriptionHolder, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                </MultiDataTrigger.Conditions>

                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource CollapseAnimation}"/>
                </MultiDataTrigger.EnterActions>
                <Setter TargetName="ExtraDescription" Property="Margin">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource LinearInterpolationConverter}" ConverterParameter="Thickness">
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Path="ActualHeight" ElementName="ExtraDescription" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Source="0"/>
                            <Binding Source="{StaticResource DefaultSpace}"/>
                            <Binding Path="Tag" ElementName="DescriptionHolder" FallbackValue="0"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="ExtraDescription" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <!-- Controller doesn't have pinning (yet) so for now we always show the extra description -->
            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                <Setter TargetName="ExtraDescriptionIcon" Property="ls:TextBlockFormatter.SourceText" Value=""/>
                <Setter TargetName="ExtraDescription" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <!-- No text, no show. Keep this at the bottom -->
            <DataTrigger Binding="{Binding ExtraDescription.Text, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="True">
                <Setter TargetName="ExtraDescription" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="WarningLabelTemplate" TargetType="Control">
        <StackPanel Orientation="Horizontal" Margin="-16,0,0,0">
            <Rectangle Fill="{TemplateBinding Background}" VerticalAlignment="Top" MinHeight="{StaticResource MinimumWarningIconSize}" MinWidth="{StaticResource MinimumWarningIconSize}"/>
            <TextBlock VerticalAlignment="Top" ls:TextBlockFormatter.SourceText="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" MaxWidth="{StaticResource DetailSectionWidth}" Foreground="{TemplateBinding Foreground}" Style="{StaticResource TooltipStringBodyStyle}" Margin="0,4,0,0"/>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="EquippedLabelTemplate" TargetType="Control">
        <ControlTemplate.Resources>
            <BitmapImage x:Key="SelfEquippedIcon" UriSource="pack://application:,,,/Core;component/Assets/Shared/ico_EQ_selected.png"/>
            <BitmapImage x:Key="PartyEquippedIcon" UriSource="pack://application:,,,/Core;component/Assets/Shared/ico_EQ_party.png"/>
            <BitmapImage x:Key="CoopEquippedIcon" UriSource="pack://application:,,,/Core;component/Assets/Shared/ico_EQ_coop.png"/>
        </ControlTemplate.Resources>
        
        <!--Text color and icon are defaulting to the item being equipped by a character controlled by multiplayer partner -->
        <StackPanel Orientation="Horizontal" Margin="-16,0,0,12">
            <Image x:Name="EquippedByIcon" Source="{StaticResource CoopEquippedIcon}" Style="{StaticResource leftAlignedEquippedIcon}" />
            <TextBlock x:Name="EquippedByText" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" MaxWidth="{StaticResource DetailSectionWidth}" Foreground="{TemplateBinding Foreground}" Style="{StaticResource TooltipStringBodyStyle}" Margin="0,4,0,0"/>
        </StackPanel>
        
        <!--Change the text color and icon when item is equipped by not actively selected character in party-->
        <ControlTemplate.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource ListContainsItemConverter}">
                        <Binding Path="OwnerDCWidget.CurrentPlayer.AssignedCharacters" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSTooltip}}"/>
                        <Binding Path="EquippingCharacter"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="EquippedByText" Property="Foreground" Value="{StaticResource LS_partyTxtColor}"/>
                <Setter TargetName="EquippedByIcon" Property="Source" Value="{StaticResource PartyEquippedIcon}"/>
            </DataTrigger>

            <!--Change the text color and icon when item is equipped by characters in camp-->
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource ListContainsItemConverter}">
                        <Binding Path="OwnerDCWidget.Data.CampNonPartyCharacters" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSTooltip}}"/>
                        <Binding Path="EquippingCharacter"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="EquippedByText" Property="Foreground" Value="{StaticResource LS_partyTxtColor}"/>
                <Setter TargetName="EquippedByIcon" Property="Source" Value="{StaticResource PartyEquippedIcon}"/>
            </DataTrigger>

            <!--Change the text color and icon when item is equipped by actively selected character -->
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource EqualConverter}">
                        <Binding Path="EquippingCharacter"/>
                        <Binding Path="OwnerDCWidget.CurrentPlayer.SelectedCharacter" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSTooltip}}"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="EquippedByText" Property="Foreground" Value="{StaticResource LS_extraspecialTxtColor}"/>
                <Setter TargetName="EquippedByIcon" Property="Source" Value="{StaticResource SelfEquippedIcon}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Passive Tooltip -->
    <DataTemplate x:Key="PassivesTooltip">
        <Grid>
            <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Top" Template="{StaticResource TooltipStripTopBackground}" Tag="{Binding ElementName=TitleArea}" Margin="-36,-20,-36,-25" />
            <Image x:Name="DecorationImage" Style="{StaticResource TooltipMainIconStyle}">
                <Image.Source>
                    <MultiBinding Converter="{StaticResource IconIdToSourceConverter}">
                        <Binding Source="Assets/Tooltips/Icons/"/>
                        <Binding Path="IconName"/>
                    </MultiBinding>
                </Image.Source>
            </Image>

            <StackPanel HorizontalAlignment="Center" Margin="0 5 0 0" Width="{StaticResource MaxTooltipContentWidth}" >
                <!-- Title -->
                <StackPanel x:Name="TitleArea" Style="{StaticResource TooltipTitleSurround}">
                    <TextBlock x:Name="TitleText" Text="{Binding Name}" Style="{StaticResource TooltipCtxTransStringTitleStyle}" Width="{StaticResource MaxWidthOnCollisionWithImage}"/>

                    <TextBlock x:Name="subtitleText" Style="{StaticResource TooltipSubTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='he8ad7cd6g0ffag472ega526g52c8ef0560f1',Converter={StaticResource TranslatedStringConverter}}"/>
                </StackPanel>
                <!-- Description -->
                <TextBlock x:Name="DescriptionText" Style="{StaticResource TooltipCtxTransStringDescriptionStyle}" VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Primary}" Width="{StaticResource MaxWidthOnCollisionWithImage}" Margin="{StaticResource DefaultMarginBottom}">
                    <b:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                    </b:Interaction.Behaviors>
                </TextBlock>

                <!-- Extra descrìption -->
                <TextBlock x:Name="PassiveExtraDescription" Style="{StaticResource TooltipCtxTransStringDescriptionStyle}" Visibility="{Binding ExtraDescription, Converter={StaticResource StringToVisibilityConverter}}"  VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Primary}" >
                    <b:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding ExtraDescription}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                    </b:Interaction.Behaviors>
                    <TextBlock.Tag>
                        <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                            <Binding Path="(ls:MeasurementProperties.TopY)" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(ls:MeasurementProperties.BottomY)" ElementName="DecorationImage"/>
                        </MultiBinding>
                    </TextBlock.Tag>
                </TextBlock>

                <!-- Permanent warnings -->
                <ContentPresenter x:Name="PermanentWarnings" ContentTemplate="{StaticResource PermanentWarningSection}" Content="{Binding .}"/>

                <!-- Properties and warnings -->
                <StackPanel x:Name="PropertiesAndWarningsSection">
                    <ItemsControl ItemsSource="{Binding Properties}" ItemTemplate="{StaticResource PropertyTemplate}" Visibility="{Binding Properties.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource ItemsControlHorizontalWrapPanel}"/>

                    <Control x:Name="WarningToggleable" Background="{StaticResource IconBrushWarningSoft}" Template="{StaticResource WarningLabelTemplate}" Foreground="{StaticResource LS_warning50TxtColor}" Tag="{Binding Source='h0600e546g6545g4d00g8794g72aad11f278a',Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed"/>

                    <Control x:Name="WarningShortRest" Template="{StaticResource WarningLabelTemplate}" Background="{StaticResource IconBrushWarning}" Foreground="{StaticResource LS_warning50TxtColor}" Tag="{Binding Source='h2e273132g455dg487cgbe1ag5a57d9edf32f',Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" />

                    <Control x:Name="WarningLongRest" Template="{StaticResource WarningLabelTemplate}" Background="{StaticResource IconBrushWarning}" Foreground="{StaticResource LS_warning50TxtColor}" Tag="{Binding Source='h62353a25g90fbg4d59gb43cg41980724bfb5',Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" />

                    <Control x:Name="WarningCombatLimit" Template="{StaticResource WarningLabelTemplate}" Background="{StaticResource IconBrushWarning}" Foreground="{StaticResource LS_warning50TxtColor}" Tag="{Binding Source='h70bf753ege90eg4f5ag96a5ge6535b9a1267',Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" />

                    <Control x:Name="WarningTurnLimit" Template="{StaticResource WarningLabelTemplate}" Background="{StaticResource IconBrushWarning}" Foreground="{StaticResource LS_warning50TxtColor}" Tag="{Binding Source='h7a505843g6315g491fgb777ga13adac924b2',Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" />

                    <ItemsControl ItemsSource="{Binding WarningSections}" ItemTemplate="{StaticResource SectionTemplate}" Visibility="{Binding WarningSections.Count, Converter={StaticResource CountToVisibilityConverter}}" Margin="-10,0,0,0"/>

                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Properties.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                        <Condition Binding="{Binding WarningSections.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Margin" Value="0"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>

                <!-- Lore description -->
                <Control x:Name="LoreDescriptionSection" Template="{StaticResource TooltipStripLoreTextTemplate}" Visibility="{Binding LoreDescription, Converter={StaticResource StringToVisibilityConverter}}" />

                <ls:LSNineSliceImage Style="{StaticResource TooltipStripBottomStyle}" x:Name="footer" Visibility="{Binding CostSummary.Count, Converter={StaticResource CountToVisibilityConverter}}" ContentTemplate="{StaticResource FooterCosts}" Content="{Binding CostSummary}" />
            </StackPanel>
        </Grid>

        <DataTemplate.Triggers>
            <Trigger Property="Tag" SourceName="PassiveExtraDescription" Value="{StaticResource FalseValue}">
                <Setter TargetName="PassiveExtraDescription" Property="Width" Value="{StaticResource MaxWidthOnCollisionWithImage}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsToggleable}" Value="False">
                <Setter TargetName="subtitleText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h099ebd82g6ea7g43b7gbf0fg69e32653f322',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding ElementName=PassiveExtraDescription, Path=Visibility}" Value="Visible">
                <Setter TargetName="PassiveExtraDescription" Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsToggleable}" Value="True"/>
                    <Condition Binding="{Binding (ls:TooltipExtender.Context), RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="StatsPanel"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="WarningToggleable" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding ShortRestLimitExceeded}" Value="True">
                <Setter TargetName="WarningShortRest" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding LongRestLimitExceeded}" Value="True">
                <Setter TargetName="WarningLongRest" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CombatLimitExceeded}" Value="True">
                <Setter TargetName="WarningCombatLimit" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TurnLimitExceeded}" Value="True">
                <Setter TargetName="WarningTurnLimit" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller" >
                <Setter TargetName="DescriptionText" Property="Width" Value="{StaticResource MaxTooltipContentWidth}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMInterrupt}">
        <DataTemplate.Resources>
            <BitmapImage x:Key="IconReactionOn" UriSource="pack://application:,,,/Core;component/Assets/Reactions_c/c_ico_reactionOn_active.png" />
            <BitmapImage x:Key="IconReactionAsk" UriSource="pack://application:,,,/Core;component/Assets/Reactions_c/c_ico_reactionAsk_active.png" />
            <BitmapImage x:Key="IconReactionOff" UriSource="pack://application:,,,/Core;component/Assets/Reactions_c/c_ico_reactionOff_active.png" />
        </DataTemplate.Resources>

        <Grid>

            <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Top" Template="{StaticResource TooltipStripTopBackground}" Tag="{Binding ElementName=TitleArea}" Margin="-36,-20,-36,-25" />

            <Image x:Name="DecorationImage" Style="{StaticResource TooltipMainIconStyle}">
                <Image.Source>
                    <MultiBinding Converter="{StaticResource IconIdToSourceConverter}">
                        <Binding Source="Assets/Tooltips/Icons/"/>
                        <Binding Path="IconName"/>
                    </MultiBinding>
                </Image.Source>
            </Image>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel HorizontalAlignment="Center" Margin="0 5 0 0" Width="{StaticResource MaxTooltipContentWidth}" >
                    <!-- Title -->
                    <StackPanel x:Name="TitleArea" Style="{StaticResource TooltipTitleSurround}" >
                        <TextBlock x:Name="TitleText" Text="{Binding Name}" Style="{StaticResource TooltipCtxTransStringTitleStyle}" Width="{StaticResource MaxWidthOnCollisionWithImage}"/>
                        <TextBlock x:Name="subtitleText" Style="{StaticResource TooltipSubTitleStyle}" Text="{Binding Source=hee42bdaeg1e29g42feg90dfg54e68ed479c9,Converter={StaticResource TranslatedStringConverter}}"/>
                        <TextBlock x:Name="AvailableMsg" Text="{Binding Source=h7bb323e1g2294g4f5eg905eg82ae9d71abf0,Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding Available,Converter={StaticResource BoolToCollapsedConverter}}" Foreground="{StaticResource LS_alertTxtColor}"/>
                    </StackPanel>

                    <!-- DAMAGE -->
                    <ContentPresenter x:Name="InterruptDamage" ContentTemplate="{StaticResource SpellDamageSection}" Content="{Binding .}" Visibility="Collapsed"/>

                    <!-- DESCRIPTIONS -->
                    <ContentControl x:Name="InterruptDescription" ContentTemplate="{StaticResource SpellDescriptionTemplate}" Content="{Binding .}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Margin="{StaticResource ExtraPadSpace}"/>

                    <!-- STATUS/CONDITIONS -->
                    <ContentPresenter x:Name="InterruptStatus" ContentTemplate="{StaticResource StatusList}" Content="{Binding StatusApplies}" HorizontalAlignment="Left"/>

                    <!-- ON MISS AND ON SAVE MESSAGES -->
                    <ItemsControl x:Name="OnMissMessages" ItemsSource="{Binding OnMissMessages}" Margin="{StaticResource AdditionalMessagesMargin}" Visibility="{Binding OnMissMessages.Count, Converter={StaticResource CountToVisibilityConverter}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" MaxWidth="{StaticResource DetailSectionWidth}" Foreground="{StaticResource TooltipColor.Secondary}"  Style="{StaticResource TooltipStringBodyStyle}" Margin="8,2,0,2">
                                    <Run Text="{Binding Source=h2d431f82g4984g4294ga8edg944f01925773, Converter={StaticResource TranslatedStringConverter}}" />
                                    <Span>
                                        <b:Interaction.Behaviors>
                                           <ls:CtxTransStringRunGeneratorBehavior Source="{Binding .}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                        </b:Interaction.Behaviors>
                                    </Span>
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ItemsControl x:Name="OnSaveMessages" ItemsSource="{Binding OnSaveMessages}" Margin="{StaticResource AdditionalMessagesMargin}" Visibility="{Binding OnSaveMessages.Count, Converter={StaticResource CountToVisibilityConverter}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" MaxWidth="{StaticResource DetailSectionWidth}" Foreground="{StaticResource TooltipColor.Secondary}"  Style="{StaticResource TooltipStringBodyStyle}" Margin="8,2,0,2">
	                                <Run Text="{Binding Source=hcd11abdfg86e4g4470gabf5g52fad467aa86, Converter={StaticResource TranslatedStringConverter}}" />
                                    <Span>
                                        <b:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding .}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                        </b:Interaction.Behaviors>
                                    </Span>
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- PERMANENT WARNINGS -->
                    <ContentPresenter x:Name="PermanentWarnings" ContentTemplate="{StaticResource PermanentWarningSection}" Content="{Binding .}"/>

                    <!-- UPCASTING -->
                    <StackPanel x:Name="Upcast" Visibility="{Binding UpcastDescription, Converter={StaticResource StringToVisibilityConverter}}">
                        <StackPanel Style="{StaticResource SubSectionPanelStyle}">
                            <Image Source="{StaticResource IconUpcast}" Style="{StaticResource SubSectionImageStyle}" Margin="-4,0,8,0"/>
                            <TextBlock Style="{StaticResource TooltipSectionTitleStyle}" Visibility="Visible" VerticalAlignment="Center" Text="{Binding Source='h0f8acaadgd1f6g4a7ega71ageda041426536', Converter={StaticResource TranslatedStringConverter}}"/>
                        </StackPanel>

                        <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Visibility="Visible" Margin="{StaticResource DefaultMarginBottom}">
                            <b:Interaction.Behaviors>
                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding UpcastDescription}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                            </b:Interaction.Behaviors>
                        </TextBlock>
                    </StackPanel>

                    <!-- WARNINGS -->
                    <ItemsControl ItemsSource="{Binding Warnings}" ItemTemplate="{StaticResource DetailSectionsTemplate}" Visibility="{Binding Warnings.Count, Converter={StaticResource CountToVisibilityConverter}}" Margin="{StaticResource DefaultMarginBottom}"/>

                    <!-- PROPERTIES -->
                    <ItemsControl x:Name="PropertiesList" ItemsSource="{Binding Properties}" ItemTemplate="{StaticResource PropertyTemplate}" Visibility="{Binding Properties.Count, Converter={StaticResource CountToVisibilityConverter}}"
                                  Style="{StaticResource ItemsControlHorizontalWrapPanel}" Margin="{StaticResource DefaultMarginBottom}"/>

                    <!-- STATUS -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,16">
                        <Image x:Name="ReactionStatusIcon" Source="{StaticResource IconReactionOn}" VerticalAlignment="Top" Margin="0,8,8,0" MaxHeight="50" Stretch="Uniform"/>
                        <TextBlock x:Name="ReactionStatusText" Text="{Binding Source='hb392d1e3ge13cg44b7g8238g0b08a960aeec',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipDescriptionStyle}" VerticalAlignment="Center" TextWrapping="Wrap" MaxWidth="600"/>
                    </StackPanel>

                    <!-- FOOTER -->
                    <ls:LSNineSliceImage Style="{StaticResource TooltipStripBottomStyle}" x:Name="footer" Visibility="{Binding Costs.Count, Converter={StaticResource CountToVisibilityConverter}}">
                        <ContentPresenter ContentTemplate="{StaticResource FooterCosts}" Content="{Binding Costs}"/>
                    </ls:LSNineSliceImage>
                </StackPanel>
            </Grid>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="InterruptDamage" Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                <Setter TargetName="InterruptDamage" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Visibility, ElementName=OnSaveMessages}" Value="Visible">
                <Setter TargetName="OnMissMessages" Property="Margin" Value="-10,0,0,0"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Ask}" Value="True">
                <Setter TargetName="ReactionStatusIcon" Property="Source" Value="{StaticResource IconReactionAsk}"/>
                <Setter TargetName="ReactionStatusText" Property="Text" Value="{Binding Source='h1b5f7eaeg553fg43d1ga804gaa6f2428563b',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Enabled}" Value="False">
                <Setter TargetName="ReactionStatusIcon" Property="Source" Value="{StaticResource IconReactionOff}"/>
                <Setter TargetName="ReactionStatusText" Property="Text" Value="{Binding Source='hb5b0547cg9bdcg479cgb8ebg2ab66c4615e1',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Keyboard">
                <Setter TargetName="ReactionStatusIcon" Property="Margin" Value="0,2,8,0"/>
                <Setter TargetName="ReactionStatusIcon" Property="MaxHeight" Value="42"/>
                <Setter TargetName="ReactionStatusText" Property="MaxWidth" Value="750"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="Keyboard">
                <Setter TargetName="ReactionStatusIcon" Property="Margin" Value="0,2,8,0"/>
                <Setter TargetName="ReactionStatusIcon" Property="MaxHeight" Value="42"/>
                <Setter TargetName="ReactionStatusText" Property="MaxWidth" Value="750"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMInterruptDecision}" >
        <ContentPresenter Content="{Binding Interrupt}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMContextTransStringInterruptParam}" >
        <ContentPresenter Content="{Binding InterruptData}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMPassive}">
        <ContentPresenter Content="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplate="{StaticResource PassivesTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMContextTransStringPassiveParam}" >
        <ContentPresenter Content="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplate="{StaticResource PassivesTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMCharacterCreationPassive}">
        <ContentPresenter Content="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplate="{StaticResource PassivesTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTooltipPassive}">
        <ContentPresenter Content="{Binding .}" ContentTemplate="{StaticResource PassivesTooltip}"/>
    </DataTemplate>

    <!-- Item Tooltip - Character Creator -->
    <DataTemplate DataType="{x:Type ls:VMCharacterCreationEquipment}" >
        <Grid x:Name="root">
            <!-- Image and gradient -->
            <Rectangle Style="{StaticResource TooltipItemRarityRectangleStyle}" />

            <Image x:Name="DecorationImage" Style="{StaticResource TooltipMainIconStyle}">
                <Image.Source>
                    <MultiBinding Converter="{StaticResource IconIdToSourceConverter}">
                        <Binding Source="Assets/Tooltips/ItemIcons/"/>
                        <Binding Path="IconName"/>
                    </MultiBinding>
                </Image.Source>
            </Image>

            <Grid x:Name="ContentHolder" Width="{StaticResource MaxTooltipContentWidth}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!-- Text and other content -->
                <StackPanel MaxWidth="{StaticResource MaxTooltipContentWidth}" >

                    <!-- HEADER -->
                    <!-- Title and subtitle -->
                    <TextBlock x:Name="Title" Style="{StaticResource TooltipItemRarityTextStyle}" Text="{Binding Name}" MaxWidth="{StaticResource MaxWidthOnCollisionWithImage}"/>

                    <TextBlock x:Name="SubTitleContainer" Style="{StaticResource TooltipSubTitleNoCollapseStyle}" Foreground="{Binding Foreground, ElementName=Title}">
                        <Run x:Name="Rarity" Text="{Binding RarityText, StringFormat='{}{0} '}"/><Run
                        x:Name="SubTitle" Text="{Binding TypeText}"/>
                    </TextBlock>

                    <!-- LORE DESCRIPTION -->
                    <Control x:Name="LoreDescriptionSection" Template="{StaticResource TooltipStripLoreTextTemplate}" Visibility="{Binding LoreDescription, Converter={StaticResource StringToVisibilityConverter}}" />
                </StackPanel>
            </Grid>
        </Grid>

        <DataTemplate.Triggers>
            <Trigger SourceName="DecorationImage" Property="ActualWidth" Value="0">
                <Setter TargetName="ContentHolder" Property="Width" Value="Auto"/>
            </Trigger>
            <DataTrigger Binding="{Binding Rarity}" Value="Common">
                <Setter TargetName="Rarity" Property="Text" Value=""/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Text, ElementName=Rarity}" Value="" />
                    <Condition Binding="{Binding Text, ElementName=SubTitle}" Value="" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="SubTitleContainer" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="RarityNameStyle" TargetType="Run">
        <Setter Property="Text" Value=""/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Rarity}" Value="Uncommon">
                <Setter Property="Text" Value="{Binding Source=h7682e16bg7c69g4a72g8f1fg1b32519665f3, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} '}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Rarity}" Value="Rare">
                <Setter Property="Text" Value="{Binding Source=heb7ba0d5g7f4cg49e9g9ce2g86cf5e5bd277, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} '}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Rarity}" Value="VeryRare">
                <Setter Property="Text" Value="{Binding Source=ha342f3ebg0f8fg40d7g821agd05c5cc7673c, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} '}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Rarity}" Value="Legendary">
                <Setter Property="Text" Value="{Binding Source=h97227897g1345g4046gbb62g842dcc292db1, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} '}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!-- Item Tooltip-->

    <DataTemplate x:Key="AlchemySectionTemplate" DataType="{x:Type ls:VMTooltipItemSectionDetail}">
        <StackPanel x:Name="AlchemySection" Visibility="{Binding Item, Converter={StaticResource NullToCollapsedConverter},FallbackValue=Collapsed}" Margin="{StaticResource DefaultMarginBottom}">
            <TextBlock x:Name="AlchemyTitle"  Style="{StaticResource TooltipSectionTitleStyle}" VerticalAlignment="Center" Text="{Binding Source='hd40af023g3265g492dgb433gb272f433a093',Converter={StaticResource TranslatedStringConverter}}" Margin="0,8,0,16"/>
            <DockPanel HorizontalAlignment="Left" Background="Transparent" DataContext="{Binding Item}" ToolTip="{StaticResource ManagedTooltip}">
                <Grid x:Name="AlchemyIconHolder" VerticalAlignment="Top" DockPanel.Dock="Left" Margin="{StaticResource DefaultMarginRight}">
                    <Rectangle x:Name="IconBorder" Style="{StaticResource TooltipBoostIconBorderDashedStyle}" Width="{StaticResource TooltipActionIconFrameSize}" Height="{StaticResource TooltipActionIconFrameSize}"/>
                    <Rectangle x:Name="AlchemyResultIcon" Width="{StaticResource TooltipActionIconSize}" Height="{StaticResource TooltipActionIconSize}" Fill="{Binding Icon}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right"/>
                </Grid>

                <DockPanel VerticalAlignment="Center" DockPanel.Dock="Left" HorizontalAlignment="Left" >
                    <TextBlock x:Name="AlchemyResultName" DockPanel.Dock="Top" HorizontalAlignment="Left" Text="{Binding Name}" Style="{StaticResource TooltipBaseTextStyle}" Foreground="{StaticResource TooltipColor.Title}" FontSize="{StaticResource MediumFontSize}"/>
                    <TextBlock x:Name="AlchemyResultType" DockPanel.Dock="Bottom" HorizontalAlignment="Left" Text="{Binding TypeText}" Style="{StaticResource TooltipBaseTextStyle}" Margin="0,-4,0,0" FontSize="{StaticResource MediumFontSize}"/>
                </DockPanel>
            </DockPanel>
        </StackPanel>
        <DataTemplate.Triggers>

            <DataTrigger Binding="{Binding Item.Rarity}" Value="Uncommon">
                <Setter TargetName="AlchemyResultName" Property="Foreground" Value="{StaticResource ItemRarityColour.Uncommon}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="Rare">
                <Setter TargetName="AlchemyResultName" Property="Foreground" Value="{StaticResource ItemRarityColour.Rare}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="VeryRare">
                <Setter TargetName="AlchemyResultName" Property="Foreground" Value="{StaticResource ItemRarityColour.VeryRare}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="Legendary">
                <Setter TargetName="AlchemyResultName" Property="Foreground" Value="{StaticResource ItemRarityColour.Legendary}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.IsStoryItem}" Value="True">
                <Setter TargetName="AlchemyResultName" Property="Foreground" Value="{StaticResource LS_storyColor}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ItemsTooltip" >
        <!-- Tag is to change the predicate on the CollectionFilterBehavior, as it can't be set through a trigger directly -->
        <Grid x:Name="root" d:DataContext="{d:DesignInstance {x:Type ls:VMItem}, IsDesignTimeCreatable=True}" Tag="{Binding OwnerDCWidget, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}">
            <b:Interaction.Behaviors>
                <ls:CollectionFilterBehavior x:Name="FilteredGaleStatuses" ItemsSource="{Binding PermanentStatusEffects}" Predicate="{Binding Tag.Data.StatusIdPredicate, ElementName=root}" CompareParam="{StaticResource GaleConsumeStatusId}"/>
            </b:Interaction.Behaviors>

            <!-- Image and gradient -->
            <Rectangle Style="{StaticResource TooltipItemRarityRectangleStyle}" />
            <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Top" Template="{StaticResource TooltipStripTopBackground}" Tag="{Binding ElementName=TitleArea}" Margin="-36,-20,-36,-25" />

            <Image x:Name="DecorationImage" Style="{StaticResource TooltipMainIconStyle}">
                <Image.Source>
                    <MultiBinding Converter="{StaticResource IconIdToSourceConverter}">
                        <Binding Source="Assets/Tooltips/ItemIcons/"/>
                        <Binding Path="IconName"/>
                    </MultiBinding>
                </Image.Source>
            </Image>

            <Grid x:Name="ContentHolder" Width="{StaticResource MaxTooltipContentWidth}" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!-- Text and other content -->
                <StackPanel MaxWidth="{StaticResource MaxTooltipContentWidth}" >
                    <!-- HEADER -->

                    <!-- Title and subtitle -->
                    <StackPanel x:Name="TitleArea" Style="{StaticResource TooltipTitleSurround}">
                        <TextBlock x:Name="Title" Style="{StaticResource TooltipItemRarityTextStyle}" Text="{Binding Name}" Width="{StaticResource MaxWidthOnCollisionWithImage}"/>

                        <TextBlock x:Name="SubTitleContainer" Style="{StaticResource TooltipSubTitleNoCollapseStyle}" >
                        <Run x:Name="Rarity" Style="{StaticResource RarityNameStyle}"/><Run
                        x:Name="SubTitle" Text="{Binding TypeText}"/>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel DataContext="{Binding (ls:TooltipExtender.Data), RelativeSource={RelativeSource Mode=TemplatedParent}}" d:DataContext="{d:DesignInstance {x:Type ls:VMTooltipItem}, IsDesignTimeCreatable=True}">
                        <!-- Equipped By Warning-->
                        <Control x:Name="EquippedByWarning" Template="{StaticResource EquippedLabelTemplate}" Visibility="Collapsed" Foreground="{StaticResource LS_guestTxtColor}">
                            <Control.Tag>
                                <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                    <Binding Source="h7660812bg5518g4b67g8fbdg835faf6ef636"/>
                                    <Binding Path="EquippingCharacter.Name"/>
                                </MultiBinding>
                            </Control.Tag>
                        </Control>

                        <!-- Remaining time for summons -->
                        <ContentControl x:Name="LifetimeHolder" Template="{StaticResource TooltipStripTemplate}" Visibility="Collapsed" Margin="{StaticResource DefaultMarginTop}">
                            <StackPanel x:Name="Duration" Orientation="Horizontal" Margin="0,11">
                                <Image Source="{StaticResource TTHourglassImage}" Stretch="None" VerticalAlignment="Center" Margin="38,0,28,0" />
                                <TextBlock x:Name="LifetimeDurationText" FontSize="{StaticResource MediumFontSize}" VerticalAlignment="Center">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                            <Binding Source="h2dc60835g9000g440fga70fg330291eda7eb"/>
                                            <Binding Path="DataContext.Lifetime" ElementName="root"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </ContentControl>

                        <!-- DAMAGES -->
                        <StackPanel x:Name="DamagesSection">
                            <!-- Camp Supplies -->
                            <DockPanel x:Name="suppliesDisplay" ToolTipService.Placement="Top" ToolTipService.VerticalOffset="0" MaxWidth="{StaticResource DetailSectionWidth}" Visibility="{Binding DataContext.CampSupplies, ElementName=root, Converter={StaticResource CountToVisibilityConverter},FallbackValue=Collapsed}" HorizontalAlignment="Left">
                                <Image Style="{StaticResource CampFireIcon}"/>
                                <TextBlock VerticalAlignment="Center" DockPanel.Dock="Left" FontSize="{StaticResource LargeFontSize}" LineStackingStrategy="BlockLineHeight" LineHeight="{StaticResource IntermediateFontSizeLineHeight}" Foreground="{StaticResource LS_tint100}" TextWrapping="Wrap">
                                <ls:TextBlockFormatter.SourceText>
                                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                        <Binding Source="hbae5dd01g4c64g4b58ga7bcg84360d7a5458"/>
                                        <Binding Path="DataContext.CampSupplies" ElementName="root"/>
                                    </MultiBinding>
                                </ls:TextBlockFormatter.SourceText>
                                </TextBlock>
                            </DockPanel>

                            <!-- Armor stats -->
                            <StackPanel x:Name="armorDisplay" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-14,0,0,0" ClipToBounds="False" Visibility="{Binding ArmorSection.Details.Count, Converter={StaticResource CountToVisibilityConverter},FallbackValue=Collapsed}">
                                <Grid DataContext="{Binding ArmorSection.Details[0]}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right">
                                    <Grid.ToolTip>
                                        <ls:LSTooltip Content="{Binding Path=(ls:TooltipExtender.Owner).Stats.ArmorClass, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </Grid.ToolTip>
                                    <Image Source="{StaticResource TTACImage}" Stretch="None" />
                                    <TextBlock x:Name="ArmorText" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource DamageText}" Text="{Binding Value}"/>
                                </Grid>
                                <TextBlock Text="{Binding Source='h6d1b6256g3ea8g4e82gaa0agc7fbeb252fdf',Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center" Style="{StaticResource DamageText}"/>
                            </StackPanel>

                            <!-- Weapon Damage stats -->
                            <StackPanel x:Name="damageDisplay" ls:AttachedProperties.InheritedTag="{Binding Damages, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='minmax'}" Visibility="Collapsed">
                                <StackPanel.Tag>
                                    <MultiBinding Converter="{StaticResource EqualConverter}">
                                        <Binding Path="(ls:TooltipExtender.Owner)" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                        <Binding Path="EquippingCharacter"/>
                                    </MultiBinding>
                                </StackPanel.Tag>

                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Style="{StaticResource TooltipTitleStyle}">
                                <ls:TextBlockFormatter.SourceText>
                                    <!-- [1]~[2] Damage -->
                                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                        <Binding Source="h4b0d6407g56b2g408cga7f8gda7a3c0affe4"/>
                                        <Binding Path="(ls:AttachedProperties.InheritedTag).x" RelativeSource="{RelativeSource Mode=Self}"/>
                                        <Binding Path="(ls:AttachedProperties.InheritedTag).y" RelativeSource="{RelativeSource Mode=Self}"/>
                                    </MultiBinding>
                                </ls:TextBlockFormatter.SourceText>
                                </TextBlock>


                                <!-- Keyboard Versatile Messaging-->
                                <StackPanel x:Name="KeyboardVersatileMessaging" Orientation="Horizontal" Margin="0,-4,0,0" Visibility="Collapsed">
                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hfbf78535g63cbg497bg9f0ag260553831875',Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource TooltipColor.Primary}" FontSize="{StaticResource MediumFontSize}" FontFamily="{StaticResource DefaultFont}"/>
                                    <TextBlock x:Name="VersatileEquippedLabel" ls:TextBlockFormatter.SourceText="{Binding Source='h3aa09574g4d88g474bgbe97g5a989944c7e9',Converter={StaticResource TranslatedStringConverter}, StringFormat='{} - {0}'}" Foreground="{StaticResource TooltipColor.Primary}" FontSize="{StaticResource MediumFontSize}" FontFamily="{StaticResource DefaultFont}" Visibility="Collapsed"/>
                                </StackPanel>

                                <!-- Controller Versatile Messaging-->
                                <Grid x:Name="PadVersatileMessaging" Visibility="Collapsed">
                                    <TextBlock x:Name="VersatileEquippedLabelPad" ls:TextBlockFormatter.SourceText="{Binding Source='h3aa09574g4d88g474bgbe97g5a989944c7e9',Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource TooltipColor.Primary}" FontSize="{StaticResource SmallFontSize}" TextWrapping="Wrap" FontWeight="DemiBold" Margin="0,4,0,6" Visibility="Collapsed"/>
                                </Grid>

                                <DockPanel ClipToBounds="False" Margin="{StaticResource ExtraPadSpace}">
                                    <Grid DockPanel.Dock="Left" VerticalAlignment="Top" Margin="-10,0,0,0">
                                        <!-- In case of versatile weapons, the first dice of 'DamageDice' will be hidden -->
                                        <!-- The individual dice will become visible and are used to alter their opacity and ZIndex depending on 1H/2H equip style -->
                                        <ItemsControl x:Name="DamageDice" VerticalAlignment="Top" HorizontalAlignment="Right" ItemsSource="{Binding Damages}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}"/>

                                        <ContentControl x:Name="VersatileDie1H" Style="{StaticResource DieIconStyle}" ContentTemplate="{StaticResource DamageDiceSet}" Content="{Binding Damages[0]}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,30,0" Opacity="0.7" Visibility="{Binding DataContext.IsVersatile, ElementName=root, Converter={StaticResource BoolToVisibleConverter}}"/>
                                        <ContentControl x:Name="VersatileDie2H" Style="{StaticResource DieIconStyle}" ContentTemplate="{StaticResource DamageDiceSet}" Content="{Binding VersatileDamages[0]}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,80,0" Visibility="{Binding DataContext.IsVersatile, ElementName=root, Converter={StaticResource BoolToVisibleConverter}}"/>
                                    </Grid>

                                    <ItemsControl DockPanel.Dock="Left" x:Name="DamagesList" ItemsSource="{Binding Damages}" AlternationCount="{Binding Damages.Count}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,6,0,0" >
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="ls:VMDamageRoll">
                                                <WrapPanel x:Name="DamageListEntry" Orientation="Horizontal">
                                                    <TextBlock x:Name="DamageLabel" Style="{StaticResource DamageValueTextStyle}">
													<ls:TextBlockFormatter.SourceText>
														<MultiBinding StringFormat="{}+{0}{1:+#;-#;}{2: /#;'';''}">
															<Binding Path="DiceTypeSet.Str"/>
															<Binding Path="DamageBonus"/>
															<Binding Path="DamageDivider"/>
														</MultiBinding>
													</ls:TextBlockFormatter.SourceText>
                                                    </TextBlock>

                                                    <Image HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageIconStyle}" />
                                                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}"/>
                                                    <Control Template="{StaticResource DamageTypeNameTemplate}">
                                                        <Control.Resources>
                                                            <Style TargetType="TextBlock" BasedOn="{StaticResource DamageValueTextStyle}"/>
                                                        </Control.Resources>
                                                    </Control>
                                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h4f3ba872g1c86g4dbag9253g439da8478726, Converter={StaticResource TranslatedStringConverter}, StringFormat='{} ({0})'}" Visibility="{Binding IsConditional, Converter={StaticResource BoolToVisibleConverter}}" Style="{StaticResource DamageValueTextStyle}"/>
                                                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" ls:TextBlockFormatter.SourceText="{Binding DiceTypeSet.ExtraStr, StringFormat=' ({0})'}" Visibility="{Binding DiceTypeSet.ExtraStr, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}"/>
                                                    <TextBlock x:Name="IgnoreResistanceTypeText" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" Visibility="Collapsed"/>
                                                </WrapPanel>
                                                <DataTemplate.Triggers>
                                                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                        <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="DamageLabel">
                                                            <Setter.Value>
                                                                <MultiBinding StringFormat="{}{0}{1:+#;-#;}{2: /#;'';''}">
                                                                    <Binding Path="DiceTypeSet.Str"/>
                                                                    <Binding Path="DamageBonus"/>
                                                                    <Binding Path="DamageDivider"/>
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding DiceTypeSet.Str}" Value=""/>
                                                            <Condition Binding="{Binding DamageBonus}" Value="0"/>
                                                            <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="DamageListEntry" Property="Visibility" Value="Collapsed"/>
                                                    </MultiDataTrigger>

                                                    <DataTrigger Binding="{Binding DiceTypeSet.Str}" Value="">
                                                        <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="DamageLabel">
                                                            <Setter.Value>
                                                                <MultiBinding StringFormat="{}{0:+#;-#;}{1: /#;'';''}">
                                                                    <Binding Path="DamageBonus"/>
                                                                    <Binding Path="DamageDivider"/>
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=(ItemsControl.AlternationIndex), RelativeSource={RelativeSource Mode=Self}}" Value="0"/>
                                                            <Condition Binding="{Binding Path=DataContext.IsVersatile, ElementName=root}" Value="True"/>
                                                            <Condition Binding="{Binding Path=DataContext.VersatileDamages.Count, ElementName=DamagesList, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter TargetName="DamageLabel" Property="ls:TextBlockFormatter.SourceText">
                                                                <Setter.Value>
                                                                    <MultiBinding StringFormat="{}{0} ({1}){2:+#;-#;}{3: /#;'';''}">
                                                                        <Binding Path="(ls:TooltipExtender.Data).FirstVersatileDamage.DiceTypeSet.Str" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                                                        <Binding Path="(ls:TooltipExtender.Data).FirstDamage.DiceTypeSet.Str" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                                                        <Binding Path="DamageBonus"/>
                                                                        <Binding Path="DamageDivider"/>
                                                                    </MultiBinding>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>

                                                    <DataTrigger Binding="{Binding IgnoreResistanceType}" Value="Resistant">
                                                        <Setter TargetName="IgnoreResistanceTypeText" Property="Visibility" Value="Visible"/>
                                                        <Setter TargetName="IgnoreResistanceTypeText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h85ad064cg8cd0g4f24gae50g6257bd080eca', StringFormat=' ({0})', Converter={StaticResource TranslatedStringConverter}}"/>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </DockPanel>
                            </StackPanel>

                            <!-- Spell Damage and result stats -->
                            <ContentPresenter x:Name="SpellDamage" ContentTemplate="{StaticResource SpellDamageSection}" Content="{Binding Path=Spell }" Visibility="{Binding Content, Converter={StaticResource NullToCollapsedConverter}}"/>

                            <!-- Status Damage -->
                            <ContentPresenter ContentTemplate="{StaticResource StatusDamageSection}" Content="{Binding Status}"/>

                        </StackPanel>

                        <!-- TECHNICAL DESCRIPTION -->
                        <StackPanel x:Name="TechnicalDescriptionSection" HorizontalAlignment="Left">
                            <!-- Technical description -->
                            <TextBlock x:Name="technicalDescription" Style="{StaticResource TooltipAdjustableDescriptionStyle}" Margin="{StaticResource DefaultMarginBottom}" Visibility="{Binding TechnicalDescription.Text, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}">
                            <b:Interaction.Behaviors>
                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding TechnicalDescription}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                            </b:Interaction.Behaviors>
                            </TextBlock>

                            <!-- Spell Description -->
                            <ContentControl x:Name="SpellDescription" ContentTemplate="{StaticResource SpellDescriptionTemplate}" Content="{Binding Spell}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Visibility="{Binding Spell, Converter={StaticResource NullToCollapsedConverter}}"/>

                            <!-- Status -->
                            <WrapPanel x:Name="Status" HorizontalAlignment="Left">
                                <ContentPresenter ContentTemplate="{StaticResource StatusList}" Content="{Binding Spell.ResultSections}" Visibility="{Binding DataContext.Spell.ResultSections.Count, ElementName=Status, Converter={StaticResource CountToVisibilityConverter},FallbackValue=Collapsed}"/>
                                <ContentPresenter ContentTemplate="{StaticResource StatusList}" Content="{Binding StatusSections}" Visibility="{Binding DataContext.StatusSections.Count, ElementName=Status, Converter={StaticResource CountToVisibilityConverter},FallbackValue=Collapsed}"/>
                            </WrapPanel>
                        </StackPanel>

                        <!-- METAMAGIC AND UPCASTING -->
                        <ContentPresenter ContentTemplate="{StaticResource SpellModifiersSection}" Content="{Binding .}" Tag="{Binding Spell}" Margin="0" Visibility="{Binding Content, Converter={StaticResource NullToCollapsedConverter}}"/>

                        <!-- MAGICAL PROPERTIES -->
                        <ContentControl x:Name="BoostsAndPassivesSection" Visibility="Collapsed" Template="{StaticResource TooltipStripMagicalPropertiesTemplate}">
                            <!-- Boosts and Passives -->
                            <StackPanel>
                                <StackPanel x:Name="BoostsAndPassives" Visibility="Collapsed">
                                    <ContentPresenter Style="{StaticResource ItemPassivesContentPresenterStyle}" Content="{Binding Passives}" DataContext="{Binding .}"/>
                                    <ContentPresenter x:Name="Boosts" Style="{StaticResource ItemBoostsContentPresenterStyle}" Content="{Binding Boosts}" DataContext="{Binding .}"/>
                                </StackPanel>

                                <StackPanel x:Name="BoostsAndPassivesMainHand" Visibility="Collapsed">
                                    <TextBlock x:Name="BoostTitleMainHand" Style="{StaticResource TooltipSectionTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h8a2addc4gb160g4358g90a6gb65f1f7c0000', Converter={StaticResource TranslatedStringConverter}}" Margin="0,8,0,4"/>
                                    <ContentPresenter Style="{StaticResource ItemPassivesContentPresenterStyle}" Content="{Binding PassivesMainHand}" DataContext="{Binding .}"/>
                                    <ContentPresenter x:Name="BoostsMainHand" Style="{StaticResource ItemBoostsContentPresenterStyle}" Content="{Binding BoostsMainHand}" DataContext="{Binding .}"/>

                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding PassivesOffHand.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                                        <Condition Binding="{Binding BoostsOffHand.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Margin" Value="0"/>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                </StackPanel>

                                <StackPanel x:Name="BoostsAndPassivesOffHand" Visibility="Collapsed">
                                    <TextBlock x:Name="BoostTitleOffHand" Style="{StaticResource TooltipSectionTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h80276877gd95cg4477ga1a3g85986f4f919b', Converter={StaticResource TranslatedStringConverter}}"
                                           Margin="0,8,0,4"/>
                                    <ContentPresenter Style="{StaticResource ItemPassivesContentPresenterStyle}" Content="{Binding PassivesOffHand}" DataContext="{Binding .}"/>
                                    <ContentPresenter x:Name="BoostsOffHand" Style="{StaticResource ItemBoostsContentPresenterStyle}" Content="{Binding BoostsOffHand}" DataContext="{Binding .}"/>
                                </StackPanel>

                                <ItemsControl x:Name="PermanentStatuses" Style="{StaticResource ActiveConditionsSection}" ItemsSource="{Binding DataContext.PermanentStatusEffects, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="Collapsed">
                                    <ItemsControl.Tag>
                                        <!-- Doesn't work if put directly in condition where it's used. Any attempt to bind the scecond binding results in a garbage value inside EqualConverter -->
                                        <MultiBinding Converter="{StaticResource EqualConverter}">
                                            <Binding Path="DataContext.PermanentStatusEffects.Count" ElementName="root"/>
                                            <Binding Path="FilteredItems.Count" ElementName="FilteredGaleStatuses"/>
                                        </MultiBinding>
                                    </ItemsControl.Tag>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding StatusId}" Value="{StaticResource GaleConsumeStatusId}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ItemsControl>
                            </StackPanel>
                        </ContentControl>

                        <!-- Proficiency Unlocks (Actions) -->
                        <StackPanel x:Name="ActionsPanel" Visibility="{Binding Actions.Count, Converter={StaticResource CountToVisibilityConverter},FallbackValue=Collapsed}">
                            <DockPanel HorizontalAlignment="Left" Margin="{StaticResource ExtraPadSpace}">
                                <Image DockPanel.Dock="Left" Source="{StaticResource IconWeaponProficiency}" VerticalAlignment="Top" Style="{StaticResource SubSectionImageStyle}"/>
                                <TextBlock Style="{StaticResource TooltipSectionTitleStyle}" TextWrapping="Wrap" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Source='h23929a25gb39ag409bga61ag1b0e9d6f5852',Converter={StaticResource TranslatedStringConverter}}" />
                            </DockPanel>

                            <ItemsControl ItemsSource="{Binding Actions}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0,4,8,12">
                                            <Rectangle x:Name="IconBorder" Style="{StaticResource TooltipBoostIconBorderDashedStyle}"/>
                                            <Rectangle x:Name="Icon" Style="{StaticResource TooltipBoostIconStyle}" Fill="{Binding Icon}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" >
                                                <Rectangle.ToolTip>
                                                    <ls:LSTooltip Content="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </Rectangle.ToolTip>
                                            </Rectangle>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding DataContext.NeedsProficiency, ElementName=ActionsPanel}" Value="True" />
                                                    <Condition Binding="{Binding DataContext.IsProficient, ElementName=ActionsPanel}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter TargetName="Icon" Property="Opacity" Value="0.7"/>
                                                    <Setter TargetName="IconBorder" Property="Stroke" Value="{StaticResource TooltipColor.Special}" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>

                        <!-- Alchemy Produce -->

                        <ContentPresenter ContentTemplate="{StaticResource AlchemySectionTemplate}" Content="{Binding DataContext.AlchemyResult, ElementName=root}" Visibility="{Binding DataContext.AlchemyResult, ElementName=root, Converter={StaticResource NullToCollapsedConverter},FallbackValue=Collapsed}"/>
                        <!-- PERMANENT WARNINGS -->
                        <ContentPresenter x:Name="PermanentWarnings" ContentTemplate="{StaticResource PermanentWarningSection}" Content="{Binding .}"/>

                        <!-- LORE DESCRIPTION -->
                        <Control x:Name="LoreDescriptionSection" Template="{StaticResource TooltipStripLoreTextTemplate}" Visibility="{Binding LoreDescription, Converter={StaticResource StringToVisibilityConverter}}" />

                        <!-- Gale consume warning -->
                        <Control x:Name="GaleWarning" Template="{StaticResource WarningLabelTemplate}" Tag="{Binding Source='h12ae3447g8e06g4f92gb0e0gcaeb349c6066', Converter={StaticResource TranslatedStringConverter}}" Background="{StaticResource IconGaleConsume}" Foreground="{StaticResource TooltipColor.Secondary}" Visibility="{Binding FilteredItems.Count, ElementName=FilteredGaleStatuses, Converter={StaticResource CountToVisibilityConverter},FallbackValue=Collapsed}"/>

                        <!-- Armor Class Warning-->
                        <Control x:Name="ACAbilityWarning" Template="{StaticResource WarningLabelTemplate}" Background="{StaticResource IconBrushWarningGrey}" Foreground="{StaticResource TooltipColor.Secondary}" Visibility="Collapsed">
                            <Control.Tag>
                                <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                    <Binding Source="h4333422eg15d9g4c6egbfbeg9f06915940d1"/>
                                    <Binding Path="ACAbilityCap"/>
                                </MultiBinding>
                            </Control.Tag>
                        </Control>

                        <!-- Spell warnings (i.e. from scrolls) -->
                        <ItemsControl ItemsSource="{Binding Spell.UnavailableReasons}" Margin="{StaticResource AdditionalMessagesMargin}" Visibility="{Binding Spell.UnavailableReasons.Count, Converter={StaticResource CountToVisibilityConverter}, FallbackValue=Collapsed}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Control Template="{StaticResource WarningLabelTemplate}" Background="{StaticResource IconBrushWarning}" Tag="{Binding Line}" Foreground="{StaticResource LS_alertTxtColor}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!-- WARNINGS -->
                        <ItemsControl x:Name="WarningSection" ItemsSource="{Binding WarningSections}" ItemTemplate="{StaticResource SectionTemplate}" Visibility="{Binding WarningSections.Count, Converter={StaticResource CountToVisibilityConverter}, FallbackValue=Collapsed}" Margin="{StaticResource AdditionalMessagesMargin}"/>

                        <!-- ACTIVE CONDITIONS -->
                        <ItemsControl ItemsSource="{Binding NonPermanentStatusEffects}" DataContext="{Binding DataContext,ElementName=root}" Style="{StaticResource ActiveConditionsSection}"/>

                        <ItemsControl x:Name="InheritedStatusList" ItemsSource="{Binding InheritedStatuses}" Margin="{StaticResource DefaultMarginBottom}" Style="{StaticResource ActiveConditionsSection}"/>

                        <WrapPanel x:Name="PropertiesSection" Orientation="Horizontal" Margin="0,4,0,20">
                            <ItemsControl ItemsSource="{Binding Spell.Properties}" ItemTemplate="{StaticResource PropertyTemplate}" Visibility="{Binding Spell.Properties.Count, Converter={StaticResource CountToVisibilityConverter}, FallbackValue=Collapsed}" Style="{StaticResource ItemsControlHorizontalWrapPanel}"/>
                            <ItemsControl ItemsSource="{Binding Properties}" ItemTemplate="{StaticResource PropertyTemplate}" Visibility="{Binding Properties.Count, Converter={StaticResource CountToVisibilityConverter}, FallbackValue=Collapsed}" Style="{StaticResource ItemsControlHorizontalWrapPanel}"/>
                        </WrapPanel>
                    </StackPanel>
                </StackPanel>

                <!-- FOOTER -->
                <ls:LSNineSliceImage Style="{StaticResource TooltipStripBottomStyle}" Grid.Row="1" Visibility="{Binding CanMove, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Bottom" DataContext="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}" d:DataContext="{d:DesignInstance {x:Type ls:VMTooltipItem}, IsDesignTimeCreatable=True}">
                    <DockPanel VerticalAlignment="Bottom">
                        <DockPanel.Resources>
                            <Style x:Key="ItemTooltipBottomTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBottomTextStyle}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DockPanel.Resources>


                        <!-- Cost Summary -->
                        <WrapPanel x:Name="CostSummary" HorizontalAlignment="Left" Visibility="Collapsed" DockPanel.Dock="Left" Margin="0,2,0,0" MaxWidth="550">
                            <ContentPresenter ContentTemplate="{StaticResource FooterCosts}" Content="{Binding CostSummary}"/>
                            <StackPanel Orientation="Horizontal" Visibility="{Binding IsConsumable, Converter={StaticResource BoolToVisibleConverter}}" Margin="0,0,0,6">
                                <Image x:Name="PropertyIcon" HorizontalAlignment="Center" Stretch="Uniform" Style="{StaticResource PropertyIconCost}" Source="{StaticResource IconConsume}"/>
                                <TextBlock Style="{StaticResource SectionResourceNameStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Source='h3d9ac91dg2ed4g47aega170gc4d638367579',Converter={StaticResource TranslatedStringConverter}}" Margin="10,2,0,-2"/>
                                <StackPanel.ToolTip>
                                    <ls:LSTooltip IsHitTestVisible="False" Content="ha8b28fcaga542g44ecg91bbgdaa03d029898" ls:AttachedProperties.InheritedTag="h3d9ac91dg2ed4g47aega170gc4d638367579" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                                </StackPanel.ToolTip>
                            </StackPanel>
                        </WrapPanel>
                        <DockPanel x:Name="costAndWeight" DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Margin="0,0,0,8">
                            <!-- Weight -->
                            <StackPanel x:Name="WeightContainer" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,2,0">
                                <TextBlock x:Name="weightText" ls:TextBlockFormatter.SourceText="{Binding Weight, Converter={StaticResource UnitConverter}, ConverterParameter='Weight N2'}" Style="{StaticResource ItemTooltipBottomTextStyle}" VerticalAlignment="bottom" />
                                <Image x:Name="weightIcon" Source="{StaticResource IconWeight}" Stretch="None" Style="{StaticResource FooterWeightPosition}" VerticalAlignment="bottom"/>
                                <StackPanel.ToolTip>
                                    <ls:LSTooltip IsHitTestVisible="False" Content="h9b3f757dgbe75g41a6gae52g0c2b1a5e49f2" ls:AttachedProperties.InheritedTag="hd4969285gc8d8g41afg8e2cg12d5444acbe2" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                                </StackPanel.ToolTip>
                            </StackPanel>

                            <!-- Gold -->
                            <StackPanel x:Name="GoldContainer" DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="12,0,0,0"  >
                                <!-- Original gold value -->
                                <TextBlock Text="{Binding Gold, StringFormat={}{0:N0}}" VerticalAlignment="Bottom" Style="{StaticResource ItemTooltipBottomTextStyle}" >
                                    <b:Interaction.Triggers>
                                        <b:PropertyChangedTrigger Binding="{Binding TradePrice}">
                                            <b:Interaction.Behaviors>
                                                <b:ConditionBehavior>
                                                    <b:ConditionalExpression>
                                                        <b:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="-1"/>
                                                        <b:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="{Binding Gold}"/>
                                                    </b:ConditionalExpression>
                                                </b:ConditionBehavior>
                                            </b:Interaction.Behaviors>
                                            <b:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                        </b:PropertyChangedTrigger>
                                    </b:Interaction.Triggers>
                                </TextBlock>

                                <!-- Trade price -->
                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding TradePrice}" VerticalAlignment="Bottom" Margin="12,0,0,0" x:Name="TradePriceText" Visibility="Collapsed" Style="{StaticResource ItemTooltipBottomTextStyle}">
                                    <b:Interaction.Triggers>
                                        <b:PropertyChangedTrigger Binding="{Binding TradePrice}">
                                            <b:Interaction.Behaviors>
                                                <b:ConditionBehavior>
                                                    <b:ConditionalExpression>
                                                        <b:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="-1"/>
                                                        <b:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="{Binding Gold}"/>
                                                    </b:ConditionalExpression>
                                                </b:ConditionBehavior>
                                            </b:Interaction.Behaviors>
                                            <b:ChangePropertyAction TargetName="TradePriceText" PropertyName="Visibility" Value="Visible"/>
                                        </b:PropertyChangedTrigger>
                                    </b:Interaction.Triggers>
                                </TextBlock>

                                <Image Source="{StaticResource IconGold}" Stretch="None" Style="{StaticResource FooterGoldPosition}"/>
                                <StackPanel.ToolTip>
                                    <ls:LSTooltip IsHitTestVisible="False" Content="hcea50cc0gbeebg4aaeg992bgdb79cbfef7e8" ls:AttachedProperties.InheritedTag="hf9b209b9g3745g41a1g85dfg129065b9b215" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                                </StackPanel.ToolTip>
                            </StackPanel>
                        </DockPanel>
                    </DockPanel>
                </ls:LSNineSliceImage>
            </Grid>
        </Grid>


        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding NonPermanentStatusEffects.Count}" Value="0"/>
                    <Condition Binding="{Binding InheritedStatuses.Count}" Value="0"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="InheritedStatusList" Property="Margin" Value="0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag.Data.UIInputMethod, ElementName=root}" Value="Controller" />
                    <Condition Binding="{Binding IsVersatile}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PadVersatileMessaging" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag.Data.UIInputMethod, ElementName=root}" Value="Keyboard" />
                    <Condition Binding="{Binding IsVersatile}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="KeyboardVersatileMessaging" Property="Visibility" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag.Data.UIInputMethod, ElementName=root}" Value="Controller" />
                    <Condition Binding="{Binding ActualWidth, ElementName=CostSummary, Converter={StaticResource GreaterThanConverter}, ConverterParameter=350}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="DockPanel.Dock" TargetName="costAndWeight" Value="Bottom" />
                <Setter Property="DockPanel.Dock" TargetName="CostSummary" Value="Top" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag.Data.UIInputMethod, ElementName=root}" Value="Controller" />
                    <Condition Binding="{Binding ActualWidth, ElementName=costAndWeight, Converter={StaticResource GreaterThanConverter}, ConverterParameter=280}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="DockPanel.Dock" TargetName="costAndWeight" Value="Bottom" />
                <Setter Property="DockPanel.Dock" TargetName="CostSummary" Value="Top" />
            </MultiDataTrigger>

            <Trigger SourceName="DecorationImage" Property="ActualWidth" Value="0">
                <Setter TargetName="ContentHolder" Property="Width" Value="Auto"/>
            </Trigger>
            <DataTrigger Binding="{Binding Rarity}" Value="Common">
                <Setter TargetName="Rarity" Property="Text" Value=""/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).ArmorSection.Details.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter},ConverterParameter=0}" Value="True">
                <Setter TargetName="SubTitle" Property="Text" Value="{Binding (ls:TooltipExtender.Data).ArmorSection.Header, RelativeSource={RelativeSource Mode=Self}}" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Text, ElementName=Rarity}" Value="" />
                    <Condition Binding="{Binding Text, ElementName=SubTitle}" Value="" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="SubTitleContainer" Property="Visibility" Value="Collapsed" />
                    <Setter TargetName="Title" Property="Margin" Value="{StaticResource TitleWithoutSubtitleMargin}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Lifetime, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="LifetimeHolder" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Lifetime}" Value="1">
                <Setter TargetName="LifetimeDurationText" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h134a812fgc09eg43d7gbaadg9cb153532707"/>
                            <Binding Source="1"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).ArmorSection.Details[0].ShowPlus, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter TargetName="ArmorText" Property="Text" Value="{Binding Value, StringFormat='+{0}'}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter TargetName="DamagesList" Property="Margin" Value="10,10,0,10"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).VersatileDamages.Count, RelativeSource={RelativeSource Mode=Self}}" Value="1">
                <Setter TargetName="VersatileDie1H" Property="Margin" Value="0,0,0,0"/>
                <Setter TargetName="VersatileDie2H" Property="Margin" Value="0,0,50,0"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag, ElementName=damageDisplay}" Value="True" />
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).EquippedHand, RelativeSource={RelativeSource Mode=Self}}" Value="OffHand"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BoostsAndPassivesMainHand" Property="Opacity" Value="0.5"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Tag, ElementName=damageDisplay}" Value="True" />
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).EquippedHand, RelativeSource={RelativeSource Mode=Self}}" Value="MainHand"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BoostsAndPassivesOffHand" Property="Opacity" Value="0.5"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).EquippingCharacter, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}"/>
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).PassivesMainHand.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BoostsAndPassivesOffHand" Property="Opacity" Value="0.5"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Boosts and passives -->
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).Boosts.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassives" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).Passives.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassives" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).Boosts.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).Passives.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Boosts" Property="Margin" Value="{StaticResource DefaultMarginTop}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).BoostsMainHand.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassivesMainHand" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).PassivesMainHand.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassivesMainHand" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).BoostsMainHand.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).PassivesMainHand.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BoostsMainHand" Property="Margin" Value="{StaticResource DefaultMarginTop}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).BoostsOffHand.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassivesOffHand" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).PassivesOffHand.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassivesOffHand" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).BoostsOffHand.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).PassivesOffHand.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BoostsOffHand" Property="Margin" Value="{StaticResource DefaultMarginTop}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource NullToBoolTrueConverter}}" Value="False">
                <Setter TargetName="root" Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding PermanentStatusEffects.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                    <Condition Binding="{Binding Tag, ElementName=PermanentStatuses}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PermanentStatuses" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Path=Visibility, ElementName=BoostsAndPassivesSection}" Value="Visible">
                <Setter TargetName="BoostsAndPassivesSection" Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
            </DataTrigger>

            <!-- Equipping Character -->
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).EquippingCharacter.Name, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}}" Value="False">
                <Setter TargetName="EquippedByWarning" Property="Visibility" Value="Visible" />
                <Setter TargetName="VersatileEquippedLabel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="VersatileEquippedLabelPad" Property="Visibility" Value="Visible"/>
                <Setter TargetName="VersatileDie1H" Property="Opacity" Value="1"/>
                <Setter TargetName="VersatileDie1H" Property="Panel.ZIndex" Value="1"/>
                <Setter TargetName="VersatileDie2H" Property="Opacity" Value="0.4"/>
            </DataTrigger>

            <!--Hide "Equipped by" text when a tooltip is pinned-->
            <DataTrigger Binding="{Binding OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="WhenPinned">
                <Setter TargetName="EquippedByWarning" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <!--Hide "Equipped by" text on items equipped by NPCs-->
            <DataTrigger Binding="{Binding EquippedBy.IsPlayableCharacter}" Value="False">
                <Setter TargetName="EquippedByWarning" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).VersatileTwohanded, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter TargetName="VersatileEquippedLabel" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hab0f38bfg982fg417bg9246gd38f135b3964',Converter={StaticResource TranslatedStringConverter}, StringFormat='{} - {0}'}"/>
                <Setter TargetName="VersatileEquippedLabelPad" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hab0f38bfg982fg417bg9246gd38f135b3964',Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="VersatileDie1H" Property="Opacity" Value="0.4"/>
                <Setter TargetName="VersatileDie1H" Property="Panel.ZIndex" Value="0"/>
                <Setter TargetName="VersatileDie2H" Property="Opacity" Value="1"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsVersatile}" Value="True">
                <Setter TargetName="damageDisplay" Property="ls:AttachedProperties.InheritedTag" Value="{Binding VersatileDamages, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='minmax'}" />
                <Setter TargetName="DamageDice" Property="ItemsSource" Value="{Binding VersatileDamages}"/>
                <Setter TargetName="DamageDice" Property="ls:AttachedProperties.InheritedTag" Value="HideFirst"/>
                <Setter TargetName="DamagesList" Property="ItemsSource" Value="{Binding VersatileDamages}"/>
                <Setter TargetName="DamagesList" Property="AlternationCount" Value="{Binding VersatileDamages.Count}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsVersatile}" Value="True"/>
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).EquippingCharacter.Name, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}}" Value="False"/>
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).VersatileTwohanded, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="damageDisplay" Property="ls:AttachedProperties.InheritedTag" Value="{Binding (ls:TooltipExtender.Data).Damages,RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='minmax'}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsVersatile}" Value="True"/>
                    <Condition Binding="{Binding Path=AlternationCount, ElementName=DamagesList}" Value="1"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DamageDice" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ls:AttachedProperties.InheritedTag).y, ElementName=damageDisplay, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="damageDisplay" Property="Visibility" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Armor AC bonus warning -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).ACAbility, RelativeSource={RelativeSource Mode=Self}}" Value="None" />
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).EquipmentSlot, RelativeSource={RelativeSource Mode=Self}}" Value="Breast" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="ACAbilityWarning" Property="Visibility" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).ACAbilityCap, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="True"/>
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).ACAbility, RelativeSource={RelativeSource Mode=Self}}" Value="Dexterity" />
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).EquipmentSlot, RelativeSource={RelativeSource Mode=Self}}" Value="Breast" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="ACAbilityWarning" Property="Visibility" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data).ACAbilityCap, RelativeSource={RelativeSource Mode=Self}}" Value="0" >
                <Setter TargetName="ACAbilityWarning" Property="Tag" Value="{Binding Source='h24a49208g1912g4270g9d2dgc2986ab10ae0',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>

            <!-- Warnings -->
            <DataTrigger Binding="{Binding EncumbranceStateWarning}" Value="AtCarryLimit">
                <Setter TargetName="weightIcon" Property="Source" Value="{StaticResource IconWeightWarning}"/>
                <Setter TargetName="weightText" Property="Foreground" Value="{StaticResource LS_bar100TxtColor}"/>
            </DataTrigger>

            <!-- Footer -->
            <DataTrigger Binding="{Binding IsEquipment}" Value="False">
                <Setter TargetName="CostSummary" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEquipment}" Value="True" />
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).EquippingCharacter, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}"/>
                    <Condition Binding="{Binding (ls:TooltipExtender.Owner).CharacterMode, RelativeSource={RelativeSource Mode=Self}}" Value="InFTB"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="CostSummary" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEquipment}" Value="True" />
                    <Condition Binding="{Binding (ls:TooltipExtender.Data).EquippingCharacter, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}"/>
                    <Condition Binding="{Binding (ls:TooltipExtender.Owner).CharacterMode, RelativeSource={RelativeSource Mode=Self}}" Value="InCombat"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="CostSummary" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <!--HIDE ICON IN EXAMINE PANEL-->
            <DataTrigger Binding="{Binding Name, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Examine" >
                <Setter TargetName="DecorationImage" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMItem}">
        <ContentPresenter x:Name="root" Content="{Binding .}" ContentTemplate="{StaticResource ItemsTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTooltipItemSectionDetail}">
        <ContentPresenter x:Name="root" Content="{Binding Item}" ContentTemplate="{StaticResource ItemsTooltip}"/>
    </DataTemplate>

    <!-- Compare Tooltip Template (without background images or pin message) -->
    <ControlTemplate x:Key="CompareTooltipTemplate" TargetType="ContentControl">
        <DockPanel x:Name="EnclosingPanel" VerticalAlignment="Top">
            <DockPanel.Tag>
                <MultiBinding Converter="{StaticResource EquippedItemConverter}" FallbackValue="{x:Null}">
                    <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}"/>
                    <Binding Path="(ls:TooltipExtender.Owner)" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
            </DockPanel.Tag>
            <Border x:Name="EquippedItemPanelBorder" VerticalAlignment="Top" DockPanel.Dock ="Right"  Width="{Binding ElementName=HoveredItemPanel, Path=ActualWidth}" Visibility="{Binding ElementName=EnclosingPanel,Path=Tag,Converter={StaticResource NullToCollapsedConverter}}">
                <ContentControl x:Name="EquippedItemPanel" Template="{x:Null}" ls:AttachedProperties.InheritedTag="Equipped" ContentTemplate="{StaticResource ItemsTooltip}" Content="{Binding Path=Tag,ElementName=EnclosingPanel}" ls:TooltipExtender.IsOpen="{Binding ElementName=EquippedItemPanel,Path=IsVisible}" ls:TooltipExtender.Content="{Binding ElementName=EnclosingPanel,Path=Tag}" Visibility="Collapsed"/>
            </Border>

            <ContentControl x:Name="HoveredItemPanel" Template="{StaticResource BaseTooltipTemplate}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" DockPanel.Dock="Left" ls:TooltipExtender.Data ="{Binding Path=(ls:TooltipExtender.Data),ElementName=EnclosingPanel}" ContentTemplate="{StaticResource ItemsTooltip}"/>

        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger SourceName="EquippedItemPanelBorder" Property="IsVisible" Value="True">
                <Setter TargetName="EquippedItemPanel" Property="Template" Value="{StaticResource BaseTooltipTemplate}"/>
                <Setter TargetName="EquippedItemPanel" Property="Visibility" Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding FinalPlacement,RelativeSource={RelativeSource Mode=Self}}" Value="Left">
                <Setter TargetName="EquippedItemPanelBorder" Property="DockPanel.Dock" Value="Left"/>
                <Setter TargetName="HoveredItemPanel" Property="DockPanel.Dock" Value="Right"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Name, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="PinnedTooltips_c">
                <Setter TargetName="EquippedItemPanelBorder" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Dice Roll Tooltip -->
    <ControlTemplate x:Key="RollDescriptionTemplate">
        <StackPanel x:Name="rootPanel" HorizontalAlignment="Left" Orientation="Vertical">
            <StackPanel Orientation="Vertical" Margin="0,6">
                <TextBlock x:Name="AdvantageText" TextWrapping="Wrap" FontSize="{StaticResource MediumFontSize}"/>
                <!--TODO fix Text="{Binding DiceTypeSet.DiceType} needs to be Translated-->
                <TextBlock x:Name="txt" TextWrapping="Wrap" FontSize="{StaticResource MediumFontSize}" Tag="{Binding DiceTypeSet.Amount}" Foreground="{StaticResource TooltipColor.Secondary}">
                    <Run x:Name="PrefixText" Text=""/>
                    <Run x:Name="ValueText" Text="{Binding ElementName=txt, Path=Tag}"/><Run x:Name="DieText" Text="{Binding DiceTypeSet.DiceType}"/><Run x:Name="additionalVal" Text="{Binding AdditionalValue, StringFormat='{}{0:+#;-#;+0}'}"/>
                </TextBlock>
            </StackPanel>

            <ItemsControl ItemsSource="{Binding Modifiers}" Padding="0" HorizontalAlignment="Left" Margin="0,6" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibilityConverter}}">
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DiceTypeSet.Amount}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding DiceTypeSet.Str, StringFormat={}+{0}}" FontSize="{StaticResource MediumFontSize}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding AdditionalValue}" Value="0">
                <Setter TargetName="additionalVal" Property="Text" Value=""/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollAdvantageType}" Value="None">
                <Setter TargetName="rootPanel" Property="Orientation" Value="Horizontal"/>
                <Setter TargetName="AdvantageText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PrefixText" Property="Text" Value="{Binding Source='h9ad6cf4dg119cg4c28g8527gc2bec6466e0f', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollAdvantageType}" Value="Advantage">
                <Setter TargetName="AdvantageText" Property="Text" Value="{Binding Source='hfc9b8156g8e4fg4086g9c6cg26dbb03aa466', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AdvantageText" Property="Foreground" Value="{StaticResource TooltipColor.Bonus}"/>
                <Setter TargetName="txt" Property="Tag" Value="{Binding DiceTypeSet.Amount, Converter={StaticResource MultiplierConverter} , ConverterParameter=2 , StringFormat=N1}"/>
                <Setter TargetName="PrefixText" Property="Text" Value="{Binding Source='h6e3a9885ga3ffg4f82gb9f7gb2833b2a2e96', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollAdvantageType}" Value="Disadvantage">
                <Setter TargetName="AdvantageText" Property="Text" Value="{Binding Source='h34944186g018cg474dg96d8gd56417c3e086', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AdvantageText" Property="Foreground" Value="{StaticResource TooltipColor.Alert}"/>
                <Setter TargetName="txt" Property="Tag" Value="{Binding DiceTypeSet.Amount, Converter={StaticResource MultiplierConverter} , ConverterParameter=2}"/>
                <Setter TargetName="PrefixText" Property="Text" Value="{Binding Source='h0017825fgda99g495fg938dg196a95011901', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RollAdvantageDisplay">
        <Grid>
            <StackPanel x:Name="advantageList" Orientation="Vertical" Visibility="{Binding Advantages.Count, Converter={StaticResource CountToVisibilityConverter},FallbackValue=Collapsed}">
                <TextBlock Text="{Binding Source='hf07e401cgdd53g45f6g9c28ga2656dd26179', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 20 0 0"/>
                <ItemsControl ItemsSource="{Binding Advantages}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="img" Stretch="None" Visibility="Collapsed" VerticalAlignment="Center"/>
                                <TextBlock x:Name="desc" ls:TextBlockFormatter.SourceText="{Binding Description}" FontSize="{StaticResource MediumFontSize}" Foreground="{StaticResource TooltipColor.Secondary}" VerticalAlignment="Center" />
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding AdvantageType}" Value="Advantage">
                                    <Setter TargetName="img" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="img" Property="Source" Value="{StaticResource IconAdvantage}" />
                                    <Setter TargetName="desc" Property="Foreground" Value="{StaticResource TooltipColor.Bonus}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding AdvantageType}" Value="Disadvantage">
                                    <Setter TargetName="img" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="img" Property="Source" Value="{StaticResource IconDisadvantage}" />
                                    <Setter TargetName="desc" Property="Foreground" Value="{StaticResource TooltipColor.Alert}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Description}" Value="">
                                    <Setter TargetName="desc" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7c258c4fg5467g48e5ga704g2ccd2e80dfe6', Converter={StaticResource TranslatedStringConverter}}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding TagReason, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                                    <Setter TargetName="desc" Property="ls:TextBlockFormatter.SourceText">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                <Binding Source="hc3d99e0cgbd85g4418g9600g8bb5ce1b44f6"/>
                                                <Binding Path="TagReason.Name"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <TextBlock x:Name="AdvantageNoneText" Text="{Binding Source='hb047e755gd92bg43d8gac73gcf2a011a5ca1', Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource MediumFontSize}" Foreground="{StaticResource TooltipColor.Secondary}" Visibility="Collapsed"/>
            </StackPanel>

            <!--advantage fallBack-->
            <StackPanel x:Name="AdvantageFallBack">
                <TextBlock Text="{Binding Source='hf07e401cgdd53g45f6g9c28ga2656dd26179', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 20 0 0"/>
                <StackPanel Orientation="Horizontal">
                    <Image Stretch="None" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Advantage">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Source" Value="{StaticResource IconAdvantage}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Disadvantage">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Source" Value="{StaticResource IconDisadvantage}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Text="{Binding Source='h7c258c4fg5467g48e5ga704g2ccd2e80dfe6', Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource MediumFontSize}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Advantage">
                                        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Bonus}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Disadvantage">
                                        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Alert}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </StackPanel>
            <!--advantage fallBack-->
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=advantageList,Path=Visibility}" Value="Visible">
                <Setter TargetName="AdvantageFallBack" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollAdvantageType}" Value="None">
                <Setter TargetName="AdvantageNoneText" Property="Visibility" Value="Visible"/>
                <Setter TargetName="AdvantageFallBack" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="RollDieContainerTemplate">
        <ContentControl x:Name="Die" Style="{StaticResource DieIconStyle}" ContentTemplate="{StaticResource RollDiceSet}" Content="{Binding}" RenderTransformOrigin="0.5,0.5"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMRoll}">
        <StackPanel>
            <TextBlock Style="{StaticResource TooltipTitleNoCollapseStyle}" HorizontalAlignment="Left">
                    <Run Text="{Binding Source='hd54ec827g2cd8g480fg9b76g74a62c213271', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Run Text="{Binding DifficultyCheck}"/>
            </TextBlock>

            <TextBlock ls:TextBlockFormatter.SourceText="{Binding RollDescription}" Style="{StaticResource TooltipSubTitleStyle}"/>

            <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripTemplate}" Margin="{StaticResource DefaultMarginTopBottom}">
                <Grid VerticalAlignment="Center" ClipToBounds="False" >
                    <!-- Dice -->
                    <Grid Width="128" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-20 0 0 0">
                        <ItemsControl ItemsSource="{Binding Converter={StaticResource TooltipRollDiceConverter}}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource RollDieContainerTemplate}"
                                        VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-52,0,0,0"/>
                    </Grid>

                    <StackPanel Margin="100 18 0 0" VerticalAlignment="Center">
                        <!-- Description -->
                        <Control Template="{StaticResource RollDescriptionTemplate}"/>

                        <!-- Details -->
                        <ItemsControl ItemsSource="{Binding Modifiers}" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibilityConverter}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" FontSize="{StaticResource MediumFontSize}" Margin="0 0 10 0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Text" Value="{Binding Value, StringFormat={}{0:+#;-#;+0}}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Value}" Value="0">
                                                            <Setter Property="Text" Value="{Binding DiceTypeSet.Str, StringFormat={}+{0}}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource TooltipColor.Alert}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="False">
                                                            <Setter Property="Foreground" Value="{StaticResource TooltipColor.Bonus}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Text="{Binding Source='h8493c134g46fdg4a51gb78ag901a25906630', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 10 2" Foreground="{StaticResource TooltipColor.Secondary}"/>
                                        <TextBlock Text="{Binding Name}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 10 2" Foreground="{StaticResource TooltipColor.Keyword}"/>
                                        <TextBlock x:Name="AdditionalText" ls:TextBlockFormatter.SourceText="{Binding AdditionalValue}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 0 2" Foreground="{StaticResource TooltipColor.Keyword}"/>
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding AdditionalValue, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False">
                                            <Setter TargetName="AdditionalText" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </Grid>
            </ContentControl>

            <TextBlock TextWrapping="Wrap" Foreground="{StaticResource TooltipColor.Primary}" Margin="{StaticResource DefaultMarginTop}" FontSize="{StaticResource MediumFontSize}">
                <Run Text="{Binding Source='h87e79fa7gcd5eg41ceg8f66g245868d1fedf', Converter={StaticResource TranslatedStringConverter}}"/>
                <Run Text="{Binding RollDescription}"/>
            </TextBlock>

            <Control Template="{StaticResource RollAdvantageDisplay}" />
        </StackPanel>
    </DataTemplate>

    <ControlTemplate x:Key="RollTooltipTemplate" TargetType="Control">
        <ContentControl Template="{StaticResource BaseTooltipTemplate}" Content="{Binding .}"/>
    </ControlTemplate>

    <!-- Description tooltip -->
    <DataTemplate x:Key="DescriptionTooltipContent">
        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource TooltipBodyStyle}" Width="{StaticResource MaxTooltipContentWidth}" Margin="0,11,0,0"/>
    </DataTemplate>

    <!-- Ritual tooltip -->
    <DataTemplate x:Key="RitualTooltipContent">
        <StackPanel x:Name="root" Margin="0 5">
            <Border Style="{StaticResource TooltipStripTopStyleWithContent}">
                <Grid Margin="{StaticResource ExtraPadSpace}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- HEADER -->
                    <Image Stretch="None" VerticalAlignment="Center" Grid.Column="0" Margin="0,0,10,0" Source="{StaticResource IconRitualPoint}"/>

                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Style="{StaticResource TooltipTitleNoCollapseStyle}" Text="{Binding Source='hc3fa3d4agb98bg4cceg80a4g4ae437a80850', Converter={StaticResource TranslatedStringConverter}}"/>
                </Grid>
            </Border>
            <Rectangle Style="{StaticResource tooltipHeaderDividerLine}" />

            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource TooltipBodyStyle}" Width="{StaticResource MaxTooltipContentWidth}" Margin="0,11,0,0"/>

        </StackPanel>
    </DataTemplate>

    <!-- Spell Tooltip -->
    <DataTemplate x:Key="SpellsTooltip">
        <DataTemplate.Resources>
            <Style TargetType="TextBlock" >
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Primary}" />
            </Style>
        </DataTemplate.Resources>
        <Grid x:Name="root" DataContext="{Binding (ls:TooltipExtender.Data), RelativeSource={RelativeSource Mode=TemplatedParent}}" ls:TooltipExtender.Owner="{Binding TemplatedParent.TemplatedParent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=TemplatedParent}}">

            <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Top" Template="{StaticResource TooltipStripTopBackground}" Tag="{Binding ElementName=TitleArea}" Margin="-36,-20,-36,-25" />

            <Image x:Name="DecorationImage" Style="{StaticResource TooltipMainIconStyle}">
                <Image.Source>
                    <MultiBinding Converter="{StaticResource IconIdToSourceConverter}">
                        <Binding Source="Assets/Tooltips/Icons/"/>
                        <Binding Path="IconName"/>
                    </MultiBinding>
                </Image.Source>
            </Image>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Top" MaxWidth="{StaticResource MaxTooltipContentWidth}" Width="{StaticResource MaxTooltipContentWidth}">
                    <!-- HEADER -->
                    <StackPanel x:Name="TitleArea" Style="{StaticResource TooltipTitleSurround}">
                        <DockPanel DockPanel.Dock="Top"  LastChildFill="False">
                            <TextBlock Style="{StaticResource TooltipTitleStyle}" DockPanel.Dock="Left" Text="{Binding Name}" MaxWidth="{StaticResource MaxWidthOnCollisionWithImage}"/>
                            <Image Source="{StaticResource IconUpcast}" DockPanel.Dock="Left" Margin="8,0" Stretch="None" VerticalAlignment="Top" Visibility="{Binding CanUpcast, Converter={StaticResource BoolToVisibleConverter}}"/>
                        </DockPanel>
                        <ContentPresenter ContentTemplate="{StaticResource SpellSchoolTitle}" Content="{Binding .}"/>
                    </StackPanel>
                    <!-- WARNINGS -->
                    <ItemsControl x:Name="Warnings" ItemsSource="{Binding UnavailableReasons}" Visibility="{Binding UnavailableReasons.Count, Converter={StaticResource CountToVisibilityConverter}}" Margin="0,12,0,12">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <DockPanel HorizontalAlignment="Left" Visibility="{Binding Line, Converter={StaticResource StringToVisibilityConverter}}" Margin="-16,-4,0,0" MaxWidth="{StaticResource MaxWidthOnCollisionWithImage}">
                                    <Image Source="{StaticResource IconWarning}" DockPanel.Dock="Left" Stretch="None" Style="{StaticResource leftAlignedTooltipWarningIcon}" />
                                    <TextBlock DockPanel.Dock="Left" ls:TextBlockFormatter.SourceText="{Binding Line}" Style="{StaticResource AlertText}" />
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- DAMAGE -->
                    <ContentPresenter x:Name="SpellDamage" ContentTemplate="{StaticResource SpellDamageSection}" Content="{Binding Path=DataContext , ElementName=root}" Visibility="Collapsed"/>

                    <!-- DESCRIPTIONS -->
                    <ContentControl x:Name="SpellDescription" ContentTemplate="{StaticResource SpellDescriptionTemplate}" Content="{Binding .}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Margin="{StaticResource ExtraPadSpace}"/>

                    <!-- Only enable if visible so as to not eat input used by other systems e.g. World Tooltips -->
                    <ls:LSInputBinding x:Name="expanderInput" BoundEvent="ExpandTooltip" PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <ls:LSInputBinding.Style>
                            <Style TargetType="ls:LSInputBinding">
                                <Setter Property="IsEnabled" Value ="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding ="{Binding ElementName=expandableSection, Path=Visibility}" Value="Visible">
                                        <Setter Property="IsEnabled" Value ="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ls:LSInputBinding.Style>
                    </ls:LSInputBinding>

                    <!-- STATUS/CONDITIONS -->
                    <ContentPresenter x:Name="SpellStatus" ContentTemplate="{StaticResource StatusList}" Content="{Binding ResultSections}" HorizontalAlignment="Left"/>

                    <!-- ON MISS AND ON SAVE MESSAGES -->
                    <ItemsControl x:Name="OnMissMessages" ItemsSource="{Binding OnMissMessages}" Margin="{StaticResource AdditionalMessagesMargin}" Visibility="{Binding OnMissMessages.Count, Converter={StaticResource CountToVisibilityConverter}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" MaxWidth="{StaticResource DetailSectionWidth}" Foreground="{StaticResource TooltipColor.Secondary}"  Style="{StaticResource TooltipStringBodyStyle}" Margin="8,2,0,2">
                                    <Span ls:TextBlockFormatter.SourceText="{Binding Source=h2d431f82g4984g4294ga8edg944f01925773, Converter={StaticResource TranslatedStringConverter}}"/>
                                    <Span>
                                        <b:Interaction.Behaviors>
                                           <ls:CtxTransStringRunGeneratorBehavior Source="{Binding .}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                        </b:Interaction.Behaviors>
                                    </Span>
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ItemsControl x:Name="OnSaveMessages" ItemsSource="{Binding OnSaveMessages}" Margin="{StaticResource AdditionalMessagesMargin}" Visibility="{Binding OnSaveMessages.Count, Converter={StaticResource CountToVisibilityConverter}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" MaxWidth="{StaticResource DetailSectionWidth}" Foreground="{StaticResource TooltipColor.Secondary}"  Style="{StaticResource TooltipStringBodyStyle}" Margin="8,2,0,2">
                                    <Span ls:TextBlockFormatter.SourceText="{Binding Source=hcd11abdfg86e4g4470gabf5g52fad467aa86, Converter={StaticResource TranslatedStringConverter}}" />
                                    <Span>
                                        <b:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding .}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                        </b:Interaction.Behaviors>
                                    </Span>
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- PERMANENT WARNINGS -->
                    <ContentPresenter x:Name="PermanentWarnings" ContentTemplate="{StaticResource PermanentWarningSection}" Content="{Binding .}"/>

                    <!-- METAMAGIC AND UPCASTING -->
                    <ContentPresenter ContentTemplate="{StaticResource SpellModifiersSection}" Content="{Binding .}" Tag="{Binding .}"/>

                    <!-- Spell version availability warnings -->
                    <StackPanel x:Name="VariationWarnings" Width="{StaticResource MaxTooltipContentWidth}">
                        <TextBlock Text="{Binding Source='h4693f78cge101g4dbcg8d2fg314806236010', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipOverrideTextStyle}"/>
                        <TextBlock Margin="{StaticResource DefaultMarginBottom}" Style="{StaticResource TooltipOverrideTextStyle}"/>
                    </StackPanel>

                    <!-- CONCENTRATION WILL BREAK WARNING -->
                    <StackPanel x:Name="ConcentrationWarningPanel" 
                                Orientation="Horizontal" 
                                Width="{StaticResource MaxTooltipContentWidth}" 
                                Visibility="{Binding DataContext.WillBreakConcentration, ElementName=root, Converter={StaticResource BoolToVisibleConverter}}" 
                                Margin="-10,0,0,0">

                        <Image x:Name="ConcentrationWarningImage" Source="{StaticResource IconWarningSoft}" VerticalAlignment="Center" Stretch="None"/>
                        <TextBlock x:Name="ConcentrationWarningText" Foreground="{StaticResource LS_alertTxtColor}" FontSize="{StaticResource MediumFontSize}" VerticalAlignment="Center" TextWrapping="Wrap" MaxWidth="{StaticResource DetailSectionWidth}">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                    <Binding Source="h0604f01ag5d1eg4f62g8dcbg8cad97adbc59"/>
                                    <Binding Path="OwnerDCWidget.CurrentPlayer.SelectedCharacter.ConcentrationSpell.Name" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSTooltip}}"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>

                    <!-- PROPERTIES -->
                    <ItemsControl x:Name="PropertiesList" ItemsSource="{Binding Properties}" ItemTemplate="{StaticResource PropertyTemplate}" Visibility="{Binding Properties.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource ItemsControlHorizontalWrapPanel}"/>
                </StackPanel>

                <!-- FOOTER -->
                <ls:LSNineSliceImage Style="{StaticResource TooltipStripBottomStyle}" x:Name="Footer" Grid.Row="1" VerticalAlignment="Bottom"  Visibility="Collapsed">
                    <WrapPanel Style="{StaticResource footerCostsList}" HorizontalAlignment="Left">
                        <!-- Cost -->
                        <ItemsControl x:Name="Costs" AlternationCount="{Binding CostSummary.Count}" ItemsSource="{Binding CostSummary}" HorizontalAlignment="Left" Visibility="{Binding CostSummary.Count, Converter={StaticResource CountToVisibilityConverter}}" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel x:Name="CostTemplateRoot" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Margin="0,0,30,0">
                                        <ContentPresenter x:Name="Icon" ContentTemplate="{StaticResource FooterFloatingWarningCost}" Content="{Binding .}"/>

                                        <!-- When in the cost, the max value represents the cost-->
                                        <TextBlock x:Name="Value" VerticalAlignment="Center" Visibility="{Binding MaxValue, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter='1'}" ls:TextBlockFormatter.SourceText="{Binding MaxValue, StringFormat='{}{0} '}" Style="{StaticResource SectionResourceNameStyle}"/>

                                        <TextBlock x:Name="Name" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource SectionResourceNameStyle}"/>
                                    </DockPanel>

                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding TypeId}" Value="Movement">
                                            <Setter TargetName="Value" Property="ls:TextBlockFormatter.SourceText" Value="{Binding MaxValue, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short', StringFormat='{}{0} '}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                            <Setter TargetName="CostTemplateRoot" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Style.Triggers>
                                        <!-- Ritual -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TypeId}" Value="SpellSlot"/>
                                                <Condition Binding="{Binding Path=DataContext.Spell.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                                                <Condition Binding="{Binding Path=DataContext.Spell.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TypeId}" Value="WarlockSpellSlot"/>
                                                <Condition Binding="{Binding Path=DataContext.Spell.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                                                <Condition Binding="{Binding Path=DataContext.Spell.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>

                        <StackPanel x:Name="RitualSection" Orientation="Horizontal" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Visibility="Collapsed">
                            <StackPanel.ToolTip>

                                <ls:LSTooltip Content="{Binding Source='hc9646ee8gae50g4563g8964gae2ce4d62bac', Converter={StaticResource TranslatedStringConverter}}" ContentTemplate="{StaticResource RitualTooltipContent}" IsHitTestVisible="False" PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" ls:TooltipExtender.Owner="{Binding DataContext.CurrentPlayer.PlayerId.SelectedCharacter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Placement="Right"/>
                            </StackPanel.ToolTip>

                            <Image x:Name="RitualIcon" Stretch="None" Style="{StaticResource SectionImageStyle}" VerticalAlignment="Center" Margin="-10,0,0,0" Source="{StaticResource IconRitualPoint}"/>

                            <TextBlock x:Name="RitualText" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource SectionResourceNameStyle}" Text="{Binding Source='hc3fa3d4agb98bg4cceg80a4g4ae437a80850', Converter={StaticResource TranslatedStringConverter}}"/>
                        </StackPanel>

                        
                    </WrapPanel>
                </ls:LSNineSliceImage>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DataContext.Override, ElementName=root }" Value="None">
                <Setter TargetName="VariationWarnings" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.Damages.Count, ElementName=root , Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SpellDamage" Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                <Setter TargetName="SpellDamage" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding ResultSections.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SpellStatus" Property="Margin" Value="0,-12,0,16"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Visibility, ElementName=OnSaveMessages}" Value="Visible">
                <Setter TargetName="OnMissMessages" Property="Margin" Value="-10,0,0,0"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding DataContext.CostSummary.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="Footer" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <!-- Ritual -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.Spell.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, ElementName=Costs}" Value="True" />
                    <Condition Binding="{Binding DataContext.Spell.IsRitualDisabled, ElementName=Costs}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Footer" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="RitualSection" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.Spell.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, ElementName=Costs}" Value="True" />
                    <Condition Binding="{Binding DataContext.Spell.IsRitualDisabled, ElementName=Costs}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Footer" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="RitualSection" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="RitualSection" Property="Opacity" Value="0.7"/>
                    <Setter TargetName="RitualIcon" Property="Source" Value="{StaticResource IconRitualPointDisabled}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding IsVisible, ElementName=Footer}" Value="True">
                <Setter TargetName="PropertiesList" Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
            </DataTrigger>

            <!-- Active concentration warning (Pinned) -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="WhenPinned"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ConcentrationWarningText" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h0604f01ag5d1eg4f62g8dcbg8cad97adbc59"/>
                            <Binding Path="OwnerDCWidget.CurrentPlayer.SelectedCharacter.ConcentrationSpell.Name" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSElementCopy}}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMCharacterAction}">
        <ContentPresenter Content="{Binding DataContext}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMUpcast}">
        <ContentPresenter Content="{Binding .}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMCharacterCreationSpell}">
        <ContentPresenter Content="{Binding DataContext}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMFeatureSpell}">
        <ContentPresenter Content="{Binding DataContext}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMContextTransStringSpellParam}">
        <ContentPresenter Content="{Binding DataContext}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <!-- Boost -->
    <DataTemplate DataType="{x:Type ls:VMBoost}">
        <ContentPresenter x:Name="BoostTooltipContent" Content="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=Self}}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                <Setter TargetName="BoostTooltipContent" Property="Content" Value="{Binding .}"/>
                <Setter TargetName="BoostTooltipContent" Property="ContentTemplate" Value="{StaticResource BoostSimpleTooltipContent}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ls:VMTooltipBoost}">
        <ContentPresenter x:Name="BoostTooltipContent" Content="{Binding .}" ContentTemplate="{StaticResource SpellsTooltip}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                <Setter TargetName="BoostTooltipContent" Property="Content" Value="{Binding .}"/>
                <Setter TargetName="BoostTooltipContent" Property="ContentTemplate" Value="{StaticResource BoostSimpleTooltipContent}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTooltipSpell}">
        <ContentPresenter Content="{Binding .}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <!-- Dialogue Answer Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMDialogueAnswerTag}">
        <StackPanel Orientation="Vertical">
            <TextBlock Style="{StaticResource TooltipTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Name}"/>
            <TextBlock Style="{StaticResource TooltipSubTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Category}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="{StaticResource DefaultMarginTop}" ls:TextBlockFormatter.SourceText="{Binding Tooltip}"/>

            <StackPanel Orientation="Vertical" Visibility="{Binding IsRoll, Converter={StaticResource BoolToVisibleConverter}}">
                <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripTemplate}" >
                    <Grid VerticalAlignment="Center" ClipToBounds="False"  Margin="-20,0,-20,0">
                        <!-- Dice -->
                        <ItemsControl ItemsSource="{Binding Converter={StaticResource TooltipRollDiceConverter}}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource RollDieContainerTemplate}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0 0 0 0" />
                        <!-- Description -->
                        <Control Template="{StaticResource RollDescriptionTemplate}" Margin="140 0 0 0" VerticalAlignment="Center"/>
                    </Grid>
                </ContentControl>
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h57a05f43g5361g4b03g8883g56d4683b7100', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 20 0 0" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                <ItemsControl ItemsSource="{Binding Modifiers}" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibilityConverter}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style x:Key="DiceBgStyle" TargetType="Path" BasedOn="{StaticResource RollDiceBgStyle}"/>
                            </DataTemplate.Resources>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}">
                                    <Run>
                                        <Run.Style>
                                            <Style TargetType="Run">
                                                <Setter Property="Text" Value="{Binding Value, StringFormat='{}{0:+#;-#;+0} '}"/>
                                                <Style.Triggers>
                                                     <DataTrigger Binding="{Binding Value}" Value="0">
                                                        <Setter Property="Text" Value="{Binding DiceTypeSet.Str, StringFormat='{}+{0} '}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Alert}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="False">
                                                        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Bonus}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Run.Style>
                                    </Run>
                                </TextBlock>

                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h8493c134g46fdg4a51gb78ag901a25906630', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" VerticalAlignment="Center" Margin="0 0 10 0"/>
                                <TextBlock x:Name="label" ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 10 0" VerticalAlignment="Center"/>
                                <TextBlock x:Name="AdditionalText" ls:TextBlockFormatter.SourceText="{Binding AdditionalValue}" Style="{StaticResource TooltipSubTitleStyle}" VerticalAlignment="Center"/>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding BoostType}" Value="ProficiencyBonus">
                                    <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" >
                                        <Setter.Value>
                                            <MultiBinding StringFormat="{}{0} {1}">
                                                <Binding Path="Name"/>
                                                <Binding Source="h613ff7ddg32f4g43cagabd9g158fd1d7a4ec" Converter="{StaticResource TranslatedStringConverter}"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding BoostType}" Value="ExpertiseBonus">
                                    <Setter TargetName="label" Property="ls:TextBlockFormatter.SourceText" >
                                        <Setter.Value>
                                            <MultiBinding StringFormat="{}{0} {1}">
                                                <Binding Path="Name"/>
                                                <Binding Source="h62318286g57b2g4dfeg9ecag827942dd85f7" Converter="{StaticResource TranslatedStringConverter}"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding AdditionalValue, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False">
                                    <Setter TargetName="AdditionalText" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Control Template="{StaticResource RollAdvantageDisplay}" />
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!-- Input Event Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMInputEvent}">
        <TextBlock x:Name="content" VerticalAlignment="Top" Foreground="{StaticResource TooltipColor.Primary}">
            <Run Text="{Binding Caption}"/>
            <Run Text=" ["/>
            <Run Text="{Binding Shortcut}" Foreground="{StaticResource TooltipColor.Secondary}"/>
            <Run Text="]"/>
        </TextBlock>
    </DataTemplate>


    <!-- Action Resource Tooltip -->
    <DataTemplate x:Key="VMActionResourceTooltip" DataType="ls:VMActionResourceCostPreview">
        <StackPanel x:Name="root" Margin="0 5">
            <Border Style="{StaticResource TooltipStripTopStyleWithContent}">
                <Grid Margin="{StaticResource ExtraPadSpace}" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- HEADER -->

                    <ls:LSActionPointResources x:Name="ResourcePoints" VerticalAlignment="Center" HorizontalAlignment="Center" Background="Transparent" MaxActionPoints="1" AvailableActionPoints="1" HighlightedActionPoints="0" MaxGroupActionPoints="4" MaxActionPointGroups="0" ActionPointSize="{DynamicResource ActionResources.ActionPointSize}" SmallActionPointSize="{DynamicResource ActionResources.ActionPointSmallSize}" ActionPointGroupSize="{DynamicResource ActionResources.ActionPointGroupSize}" Style="{DynamicResource ActionResourcesTemplateSelector}" Margin="{StaticResource resourceIconMargin}" DataContext="{Binding ActionResource}"/>

                    <TextBlock x:Name="nameRun" Text="{Binding ActionResource.Name}" VerticalAlignment="Center" Style="{StaticResource TooltipTitleNoCollapseStyle}" Grid.Column="1" />

                </Grid>
            </Border>
            <Rectangle Style="{StaticResource tooltipHeaderDividerLine}" />

            <TextBlock x:Name="SubTitle" Style="{StaticResource TooltipSubTitleStyle}" Text="{Binding Source='h9e4ac23fgf83fg441bg9175ge4c4c92a6b60', Converter={StaticResource TranslatedStringConverter}}"  Margin="0,11,0,0"/>

            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding ActionResource.Description}" Margin="{StaticResource DefaultMarginBottom}" DataContext="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

            <DockPanel x:Name="RechargeInfo">
                <Image DockPanel.Dock="Left" Source="{StaticResource IconCooldown}" Stretch="None" Margin="0 0 11 0"/>
                <WrapPanel VerticalAlignment="Center" DockPanel.Dock="Left" Margin="0 0 0 0">
                    <TextBlock Text="{Binding Source='h835d57a1g1280g47efg86deg12e69ba1ced4',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipBodyStyle}"/>
                    <TextBlock x:Name="RechargeType" Foreground="{StaticResource TooltipColor.Secondary}" Text="{Binding Source='hab6eefdfgb328g4cf2g9c76g5f5a196d8423', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipBodyStyle}"/>
                </WrapPanel>
            </DockPanel>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ActionResource.ReplenishType}" Value="Never">
                <Setter TargetName="RechargeInfo" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="SubTitle" Property="Text" Value="{Binding Source='h2d4b70ddg94e1g466bga966g635c7f75fadb', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActionResource.ReplenishType}" Value="Rest">
                <Setter TargetName="RechargeType" Property="Text" Value="{Binding Source='hea8a0376gc5f1g47c6g985ag0dbcb5b4a14e', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActionResource.ReplenishType}" Value="ShortRest">
                <Setter TargetName="RechargeType" Property="Text" Value="{Binding Source='hc31080f8g3639g421cgaa17gef8c07ee30b4', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <!-- Action Resource Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMActionResource}">
        <ContentPresenter x:Name="root" Content="{Binding Path=(ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}}" ContentTemplate="{StaticResource VMActionResourceTooltip}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipStat">
                <Setter TargetName="root" Property="ContentTemplate" Value="{StaticResource VMStatTooltip}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMGroupResource}">
        <ContentPresenter x:Name="root" Content="{Binding Path=(ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}}" ContentTemplate="{StaticResource VMActionResourceTooltip}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipStat">
                <Setter TargetName="root" Property="ContentTemplate" Value="{StaticResource VMStatTooltip}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>



    <DataTemplate DataType="{x:Type ls:VMActionResourceCostPreview}">
        <ContentPresenter x:Name="root" Content="{Binding .}" ContentTemplate="{StaticResource VMActionResourceTooltip}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipStat">
                <Setter TargetName="root" Property="ContentTemplate" Value="{StaticResource VMStatTooltip}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate DataType="{x:Type ls:VMLearnableScroll}">
        <ContentPresenter x:Name="root" Content="{Binding .}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMResistance}">
        <!-- Enum value stored in tag as LocaEnum doesn't correctly support values past MAX. For those cases we have to alter the value (see triggers) -->
        <StackPanel x:Name="root" Tag="{Binding DamageTypeValue}">
            <StackPanel.Resources>
                <Style TargetType="ls:LSSpan" BasedOn="{StaticResource LSSpanStyle}">
                    <Style.Triggers>
                        <Trigger Property="TagType" Value="hl">
                            <Setter Property="Foreground" Value="{StaticResource LS_accent75TxtColor}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <!-- Default values and content is Vulnerable -->
            <Border Style="{StaticResource TooltipStripTopStyleWithContent}">
                <StackPanel>
                    <TextBlock x:Name="Title" Style="{StaticResource TooltipTitleNoCollapseStyle}" ls:TextBlockFormatter.SourceText="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h060ad079g2abdg43d8g9873gbb5fc58ba0e0'}"/>

                    <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Visibility="{Binding Source, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}">
                         <ls:TextBlockFormatter.SourceText>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hea17a85cg4aaag4679g9cbdge242e8f3bb9a"/>
                                <Binding Path="Source"/>
                            </MultiBinding>
                         </ls:TextBlockFormatter.SourceText>
                    </TextBlock>
                </StackPanel>
            </Border>
            <Rectangle Style="{StaticResource tooltipHeaderDividerLine}" />
            <DockPanel x:Name="BaseDescriptionContainer" Width="{StaticResource MaxTooltipContentWidth}">
                <Image x:Name="BaseIcon" Source="{StaticResource Vulnerable}" Stretch="None" VerticalAlignment="Center" Margin="0,0,10,0" DockPanel.Dock="Left"/>
                <TextBlock x:Name="BaseDescription" Style="{StaticResource TooltipBodyStyle}" Margin="0 20" ls:TextBlockFormatter.SourceText="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h8aa64a61g697ag44eag8025g72455bb15041'}" DockPanel.Dock="Right"/>
            </DockPanel>
            <DockPanel x:Name="AdditionalDescriptionContainer" Visibility="Collapsed" Width="{StaticResource MaxTooltipContentWidth}">
                <Image x:Name="AdditionalIcon" Source="{StaticResource ResistantNonMagical}" Stretch="None" VerticalAlignment="Center" Margin="0,0,10,0" DockPanel.Dock="Left"/>
                <TextBlock x:Name="AdditionalDescription" Style="{StaticResource TooltipBodyStyle}" Margin="0 20" ls:TextBlockFormatter.SourceText="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h05322b79g00ecg45c6gbbe0g691acc45fe63'}" DockPanel.Dock="Right"/>
            </DockPanel>

            <StackPanel x:Name="Duration" Orientation="Horizontal" Margin="{StaticResource DefaultMarginTopBottom}" Visibility="{Binding Duration, Converter={StaticResource CountToVisibilityConverter}}">
                <Image Source="{StaticResource TTHourglassImage}" Stretch="None" VerticalAlignment="Center" />
                <TextBlock x:Name="DurationText" FontSize="{StaticResource MediumFontSize}" Margin="28,0,0,0"  VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Special}">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h2dc60835g9000g440fga70fg330291eda7eb"/>
                            <Binding Path="Duration"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StackPanel>
        </StackPanel>
        <DataTemplate.Triggers>
            <!-- Adjusting Tag value for enum values past MAX (Only Spell is used currently) -->
            <DataTrigger Binding="{Binding DamageType}" Value="Spell">
                <Setter TargetName="root" Property="Tag" Value="{Binding DamageTypeValue, Converter={StaticResource AddConverter}, ConverterParameter=-1}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding NonMagical}" Value="Immune">
                <Setter TargetName="BaseIcon" Property="Source" Value="{StaticResource ImmuneNonMagicalShield}"/>
                <Setter TargetName="BaseDescription" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h97808b5cgaad5g464dg968eg0c072a28050f'}"/>
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h4c9804e9gee38g479agb4d4g58fb0b82ef4a'}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Magical}" Value="Immune">
                <Setter TargetName="BaseIcon" Property="Source" Value="{StaticResource ImmuneMagicalShield}"/>
                <Setter TargetName="BaseDescription" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h3aae6c8cg0762g42a1g8009g198913051bda'}"/>
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h4c9804e9gee38g479agb4d4g58fb0b82ef4a'}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Full}" Value="Immune">
                <Setter TargetName="BaseIcon" Property="Source" Value="{StaticResource ImmuneShield}"/>
                <Setter TargetName="BaseDescription" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h1a4566fcgb2a0g403bg8290ga38efbb04b46'}"/>
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h4c9804e9gee38g479agb4d4g58fb0b82ef4a'}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding NonMagical}" Value="Resistant">
                <Setter TargetName="BaseDescriptionContainer" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="AdditionalDescriptionContainer" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h1acad36eg1d2ag46c5g9b98g906b8a17bb70'}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Magical}" Value="Resistant">
                <Setter TargetName="BaseDescriptionContainer" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BaseIcon" Property="Source" Value="{StaticResource ResistantMagical}"/>
                <Setter TargetName="BaseDescription" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h613f3ccbgb531g4175ga9cbge4a9ed938a12'}"/>
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tag, ElementName=root, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h1acad36eg1d2ag46c5g9b98g906b8a17bb70'}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTag}">
        <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="0,10,0,10" Text="{Binding Tooltip}"/>
    </DataTemplate>

    <!-- List of resistances -->
    <DataTemplate x:Key="ListOfResistancesTooltipTemplate">
        <StackPanel Orientation="Vertical" MaxWidth="1000">
            <StackPanel.Resources>
                <Style TargetType="ls:LSSpan" BasedOn="{StaticResource LSSpanStyle}">
                    <Style.Triggers>
                        <Trigger Property="TagType" Value="hl">
                            <Setter Property="Foreground" Value="{StaticResource LS_accent75TxtColor}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <TextBlock TextWrapping="Wrap" Margin="0,0,0,28" ls:TextBlockFormatter.SourceText="{Binding Source='hf760bd98g64e4g4788g9761gb2d692399f15',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipDescriptionStyle}"/>
            <ItemsControl ItemsSource="{Binding Stats.Resistances}" Margin="20,0">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Rectangle x:Name="BackgroundFilling" Grid.Column="0" Grid.ColumnSpan="3" Fill="Transparent" Opacity="0.33"/>

                            <Image Grid.Column="0" Style="{DynamicResource ResistanceImage}"/>

                            <TextBlock x:Name="ResistanceName" Foreground="{StaticResource TooltipColor.Primary}" Style="{DynamicResource DamageTypeNameStyle}" Grid.Column="1" VerticalAlignment="Center" TextAlignment="Left" Margin="8,0,0,0" FontSize="{StaticResource MediumFontSize}"/>

                            <TextBlock x:Name="ResistanceType" Foreground="{StaticResource TooltipColor.Primary}" Text="- -" Grid.Column="2" VerticalAlignment="Center" TextAlignment="Right" Margin="0,0,8,0" FontSize="{StaticResource MediumFontSize}"/>
                        </Grid>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Full}" Value="Immune">
                                <Setter TargetName="BackgroundFilling" Property="Fill" Value="{StaticResource LS_tint00}"/>
                                <Setter TargetName="ResistanceType" Property="Text" Value="{Binding Source='h1198786dg4063g4010g83d9g8cbd36553077',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="ResistanceType" Property="Foreground" Value="{StaticResource LS_tint100}"/>
                                <Setter TargetName="ResistanceName" Property="Foreground" Value="{StaticResource LS_tint100}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding NonMagical}" Value="Immune">
                                <Setter TargetName="BackgroundFilling" Property="Fill" Value="{StaticResource LS_tint00}"/>
                                <Setter TargetName="ResistanceType" Property="Text" Value="{Binding Source='h1198786dg4063g4010g83d9g8cbd36553077',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="ResistanceType" Property="Foreground" Value="{StaticResource LS_tint100}"/>
                                <Setter TargetName="ResistanceName" Property="Foreground" Value="{StaticResource LS_tint100}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Magical}" Value="Immune">
                                <Setter TargetName="BackgroundFilling" Property="Fill" Value="{StaticResource LS_tint00}"/>
                                <Setter TargetName="ResistanceType" Property="Text" Value="{Binding Source='h1198786dg4063g4010g83d9g8cbd36553077',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="ResistanceType" Property="Foreground" Value="{StaticResource LS_tint100}"/>
                                <Setter TargetName="ResistanceName" Property="Foreground" Value="{StaticResource LS_tint100}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Full}" Value="Resistant">
                                <Setter TargetName="BackgroundFilling" Property="Fill" Value="{StaticResource LS_bonusTxtColor}"/>
                                <Setter TargetName="ResistanceType" Property="Text" Value="{Binding Source='h27558299g1099g485eg95f0g4a319139f8f2',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="ResistanceType" Property="Foreground" Value="{StaticResource LS_bonusTxtColor}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding NonMagical}" Value="Resistant">
                                <Setter TargetName="BackgroundFilling" Property="Fill" Value="{StaticResource LS_bonusTxtColor}"/>
                                <Setter TargetName="ResistanceType" Property="Text" Value="{Binding Source='h27558299g1099g485eg95f0g4a319139f8f2',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="ResistanceType" Property="Foreground" Value="{StaticResource LS_bonusTxtColor}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Magical}" Value="Resistant">
                                <Setter TargetName="BackgroundFilling" Property="Fill" Value="{StaticResource LS_bonusTxtColor}"/>
                                <Setter TargetName="ResistanceType" Property="Text" Value="{Binding Source='h27558299g1099g485eg95f0g4a319139f8f2',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="ResistanceType" Property="Foreground" Value="{StaticResource LS_bonusTxtColor}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Full}" Value="Vulnerable">
                                <Setter TargetName="BackgroundFilling" Property="Fill" Value="{StaticResource LS_HealthBarBackgound}"/>
                                <Setter TargetName="ResistanceType" Property="Text" Value="{Binding Source='hb710bce5g9017g4c1bg9330g20a891ce14f6',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="ResistanceType" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding NonMagical}" Value="Vulnerable">
                                <Setter TargetName="BackgroundFilling" Property="Fill" Value="{StaticResource LS_HealthBarBackgound}"/>
                                <Setter TargetName="ResistanceType" Property="Text" Value="{Binding Source='hb710bce5g9017g4c1bg9330g20a891ce14f6',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="ResistanceType" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Magical}" Value="Vulnerable">
                                <Setter TargetName="BackgroundFilling" Property="Fill" Value="{StaticResource LS_HealthBarBackgound}"/>
                                <Setter TargetName="ResistanceType" Property="Text" Value="{Binding Source='hb710bce5g9017g4c1bg9330g20a891ce14f6',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="ResistanceType" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>

    <!-- Character Tooltip-->
    <DataTemplate x:Key="CharacterTooltipTemplate" DataType="{x:Type ls:Character}">
        <StackPanel x:Name="root" ls:TooltipExtender.Owner="{Binding }" MinWidth="{StaticResource MinNarrowTooltipContentWidth}" MaxWidth="{StaticResource MaxNarrowTooltipContentWidth}">
            <!-- Name/Class/Level -->
            <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding Name}"/>
            <Control Template="{StaticResource LevelClassSubTitleTemplate}"/>

            <!-- Remaining time for summons -->
            <Control x:Name="durationDis" Template="{StaticResource SummonDurationTemplate}" Margin="-70,0"/>

            <!-- Stats -->
            <StackPanel Margin="-16,16,0,16">

                <StackPanel Orientation="Horizontal" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True">
                    <StackPanel.ToolTip>
                        <ls:LSTooltip Content="{Binding Path=DataContext.Stats.Race.Description, ElementName=root}" ContentTemplate="{StaticResource DescriptionTooltipContent}" IsHitTestVisible="False"/>
                    </StackPanel.ToolTip>
                    <Image Source="{StaticResource IconRace}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center"/>
                    <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Stats.Race.DisplayName}"/>
                </StackPanel>

                <StackPanel x:Name="Health" Orientation="Horizontal" DataContext="{Binding Stats.Health}" Visibility="{Binding Value, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter=-1}"
                            ToolTipService.Placement="Right" ToolTipService.IsEnabled="True" Margin="0,-16,0,0">
                    <StackPanel.ToolTip>
                        <ls:LSTooltip IsHitTestVisible="False" Content="{Binding Path=DataContext.Stats.Health, ElementName=root}" ls:TooltipExtender.Owner="{Binding Path=DataContext,ElementName=root}"/>
                    </StackPanel.ToolTip>
                    <Image Source="{StaticResource IconHealth}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center"/>
                    <TextBlock x:Name="HealthText" Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Run Text="{Binding Value}"/><Run
                        Text="{Binding Max, StringFormat='/{0}'}"/>
                    </TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" DataContext="{Binding Stats.ArmorClass}" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True" Margin="0,-16,0,0">
                    <StackPanel.ToolTip>
                        <ls:LSTooltip  IsHitTestVisible="False" Content="{Binding Path=DataContext.Stats.ArmorClass, ElementName=root}" ls:TooltipExtender.Owner="{Binding Path=DataContext,ElementName=root}"/>
                    </StackPanel.ToolTip>
                    <Image Source="{StaticResource IconArmorClassCharacter}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center"/>
                    <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Value}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" DataContext="{Binding Stats.MovementResource}" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True" Margin="0,-16,0,0">
                    <StackPanel.ToolTip>
                        <ls:LSTooltip  IsHitTestVisible="False" Content="{Binding Path=DataContext.Stats.MovementResource, ElementName=root}" ls:TooltipExtender.Owner="{Binding Path=DataContext,ElementName=root}"/>
                    </StackPanel.ToolTip>
                    <Image Source="{StaticResource IconSpeed}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center"/>
                    <TextBlock x:Name="MovementText" Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Run>
                            <Run.Style>
                                <Style TargetType="Run">
                                    <Setter Property="Text" Value="{Binding Value, Converter={StaticResource UnitConverter}, ConverterParameter='Distance RoundUp N1'}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter='1.5'}" Value="True">
                                            <Setter Property="Text" Value="{Binding Value, Converter={StaticResource UnitConverter}, ConverterParameter='Distance'}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Run.Style>
                        </Run>
                        <Run Text="{Binding MaxValue, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short', StringFormat='/{0}'}"/>
                    </TextBlock>
                </StackPanel>
            </StackPanel>

            <!-- Active Conditions -->
            <ItemsControl Style="{StaticResource ActiveConditionsSection}" ItemsSource="{Binding StatusEffects}" ItemTemplate="{StaticResource ObjectStatusTemplate}" Margin="-16,0,0,0"/>


            <!-- Footer -->
            <ls:LSNineSliceImage Style="{StaticResource TooltipStripBottomStyle}" x:Name="Footer">
                <StackPanel VerticalAlignment="Center" Orientation="Horizontal" HorizontalAlignment="Right" Margin="-16,-8">
                    <StackPanel Orientation="Horizontal" Background="Transparent">
                        <StackPanel.ToolTip>
                            <ls:LSTooltip>
                                <TextBlock Style="{StaticResource TooltipStringBodyStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h6dd6596fg1433g4b04g9d74g5dc6fb0048ea',Converter={StaticResource TranslatedStringConverter}}" MaxWidth="{StaticResource MaxTooltipContentWidth}"/>
                            </ls:LSTooltip>
                        </StackPanel.ToolTip>
                        <!-- Combined weight with inventory for characters carried in player inventory -->
                        <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                    <Binding Path="Stats.Weight.Value" Converter="{StaticResource UnitConverter}" ConverterParameter="Weight"/>
                                    <Binding Path="InventoryWeight" Converter="{StaticResource UnitConverter}" ConverterParameter="Weight"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Image Source="{StaticResource IconWeight}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center" Margin="-10,0,0,0"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"  Background="Transparent">
                        <StackPanel.ToolTip>
                            <ls:LSTooltip>
                                <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Text="{Binding Source='he70ba432g24d1g4fbdg8ca0g1f16ecdf713c',Converter={StaticResource TranslatedStringConverter}}" MaxWidth="{StaticResource MaxTooltipContentWidth}"/>
                            </ls:LSTooltip>
                        </StackPanel.ToolTip>

                        <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Inventory.Gold, Mode=OneWay, StringFormat={}{0:N0}}"/>
                        <Image Source="{StaticResource IconGold}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center" Margin="-10,0,0,0"/>
                    </StackPanel>
                </StackPanel>
            </ls:LSNineSliceImage>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding (ls:AttachedProperties.InheritedTag), RelativeSource={RelativeSource Mode=Self}}" Value="min_view">
                <Setter TargetName="HealthText" Property="Text" Value="{Binding Max}"/>
                <Setter TargetName="MovementText" Property="Text" Value="{Binding MaxValue, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Lifetime}" Value="0">
                <Setter TargetName="durationDis" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Lifetime}" Value="-1">
                <Setter TargetName="durationDis" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <!-- ======Regular Tooltip======-->
            <!-- Hide NPC HP-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPlayableCharacter}" Value="False"/>
                    <Condition Binding="{Binding Path=OwnerDCWidget.Data.CurrentRuleSetModifiers, Converter={StaticResource RuleSetModifierValueConverter}, ConverterParameter='HIDE_NPC_HP', RelativeSource={RelativeSource AncestorType=ls:LSTooltip}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Health" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <!-- Hide Item HP-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Item"/>
                    <Condition Binding="{Binding Path=OwnerDCWidget.Data.CurrentRuleSetModifiers, Converter={StaticResource RuleSetModifierValueConverter}, ConverterParameter='HIDE_NPC_HP', RelativeSource={RelativeSource AncestorType=ls:LSTooltip}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Health" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- ======Pinned Tooltip======-->
            <!-- Hide NPC HP-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPlayableCharacter}" Value="False"/>
                    <Condition Binding="{Binding Path=OwnerDCWidget.Data.CurrentRuleSetModifiers, Converter={StaticResource RuleSetModifierValueConverter}, ConverterParameter='HIDE_NPC_HP', RelativeSource={RelativeSource AncestorType=ls:LSElementCopy}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Health" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <!-- Hide Item HP-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Item"/>
                    <Condition Binding="{Binding Path=OwnerDCWidget.Data.CurrentRuleSetModifiers, Converter={StaticResource RuleSetModifierValueConverter}, ConverterParameter='HIDE_NPC_HP', RelativeSource={RelativeSource AncestorType=ls:LSElementCopy}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Health" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="PartyLineTooltipTemplate" DataType="{x:Type ls:Character}">
        <StackPanel x:Name="root" ls:TooltipExtender.Owner="{Binding }" MinWidth="{StaticResource MinNarrowTooltipContentWidth}" MaxWidth="{StaticResource MaxNarrowTooltipContentWidth}">
            <Grid x:Name="mainStatsGrid">
                <Grid.Tag>
                    <!--current character is controlled by the current player-->
                    <MultiBinding Converter="{StaticResource EqualConverter}">
                        <Binding Path="OwnerDCWidget.CurrentPlayer.UserId" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSTooltip}}"/>
                        <Binding Path="PlayerCharacterProperties.OwnerUserID"/>
                    </MultiBinding>
                </Grid.Tag>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" Template="{StaticResource TooltipStripTopBackground}" Tag="{Binding ElementName=TitleArea}" Margin="-36,-20,-36,-25" />

                <Canvas Grid.Column="1" Width="{Binding ActualWidth, ElementName=DecorationImage}" Margin="0,-85,-95,0">
                    <Image x:Name="DecorationImage"
                           Stretch="Uniform" MaxHeight="240" Panel.ZIndex="1" IsHitTestVisible="False" ls:MeasurementProperties.CalculateMeasures="True"
                           DataContext="{Binding Stats.ClassList[0]}" Style="{StaticResource MainClassIconStyle}"/>
                </Canvas>

                <!-- Name/Class/Level -->
                <StackPanel x:Name="TitleArea" Style="{StaticResource TooltipTitleSurround}" >
                    <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding Name}"/>
                    <Control Template="{StaticResource LevelClassSubTitleTemplate}"/>
                </StackPanel>

            </Grid>

            <!-- Remaining time for summons -->
            <Control x:Name="durationDis" Template="{StaticResource SummonDurationTemplate}" Margin="-70,0,0,25"/>

            <Grid HorizontalAlignment="Stretch" x:Name="PlayerPanel" Margin="0,0,0,16" Visibility="{Binding ElementName=mainStatsGrid, Path=Tag, Converter={StaticResource BoolToCollapsedConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Background="{Binding PlayerCharacterProperties.OwnerCommunityIcon, Mode=OneWay}" Width="60" Height="60" VerticalAlignment="Top">
                    <Border.Clip>
                        <EllipseGeometry Center="30,30" RadiusX="30" RadiusY="30"/>
                    </Border.Clip>
                </Border>
                <TextBlock Grid.Column="1" Text="{Binding PlayerCharacterProperties.OwnerPlayerName}" HorizontalAlignment="Stretch" Margin="12,0,0,0" TextWrapping="Wrap" FontSize="{StaticResource MiniFontSize}"/>
            </Grid>

            <!-- Stats -->
            <StackPanel x:Name="resourcesPanel" Margin="0,0,0,40">
                <b:Interaction.Behaviors>
                    <ls:CollectionFilterBehavior x:Name="SpecialFilter" ItemsSource="{Binding Stats.ActionResources}" Predicate="{Binding OwnerDCWidget.Data.ActionResourceSpecialPredicate, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}"/>
                    <ls:CollectionFilterBehavior x:Name="SpecialFilterPinned" ItemsSource="{Binding Stats.ActionResources}" Predicate="{Binding OwnerDCWidget.Data.ActionResourceSpecialPredicate, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}"/>
                    <ls:CollectionFilterBehavior x:Name="CharacterInterruptsFilter" ItemsSource="{Binding PlayerCharacterProperties.Interrupts}" Predicate="{Binding PlayerCharacterProperties.CharacterInterruptsFilterPredicate}"/>
                </b:Interaction.Behaviors>

                <!--Statuses-->
                <TextBlock Style="{StaticResource TooltipTitleStyle}" FontSize="{StaticResource DefaultFontSize}" Text="{Binding Source='h71f6c964g24c2g49e5ga3fbg65bf2fd92790',Converter={StaticResource TranslatedStringConverter}}"
                           Visibility="{Binding StatusEffects.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                <ItemsControl x:Name="StatusList" Style="{StaticResource ActiveConditionsSection}" ItemTemplate="{StaticResource ActiveConditionCompleteTemplate}" ItemsSource="{Binding StatusEffects}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>

                <!--Reactions-->
                <StackPanel Orientation="Horizontal" Visibility="{Binding PlayerCharacterProperties.Interrupts.Count, Converter={StaticResource CountToVisibilityConverter}}">
                    <TextBlock Style="{StaticResource TooltipTitleStyle}" FontSize="{StaticResource DefaultFontSize}" VerticalAlignment="Center"
                               Text="{Binding Source='h2fda2a98g24aeg4745ga96fg486c04590c4e',Converter={StaticResource TranslatedStringConverter}}"/>
                    <ls:LSButton x:Name="ReactionsButton" VerticalAlignment="Center" Style="{StaticResource TooltipControllerButton}" Content="" Margin="-10,-20" Visibility="Collapsed"
                                 DataContext ="{Binding OwnerDCWidget.CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UISort', RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}"/>
                </StackPanel>
                <ItemsControl x:Name="InterruptList" HorizontalAlignment="Stretch" ItemsSource="{Binding FilteredItems, ElementName=CharacterInterruptsFilter}" Visibility="{Binding ItemsSource.Count, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource CountToVisibilityConverter}}" ItemTemplate="{StaticResource InterruptCompleteTemplate}"
                              Template="{StaticResource MinimalItemsControlTemplate}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>

            <!-- Footer -->
            <ls:LSNineSliceImage Style="{StaticResource TooltipStripBottomStyle}" x:Name="Footer" Visibility="Collapsed">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-8">
                    <StackPanel Orientation="Horizontal">
                        <ls:LSButton x:Name="UpButton" VerticalAlignment="Center" HorizontalAlignment="Center" CommandParameter="{Binding Path=DataContext, ElementName=root}"
                                 Style="{StaticResource TooltipControllerButton}" Command="{Binding OwnerDCWidget.StartLevelUp, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}"
                                 DataContext ="{Binding OwnerDCWidget.CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UITabNext', RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}"
                                 Content="{Binding Source='he3ccedd0gceaeg4b1fg8e74g9dfc6da58cd2',Converter={StaticResource TranslatedStringConverter}}"/>
                        <Border x:Name="LevelUp" Visibility="{Binding Visibility, ElementName=UpButton}" HorizontalAlignment="Left" VerticalAlignment="Center"
                            Width="90" Height="90" Margin="-20,0">
                            <Image x:Name="LevelUpIcon" Source="pack://application:,,,/Core;component/Assets/Shared_c/c_ico_levelup_2.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Image x:Name="ListenIcon" Source="pack://application:,,,/Core;component/Assets/PlayerPortraits/ico_mode_dialogue.png" Width="120" VerticalAlignment="Center" Visibility="Collapsed" Margin="-30,0"/>
                        <ls:LSButton x:Name="ListenButton" VerticalAlignment="Center" Style="{StaticResource TooltipControllerButton}" Visibility="Collapsed" Margin="-10,0,0,10"
                                 DataContext ="{Binding OwnerDCWidget.CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept', RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}"
                                 Content="{Binding Source='he26c9a8cg0e0ag45b5ga6ddg6ddb00255b51', Converter={StaticResource TranslatedStringConverter}}"/>
                    </StackPanel>

                    <TextBlock x:Name="ListenError" Text="{Binding Source='hadca0843g178eg4fe9ga196g0c08c8ae6302',Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_alertTxtColor}" Visibility="Collapsed" TextWrapping="Wrap" Width="{Binding ActualWidth, ElementName=root}" FontSize="{StaticResource ScaledSmallFontSize}" TextAlignment="Center"/>
                </StackPanel>
            </ls:LSNineSliceImage>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                <Setter TargetName="DecorationImage" Property="MaxHeight" Value="310" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=mainStatsGrid, Path=Tag}" Value="False"/>
                    <Condition Binding="{Binding Path=DataContext.CharacterMode, ElementName=root}" Value="InDialogue"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ListenIcon" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ListenButton" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.SelectedCharacter.CharacterMode, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="InDialogue"/>
                    <Condition Binding="{Binding Path=DataContext.CharacterMode, ElementName=root}" Value="InDialogue"/>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding Path="OwnerDCWidget.CurrentPlayer.SelectedCharacter" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSTooltip}}"/>
                                <Binding Path="."/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ListenButton" Property="IsEnabled" Value="False"/>
                <Setter TargetName="ListenError" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding ElementName=mainStatsGrid, Path=Tag}" Value="False">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=DataContext.Stats.Level.LevelUpAvailable, ElementName=root}" Value="False">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=DataContext.CharacterMode, ElementName=root}" Value="InCombat">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=DataContext.DownedInfo.Active, ElementName=root}" Value="True">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=DataContext.Stats.IsAlive, ElementName=root}" Value="False">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding OwnerDCWidget.CurrentPlayer.UIData.AllowInteraction, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="False">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding OwnerDCWidget.CurrentPlayer.UIData.AllowInteraction, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="False">
                <Setter TargetName="UpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StatusEffects.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=10}" Value="True">
                <Setter TargetName="StatusList" Property="ItemTemplate" Value="{StaticResource SingleIconStatusTemplate}"/>
                <Setter TargetName="StatusList" Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding PlayerCharacterProperties.Interrupts.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=10}" Value="True">
                <Setter TargetName="InterruptList" Property="ItemTemplate" Value="{StaticResource SingleIconInterruptTemplate}"/>
                <Setter TargetName="InterruptList" Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=OwnerDCWidget.CurrentPlayer.UIOptions.ExtraTooltipDescriptions, RelativeSource={RelativeSource AncestorType={x:Type ls:LSElementCopy}}}" Value="WhenPinned">
                <Setter TargetName="mainStatsGrid" Property="Tag">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource EqualConverter}">
                            <Binding Path="OwnerDCWidget.CurrentPlayer.UserId" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSElementCopy}}"/>
                            <Binding Path="PlayerCharacterProperties.OwnerUserID"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="StatusList" Property="ItemTemplate" Value="{StaticResource ActiveConditionCompleteTemplate}"/>
                <Setter TargetName="StatusList" Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="InterruptList" Property="ItemTemplate" Value="{StaticResource InterruptCompleteTemplate}"/>
                <Setter TargetName="InterruptList" Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CharacterType}" Value="Avatar"/>
                    <Condition Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Footer" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ReactionsButton" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CharacterType}" Value="Companion"/>
                    <Condition Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Footer" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ReactionsButton" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Lifetime}" Value="0">
                <Setter TargetName="durationDis" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Lifetime}" Value="-1">
                <Setter TargetName="durationDis" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=OwnerDCWidget.IsConsolePlatform, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="True">
                <Setter TargetName="PlayerPanel" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Reduced version of PartyLineTooltipTemplate used on dialogs -->
    <DataTemplate x:Key="PartyLineDialogTooltipTemplate" DataType="{x:Type ls:Character}">
        <Grid x:Name="mainStatsGrid" ls:TooltipExtender.Owner="{Binding }" MinWidth="{StaticResource MinNarrowTooltipContentWidth}" MaxWidth="{StaticResource MaxNarrowTooltipContentWidth}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Name/Class/Level -->
            <StackPanel x:Name="PartyLineNameSection"  VerticalAlignment="Top">
                <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding Name}"/>
                <Control Template="{StaticResource LevelClassSubTitleTemplate}"/>
            </StackPanel>

            <Canvas Grid.Column="1" Width="{Binding ActualWidth, ElementName=DecorationImage}" Margin="0,-85,-95,0">
                <Image x:Name="DecorationImage"
                       Stretch="Uniform" MaxHeight="240" Panel.ZIndex="1" IsHitTestVisible="False" ls:MeasurementProperties.CalculateMeasures="True"
                       DataContext="{Binding Stats.ClassList[0]}" Style="{StaticResource MainClassIconStyle}"/>
            </Canvas>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=OwnerDCWidget.Data.UIInputMethod, RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}}" Value="Controller">
                <Setter TargetName="DecorationImage" Property="MaxHeight" Value="320" />
                <Setter TargetName="PartyLineNameSection" Property="Margin" Value="0,20,0,0"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:Character}" >
        <ContentPresenter x:Name="root" Content="{Binding .}" ContentTemplate="{StaticResource CharacterTooltipTemplate}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTooltipCharacterSectionDetail}" >
        <ContentPresenter x:Name="root" Content="{Binding Character}" ContentTemplate="{StaticResource CharacterTooltipTemplate}" ls:AttachedProperties.InheritedTag="min_view" />
    </DataTemplate>

    <!--Saving throw tooltip-->
    <DataTemplate x:Key="SavingThrowTooltipTemplate">
        <StackPanel Orientation="Vertical">
            <Border Style="{StaticResource TooltipStripTopStyleWithContent}">
                <StackPanel>
                    <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding Source='h53a94e02g4319g47f7gb38fg87a53127da50', Converter={StaticResource TranslatedStringConverter}}" Width="{StaticResource MaxWidthOnCollisionWithImage}"/>
                    <TextBlock x:Name="AbilityText" Style="{StaticResource TooltipSubTitleNoCollapseStyle}"/>
                </StackPanel>
            </Border>
            <Rectangle Style="{StaticResource tooltipHeaderDividerLine}" />

            <TextBlock x:Name="SavingThrowDescriptionText" ls:TextBlockFormatter.SourceText="{Binding Source='h487714f3gd7bag419bgb41fg3dc88a757378', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipDescriptionStyle}"/>

            <StackPanel Orientation="Horizontal" Margin="0,20">
                <TextBlock x:Name="DifficultyClassText" Text="{Binding Source='h97dc05d7g3451g4394gae54ga32c511809ea', Converter={StaticResource TranslatedStringConverter}}"
                           FontSize="{StaticResource MediumFontSize}" Foreground="{StaticResource LS_extraspecialTxtColor}"/>
                <TextBlock Style="{StaticResource TooltipDescriptionStyle}">
                    <ls:TextBlockFormatter.SourceText>
	                    <MultiBinding StringFormat="{} ({0})">
		                    <Binding Path="(ls:TooltipExtender.Owner).Name" RelativeSource="{RelativeSource Mode=Self}"/>
	                    </MultiBinding>
                    </ls:TextBlockFormatter.SourceText>
                </TextBlock>
            </StackPanel>
            <TextBlock x:Name="DifficultyClassValue" DataContext="{Binding Path=(ls:AttachedProperties.InheritedTag).SpellDC, RelativeSource={RelativeSource Mode=Self}}" Text="{Binding Value}"
                       FontSize="{StaticResource IntermediateFontSize}" ToolTipService.Placement="Bottom" Margin="0,-20,0,0">
                <TextBlock.ToolTip>
                    <ls:LSTooltip x:Name="BreakdownTooltip" Content="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=Self}}" CanBePinned="True" IsHitTestVisible="False">
                        <ls:LSTooltip.ContentTemplate>
                            <DataTemplate>
                                <ContentControl x:Name="BreakdownControl" Content="{Binding Path=(ls:TooltipExtender.Data), RelativeSource={RelativeSource Mode=Self}}" ContentTemplate="{StaticResource StatParamsTemplate}"/>
                            </DataTemplate>
                        </ls:LSTooltip.ContentTemplate>
                    </ls:LSTooltip>
                </TextBlock.ToolTip>
            </TextBlock>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SubTypeId}" Value="Strength">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='hc8c67074g3c19g44d1g8b7bg9e5a8d06d87f',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SubTypeId}" Value="Dexterity">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='hc30ef867gedecg4c22ga387g648ea8224248',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SubTypeId}" Value="Constitution">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='hcd19f46ag85bcg41f2gb8fbg1dc69843d250',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SubTypeId}" Value="Intelligence">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='h33d41553g12cag401eg8c71g640d3d654054',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SubTypeId}" Value="Wisdom">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='hfb735304g4b35g49e2gbabeg05b183cb6de1',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SubTypeId}" Value="Charisma">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='habf9df38g5018g44c4gbb6fga77177a64218',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(ls:AttachedProperties.InheritedTag).IsSpell, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter TargetName="SavingThrowDescriptionText" Property="ls:TextBlockFormatter.SourceText"
                        Value="{Binding Source='habafad5bgeefeg4bf1ga6bbgae22ace77cfd', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="DifficultyClassText" Property="Text" Value="{Binding Source='h832c500cg87a2g4400g9e04ge439c8d44be2', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Surface tooltip -->
    <DataTemplate x:Key="SurfaceTooltipContentTemplate">
        <Grid>
            <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Top" Template="{StaticResource TooltipStripTopBackground}" Tag="{Binding ElementName=TitleArea}" Margin="-36,-20,-36,-25" />

            <StackPanel>
                <!-- Name/Class/Level -->
                <StackPanel x:Name="TitleArea" Style="{StaticResource TooltipTitleSurround}" >
                    <TextBlock x:Name="HeaderTxt"  Text="{Binding Header}" Style="{StaticResource TooltipTitleStyle}"/>
                    <TextBlock x:Name="SubTitleTxt" ls:TextBlockFormatter.SourceText="{Binding Source='h12bbc6ddg3c77g4b0dg91d5g974527cce656', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" />
                </StackPanel>
                <ContentControl x:Name="DurationHolder" Template="{StaticResource TooltipStripTemplate}" Margin="0 0 0 10" Visibility="Collapsed">
                    <StackPanel Orientation="Horizontal" Margin="0 11">
                        <Image Source="pack://application:,,,/Core;component/Assets/BottomBar/btn_endTurn_ico_TB_h.png" Stretch="None" VerticalAlignment="Center" Margin="0 0 20 0" />
                        <TextBlock x:Name="DurationText" FontSize="{StaticResource MediumFontSize}" VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Title}">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                    <Binding Source="h2dc60835g9000g440fga70fg330291eda7eb"/>
                                    <Binding Path="DataContext.Duration" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource UnitConverter}" ConverterParameter='Distance RoundUp'/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                </ContentControl>

                <TextBlock x:Name="Description" ls:TextBlockFormatter.SourceText="{Binding Description}" Width="{StaticResource SurfaceTooltipTextWidth}" Style="{StaticResource TooltipDescriptionStyle}"/>

                <ItemsControl ItemsSource="{Binding InflictStatuses}" VerticalContentAlignment="Stretch" ItemTemplate="{StaticResource StatusListElement}"/>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SurfaceLayer}" Value="Cloud">
                <Setter TargetName="SubTitleTxt" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h037b15bagf64bg47dbg90e7g798121f89c55', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (ls:AttachedProperties.InheritedTag), RelativeSource={RelativeSource Mode=Self}}" Value="Wide">
                <Setter TargetName="Description" Property="Width" Value="{StaticResource MaxTooltipContentWidth}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Duration, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="DurationHolder" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Duration, Converter={StaticResource LessThanConverter}, ConverterParameter=1}" Value="True">
                <Setter TargetName="DurationText" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h134a812fgc09eg43d7gbaadg9cb153532707"/>
                            <Binding Path="DataContext.Duration" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource UnitConverter}" ConverterParameter='Distance RoundUp'/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTooltipAreaSectionDetail}" >
        <ContentPresenter x:Name="root" Content="{Binding SurfaceInfo}" ContentTemplate="{StaticResource SurfaceTooltipContentTemplate}" ls:AttachedProperties.InheritedTag="Wide" />
    </DataTemplate>


    <DataTemplate x:Key="QuestObjectives">
        <DataTemplate.Resources>
            <BitmapImage x:Key="ActiveObjectiveIcon" UriSource="pack://application:,,,/Core;component/Assets/Map/mapSelector_quest.png"/>
        </DataTemplate.Resources>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock x:Name="IconPositioner" Grid.Row="0" Grid.Column="0" Text="H" Visibility="Hidden" VerticalAlignment="Center"/>
            <Image x:Name="Bullet" Grid.Row="0" Grid.Column="0" Source="{StaticResource ActiveObjectiveIcon}" Stretch="Uniform" Margin="4,-20,16,-20" Height="48" VerticalAlignment="Center"/>
            <TextBlock x:Name="Description" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Text="{Binding Objectives[0].Description}" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="{StaticResource LS_specialTxtColor}" Margin="0"/>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsCompleted}" Value="True">
                <Setter TargetName="Description" Property="Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Objectives.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Quest Tooltip for World Map Objectives -->
    <ControlTemplate x:Key="QuestTooltipTemplate">
        <ControlTemplate.Resources>
            <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}"/>
        </ControlTemplate.Resources>
        <StackPanel Width="{StaticResource MaxTooltipContentWidth}">
            <TextBlock x:Name="Title" Text="{Binding Quest.Title}" Style="{StaticResource TooltipTitleStyle}" TextWrapping="Wrap" />
            <ContentPresenter x:Name="ObjectivesList" Content="{Binding Quest}" ContentTemplate="{StaticResource QuestObjectives}" Margin="0,8,0,0"/>
        </StackPanel>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type ls:MapMarker}">
        <ContentPresenter x:Name="root" Content="{Binding .}">
            <ContentPresenter.ContentTemplate>
                <DataTemplate  DataType="{x:Type ls:MapMarker}">
                    <StackPanel>
                        <TextBlock x:Name="Name" TextWrapping="Wrap" Text="{Binding Name}" Visibility="{Binding Visibility, ElementName=CombinedMarkers, Converter={StaticResource InvertVisibilityConverter}}"/>
                        <ItemsControl x:Name="CombinedMarkers" ItemsSource="{Binding CombinedMapMarkers}" AlternationCount="{Binding CombinedMapMarkers.Count}" Visibility="Collapsed" Margin="0,0,0,12">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type ls:MapMarker}">
                                    <TextBlock x:Name="Name" Text="{Binding Name}" TextWrapping="Wrap" FontSize="{StaticResource ScaledDefaultFontSize}"/>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="3">
                                            <Setter TargetName="Name" Property="Text" Value="..."/>
                                        </Trigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding (ItemsControl.AlternationIndex),RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource LessThanConverter}, ConverterParameter='4'}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding QuestViews.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                        <ItemsControl x:Name="MultipleQuestViews" ItemsSource="{Binding QuestViews}" AlternationCount="{Binding QuestViews.Count}" Visibility="Collapsed">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate >
                                    <StackPanel Margin="0,8,0,0">
                                        <TextBlock x:Name="Name" Text="{Binding Quest.Title}" TextWrapping="Wrap" FontSize="{StaticResource ScaledDefaultFontSize}"/>
                                        <ContentPresenter x:Name="ObjectivesList" Content="{Binding Quest}" ContentTemplate="{StaticResource QuestObjectives}" />
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="3">
                                            <Setter TargetName="Name" Property="Text" Value="..."/>
                                            <Setter TargetName="ObjectivesList" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding (ItemsControl.AlternationIndex),RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource LessThanConverter}, ConverterParameter='4'}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                    </StackPanel>

                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Type}" Value="QuestMarker"/>
                                <Condition Binding="{Binding QuestViews.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MultipleQuestViews" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Name" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Type}" Value="QuestMarker"/>
                                <Condition Binding="{Binding CombinedMapMarkers.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CombinedMarkers" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Name" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ContentPresenter.ContentTemplate>
        </ContentPresenter>
    </DataTemplate>

    <!-- Combat log tooltips -->

    <Style x:Key="CombatLog.Tooltip.Text" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="LineHeight" Value="48" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="Foreground" Value="{StaticResource CombatLog.Tooltip.DefaultTextColor}" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0,8"/>
    </Style>

    <DataTemplate x:Key="CombatLog.Tooltip.Entry" DataType="{x:Type ls:CombatLogTooltipEntry}">
        <DockPanel>
            <Border x:Name="iconContainer" DockPanel.Dock="Left" >
                <Image x:Name="icon" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-8,4,4,0" Stretch="None" Visibility="Collapsed"/>
            </Border>

            <TextBlock Style="{StaticResource CombatLog.Tooltip.Text}" HorizontalAlignment="Stretch">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding CtxTransText}" ParamRunStyle="{DynamicResource CombatLog.Tooltip.ParamRun}" />
                </b:Interaction.Behaviors>
            </TextBlock>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="Dice">
                <Setter TargetName="icon" Property="Visibility" Value="Visible" />
                <Setter TargetName="icon" Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_dice.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="ArmorClass">
                <Setter TargetName="icon" Property="Visibility" Value="Visible" />
                <Setter TargetName="icon" Property="Source" Value="pack://application:,,,/Core;component/Assets/Tooltips/ico_AC.png" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="CombatLog.Tooltip" >
        <ItemsControl ItemsSource="{Binding TooltipEntries}" ItemTemplate="{StaticResource CombatLog.Tooltip.Entry}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate  x:Key="CombatLog.RollsTooltip">
        <ItemsControl ItemsSource="{Binding Rolls}" AlternationCount="{Binding Rolls.Count}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="Icon" Source="{StaticResource IconReroll}" Stretch="None" Visibility="Hidden"/>
                        <Grid>
                            <!--TODO fix Text="{Binding DiceTypeSet.DiceType} needs to be Translated-->
                            <TextBlock x:Name="Text" Foreground="{StaticResource TooltipColor.Primary}">
                            <Run Text="1"/><Run Text="{Binding DiceTypeSet.DiceType}"/><Run Text="{Binding Source='hb897c56egaa6fg460bg8676g8ebfa0340954',Converter={StaticResource TranslatedStringConverter}}"/><Run Text="{Binding RolledNumber}" Foreground="{StaticResource TooltipColor.Secondary}"/>
                            </TextBlock>
                            <Rectangle x:Name="Strikethrough" Fill="{StaticResource TooltipColor.Primary}" Height="2" Visibility="Collapsed"/>
                        </Grid>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RerollType}" Value="Old">
                            <Setter TargetName="Strikethrough" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RerollType}" Value="New">
                            <Setter TargetName="Icon" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!--Don't use basedon Styles in CtxTransStringRunGeneratorBehavior since it doesn't get copied for lsspans-->
    <Style x:Key="CombatLog.Entry.ParamRun" TargetType="ls:LSRun">
        <!--This provides the owner for the combatlog-->
        <Setter Property="ls:TooltipExtender.PlayerId" Value="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="ls:TooltipExtender.Owner" Value="{Binding Path=DataContext.CurrentPlayer.SelectedCharacter, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" />
        <Setter Property="ToolTipService.IsEnabled" Value="{Binding HasTooltip}"/>
        <Style.Triggers>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipEntries.Count}" Value="0" />
                    <Condition Binding="{Binding HasTooltip}" Value="True" />
                    <Condition Binding="{Binding ManagedTooltip}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTip" >
                    <Setter.Value>
                        <ls:LSTooltip Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" ls:TooltipExtender.Owner="{Binding Path=Inline.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Placement="Top" VerticalOffset="-5" HorizontalOffset="-14" IsHitTestVisible="False" />
                    </Setter.Value>
                </Setter>

            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipEntries.Count}" Value="0" />
                    <Condition Binding="{Binding HasTooltip}" Value="True" />
                    <Condition Binding="{Binding ManagedTooltip}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTip" Value="{StaticResource ManagedTooltip}"/>

            </MultiDataTrigger>

            <DataTrigger Binding="{Binding TooltipEntries.Count,Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter Property="ToolTip" >
                    <Setter.Value>
                        <ls:LSTooltip Content="{Binding Path=Inline.DataContext,RelativeSource={RelativeSource Mode=Self}}" ContentTemplate="{StaticResource CombatLog.Tooltip}" IsHitTestVisible="False" Placement="Top" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" CanBePinned="False">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Rolls.Count,Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip Content="{Binding Path=Inline.DataContext,RelativeSource={RelativeSource Mode=Self}}" ContentTemplate="{StaticResource CombatLog.RollsTooltip}" IsHitTestVisible="False" Placement="Top" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" CanBePinned="True" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Type}" Value="Distance" >
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
            </DataTrigger>


            <DataTrigger Binding="{Binding Type}" Value="Weight" >
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Weight Short'}"/>
            </DataTrigger>

            <!-- Enemy character (MISSING COLOR CODE) -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Character" />
                    <Condition Binding="{Binding RelationType}" Value="Enemy" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource RelationType.Enemy}" />
            </MultiDataTrigger>
            <!-- Ally character (MISSING COLOR CODE) -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Character" />
                    <Condition Binding="{Binding RelationType}" Value="Ally" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource RelationType.Ally}" />
            </MultiDataTrigger>
            <!-- Damage type: None -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="None" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.None}" />
            </MultiDataTrigger>
            <!-- Damage type: Slashing -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Slashing" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Physical}" />
            </MultiDataTrigger>
            <!-- Damage type: Piercing -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Piercing" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Physical}" />
            </MultiDataTrigger>
            <!-- Damage type: Bludgeoning -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Bludgeoning" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Physical}" />
            </MultiDataTrigger>
            <!-- Damage type: Force -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Force" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Force}" />
            </MultiDataTrigger>
            <!-- Damage type: Psychic -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Psychic" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Psychic}" />
            </MultiDataTrigger>
            <!-- Damage type: Thunder -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Thunder" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Thunder}" />
            </MultiDataTrigger>
            <!-- Damage type: Lightning -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Lightning" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Lightning}" />
            </MultiDataTrigger>
            <!-- Damage type: Cold -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Cold" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Cold}" />
            </MultiDataTrigger>
            <!-- Damage type: Necrotic -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Necrotic" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Necrotic}" />
            </MultiDataTrigger>
            <!-- Damage type: Poison -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Poison" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Poison}" />
            </MultiDataTrigger>
            <!-- Damage type: Acid -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Acid" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Acid}" />
            </MultiDataTrigger>
            <!-- Damage type: Radiant -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Radiant" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Radiant}" />
            </MultiDataTrigger>
            <!-- Damage type: Fire -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Fire" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource DamageType.Fire}" />
            </MultiDataTrigger>
            <!-- Healing -->
            <DataTrigger Binding="{Binding Type}" Value="HealAmount">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <!-- Spell (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Spell">
                <Setter Property="Foreground" Value="{StaticResource CombatLog.Spell}" />
            </DataTrigger>
            <!-- Experience (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Experience">
                <Setter Property="Foreground" Value="{StaticResource LS_ExperienceTextColor}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="ExperienceOverflow">
                <Setter Property="Foreground" Value="{StaticResource LS_ExperienceOverflowTextColor}" />
            </DataTrigger>
            <!-- Status (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Status">
                <Setter Property="Foreground" Value="{StaticResource CombatLog.Status}" />
            </DataTrigger>
            <!-- Passive (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Passive">
                <Setter Property="Foreground" Value="{StaticResource CombatLog.Status}" />
            </DataTrigger>
            <!-- Surface (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Surface">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Template="{StaticResource BaseSurfaceTooltipTemplate}" ContentTemplate="{StaticResource SurfaceTooltipContentTemplate}" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}"  Content="{Binding Path=Inline.DataContext.SurfaceInformation, RelativeSource={RelativeSource Mode=Self}}" Placement="Top" VerticalOffset="-6" HorizontalOffset="-14"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <!-- Round -->
            <DataTrigger Binding="{Binding Type}" Value="Round">
                <Setter Property="Foreground" Value="{StaticResource LS_accent00TxtColor}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}}" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
            </DataTrigger>
            <DataTrigger Binding="{Binding HasTooltip}" Value="False">
                <Setter Property="TextDecorations" Value="None" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipEntries.Count}" Value="0" />
                    <Condition Binding="{Binding ManagedTooltip}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="TextDecorations" Value="None" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CombatLog.Tooltip.ParamRun" TargetType="ls:LSRun" BasedOn="{StaticResource CombatLog.Entry.ParamRun}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="DiceDescription">
                <Setter Property="Foreground" Value="{StaticResource CombatLog.Tooltip.SecondaryTextColor}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="ExpressionVariable">
                <Setter Property="Foreground" Value="{StaticResource CombatLog.Tooltip.SecondaryTextColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CombatLog.Entry.Text" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
        <Setter Property="LineHeight" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="Foreground" Value="{StaticResource CombatLog.DefaultTextColor}" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="MaxWidth" Value="920"/>
        <Setter Property="Opacity" Value="0.9"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipEntries.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="TextDecorations" Value="Underline" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="CombatLog.GeneratedRunWithTooltip" TargetType="ls:LSRun">
        <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipInitialShowDelay}" />
        <Setter Property="ToolTipService.PlacementTarget" Value="{Binding Path=Parent, RelativeSource={RelativeSource Self}}" />
    </Style>

    <DataTemplate x:Key="CombatLogGenericTemplate" >
        <TextBlock x:Name="LogEntry" Style="{DynamicResource TextStyle}">
            <b:Interaction.Behaviors>
                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding CtxTransText}" ParamRunStyle="{StaticResource CombatLog.Entry.ParamRun}" />
            </b:Interaction.Behaviors>
        </TextBlock>
    </DataTemplate>

    <DataTemplate DataType="ls:VMEquipStatusEntry">
        <TextBlock x:Name="LogEntry" Style="{DynamicResource TextStyle}">
            <b:Interaction.Behaviors>
                <ls:CtxTransStringRunGeneratorBehavior x:Name="EntryBehavior" LocaSource="{Binding Source='haf935496gcddag4a9egace0g69ec9cca84e4', Converter={StaticResource TranslatedStringConverter}}" ParamRunStyle="{StaticResource CombatLog.Entry.ParamRun}">
                    <ls:CtxTransStringRunGeneratorBehavior.ParamList>
                        <MultiBinding Converter="{StaticResource PassThroughConverter}">
                           <Binding Path="StatusParam"/>
                           <Binding Path="ItemParam"/>
                        </MultiBinding>
                    </ls:CtxTransStringRunGeneratorBehavior.ParamList>
                </ls:CtxTransStringRunGeneratorBehavior>
            </b:Interaction.Behaviors>
        </TextBlock>
    </DataTemplate>

    <DataTemplate DataType="ls:VMPingEntry">
        <TextBlock x:Name="LogEntry" Style="{DynamicResource TextStyle}" ls:CtxTransStringHelper.LocaSource="{Binding Source='h8eb32f43g65dfg4691ga17agca8c8e91bf78', Converter={StaticResource TranslatedStringConverter}}">
            <b:Interaction.Behaviors>
                <ls:CtxTransStringRunGeneratorBehavior x:Name="EntryBehavior" LocaSource="{Binding (ls:CtxTransStringHelper.LocaSource), ElementName=LogEntry}" ParamRunStyle="{StaticResource CombatLog.Entry.ParamRun}">
                    <ls:CtxTransStringRunGeneratorBehavior.ParamList>
                        <MultiBinding Converter="{StaticResource PassThroughConverter}">
                           <Binding Path="PingSourceParam"/>
                           <Binding Path="PingTargetParam"/>
                        </MultiBinding>
                    </ls:CtxTransStringRunGeneratorBehavior.ParamList>
                </ls:CtxTransStringRunGeneratorBehavior>
            </b:Interaction.Behaviors>
        </TextBlock>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding HasPingTarget}" Value="True">
                <Setter TargetName="LogEntry" Property="ls:CtxTransStringHelper.LocaSource" Value="{Binding Source='h8bb590d5gffb3g4acega9a6g54d1ce796626', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="ls:VMDialogStartEntry">
        <TextBlock x:Name="LogEntry" Style="{DynamicResource TextStyle}" ls:CtxTransStringHelper.LocaSource="{Binding Source='heab630b8g2443g46dbg80f0ga1cf4d5f9108', Converter={StaticResource TranslatedStringConverter}}">
            <b:Interaction.Behaviors>
                <ls:CtxTransStringRunGeneratorBehavior x:Name="EntryBehavior" LocaSource="{Binding (ls:CtxTransStringHelper.LocaSource), ElementName=LogEntry}" ParamRunStyle="{StaticResource CombatLog.Entry.ParamRun}">
                    <ls:CtxTransStringRunGeneratorBehavior.ParamList>
                        <MultiBinding Converter="{StaticResource PassThroughConverter}">
                           <Binding Path="DialogSpeakerParam"/>
                           <Binding Path="DialogTargetParam"/>
                        </MultiBinding>
                    </ls:CtxTransStringRunGeneratorBehavior.ParamList>
                </ls:CtxTransStringRunGeneratorBehavior>
            </b:Interaction.Behaviors>
        </TextBlock>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding HasDialogTarget}" Value="True">
                <Setter TargetName="LogEntry" Property="ls:CtxTransStringHelper.LocaSource" Value="{Binding Source='h3c5d590cgd9ccg4a90g8ef3g5633ca73b343', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="ls:VMStealthSpottedEntry">
        <TextBlock x:Name="LogEntry" Style="{DynamicResource TextStyle}" ls:CtxTransStringHelper.LocaSource="{Binding Source='hef4a8757g53eag4970gbb6cga7b2da0c21fe', Converter={StaticResource TranslatedStringConverter}}">
            <ls:CtxTransStringHelper.ParamList>
                <MultiBinding Converter="{StaticResource PassThroughConverter}">
                    <Binding Path="SpottedParam"/>
                    <Binding Path="SpotterParam"/>
                    <Binding Path="StatusParam"/>
                </MultiBinding>
            </ls:CtxTransStringHelper.ParamList>

            <b:Interaction.Behaviors>
                <ls:CtxTransStringRunGeneratorBehavior x:Name="EntryBehavior" LocaSource="{Binding (ls:CtxTransStringHelper.LocaSource), ElementName=LogEntry}" ParamRunStyle="{StaticResource CombatLog.Entry.ParamRun}" ParamList="{Binding (ls:CtxTransStringHelper.ParamList), ElementName=LogEntry}"/>
            </b:Interaction.Behaviors>
        </TextBlock>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ObscuredState}" Value="LightlyObscured">
                <Setter TargetName="LogEntry" Property="ls:CtxTransStringHelper.LocaSource" Value="{Binding Source='hec64a614gf5d4g42feg9790gae378a29395a', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding StatusParam, Converter={StaticResource NullToBoolTrueConverter}}" Value="False">
                <Setter TargetName="LogEntry" Property="ls:CtxTransStringHelper.LocaSource" Value="{Binding Source='h9b3fc3a8gde15g4893gadd4gbd074ae2bd0f', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding PassiveParam, Converter={StaticResource NullToBoolTrueConverter}}" Value="False">
                <Setter TargetName="LogEntry" Property="ls:CtxTransStringHelper.LocaSource" Value="{Binding Source='h9b3fc3a8gde15g4893gadd4gbd074ae2bd0f', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="LogEntry" Property="ls:CtxTransStringHelper.ParamList">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource PassThroughConverter}">
                            <Binding Path="SpottedParam"/>
                            <Binding Path="SpotterParam"/>
                            <Binding Path="PassiveParam"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--VMContextTransStringDamageParam-->
    <DataTemplate DataType="{x:Type ls:VMContextTransStringDamageParam}">
        <StackPanel MaxWidth="{StaticResource MaxCombatEntryTooltipWidth}">
            <ItemsControl ItemsSource="{Binding TooltipEntries}" ItemTemplate="{StaticResource CombatLog.Tooltip.Entry}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>

    <!--VMContextTransStringParam-->
    <DataTemplate DataType="{x:Type ls:VMContextTransStringParam}">
        <ItemsControl ItemsSource="{Binding TooltipEntries}" ItemTemplate="{StaticResource CombatLog.Tooltip.Entry}" MaxWidth="{StaticResource MaxCombatEntryTooltipWidth}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>

    <!--Attack roll tooltip-->
    <DataTemplate x:Key="AttackRollTooltipTemplate">
        <StackPanel>
            <Border Style="{StaticResource TooltipStripTopStyleWithContent}">
                <StackPanel>
                    <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding Source='h2f87537agd7e2g4e34g9dd7gf3a6f9baf298', Converter={StaticResource TranslatedStringConverter}}" Width="{StaticResource MaxWidthOnCollisionWithImage}"/>
                    <TextBlock x:Name="AbilityText" Style="{StaticResource TooltipSubTitleNoCollapseStyle}"/>
                </StackPanel>
            </Border>
            <Rectangle Style="{StaticResource tooltipHeaderDividerLine}" />

            <StackPanel Orientation="Horizontal"  VerticalAlignment="Top" Margin="{StaticResource DefaultMarginBottom}" ClipToBounds="False">
                <StackPanel.ToolTip>
                    <ls:LSTooltip Content="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=Self}}" IsHitTestVisible="False"/>
                </StackPanel.ToolTip>

                <Grid HorizontalAlignment="Left">
                    <ContentPresenter x:Name="SecondaryDie" Content="{Binding DiceTypeSet}" ContentTemplate="{StaticResource DieItemContainerTemplate}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="50 0 0 0" Visibility="Collapsed" Opacity="0.75"/>
                    <ContentPresenter Content="{Binding DiceTypeSet}" ContentTemplate="{StaticResource DieItemContainerTemplate}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                </Grid>
                <TextBlock Margin="8 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource TooltipDescriptionStyle}" Visibility="Visible">
                    <Run x:Name="AdvantageText" Text="" Foreground="{StaticResource TooltipColor.Highlight}"/>
                    <Run Text="{Binding Value, StringFormat={}{0:+#;-#;+0}}" FontSize="{StaticResource ScaledLargeFontSize}" Foreground="{StaticResource TooltipColor.Secondary}"/>
                    <Run Text="{Binding (ls:TooltipExtender.Owner).Name, RelativeSource={RelativeSource Mode=Self}, StringFormat={}({0})}"/>
                </TextBlock>
            </StackPanel>

            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h58689011gf42cg4117gabc5ga0de20069370',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipDescriptionStyle}"/>
            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h0aa4167egea6fg4774ga534g3161397d344a',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipDescriptionStyle}" Visibility="{Binding IsRanged, Converter={StaticResource BoolToVisibleConverter}}"/>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding AdvantageType}" Value="Advantage">
                <Setter TargetName="SecondaryDie" Property="Visibility" Value="Visible"/>
                <Setter TargetName="AdvantageText" Property="Text" Value="{Binding Source='h986f906agb172g4956g9567g5cbd32150349',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding AdvantageType}" Value="Disadvantage">
                <Setter TargetName="SecondaryDie" Property="Visibility" Value="Visible"/>
                <Setter TargetName="AdvantageText" Property="Text" Value="{Binding Source='h34944186g018cg474dg96d8gd56417c3e086',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding MainAbility}" Value="Strength">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='hc8c67074g3c19g44d1g8b7bg9e5a8d06d87f',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MainAbility}" Value="Dexterity">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='hc30ef867gedecg4c22ga387g648ea8224248',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MainAbility}" Value="Constitution">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='hcd19f46ag85bcg41f2gb8fbg1dc69843d250',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MainAbility}" Value="Intelligence">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='h33d41553g12cag401eg8c71g640d3d654054',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MainAbility}" Value="Wisdom">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='hfb735304g4b35g49e2gbabeg05b183cb6de1',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MainAbility}" Value="Charisma">
                <Setter TargetName="AbilityText" Property="Text" Value="{Binding Source='habf9df38g5018g44c4gbb6fga77177a64218',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTooltipAttackRoll}">
        <StackPanel>
            <ItemsControl Visibility="{Binding AdvantagesList.Count, Converter={StaticResource CountToVisibilityConverter}}" ItemsSource="{Binding AdvantagesList}" Margin="{StaticResource DefaultMarginBottom}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock x:Name="AdvantageText" Style="{StaticResource TooltipDescriptionStyle}" Visibility="{Binding Description, Converter={StaticResource StringToVisibilityConverter}}">
                            <ls:TextBlockFormatter.SourceText>
                                <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                    <Binding Source="hd266fc8fg9b01g4c7dga964gceec85e2e6d6"/>
                                    <Binding Path="Description"/>
                                </MultiBinding>
                            </ls:TextBlockFormatter.SourceText>
                        </TextBlock>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Value}" Value="-1">
                                <Setter TargetName="AdvantageText" Property="ls:TextBlockFormatter.SourceText">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                            <Binding Source="had30546cgd7fcg497dga0e0g36f994f6d726"/>
                                            <Binding Path="Description"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Visibility="Visible">
                <Run x:Name="RollTitle" Text="{Binding Source='h9ad6cf4dg119cg4c28g8527gc2bec6466e0f',Converter={StaticResource TranslatedStringConverter}}"/>
                <Run Text="{Binding DiceTypeSet.Str}" Foreground="{StaticResource TooltipColor.Secondary}"/>
            </TextBlock>

            <ItemsControl Visibility="{Binding CalculationParameters.Count, Converter={StaticResource CountToVisibilityConverter}}" ItemsSource="{Binding CalculationParameters}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" MinWidth="{StaticResource StatTooltipMinWidth}">
                            <StackPanel.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipDescriptionStyle}">
                                    <Setter Property="Width" Value="Auto"/>
                                </Style>
                            </StackPanel.Resources>
                            <TextBlock x:Name="Value" Foreground="{StaticResource TooltipColor.Secondary}" ls:TextBlockFormatter.SourceText="{Binding Value, StringFormat={}{0:+#;-#;+0}}" Margin="0,0,11,0"/>
                            <TextBlock x:Name="Description" Visibility="{Binding Description, Converter={StaticResource StringToVisibilityConverter}}">
                                <ls:TextBlockFormatter.SourceText>
                                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                        <Binding Source="hea17a85cg4aaag4679g9cbdge242e8f3bb9a"/>
                                        <Binding Path="Description"/>
                                    </MultiBinding>
                                </ls:TextBlockFormatter.SourceText>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Value}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding AdvantageType}" Value="Advantage">
                <Setter TargetName="RollTitle" Property="Text" Value="{Binding Source='h185ba066g837fg42acgbd26gbc5947705dc4',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding AdvantageType}" Value="Disadvantage">
                <Setter TargetName="RollTitle" Property="Text" Value="{Binding Source='h83a602aeg3664g4206g9c93g780f1b777a1c',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="CantripTooltipContentTemplate">
        <StackPanel Margin="0, 6">
            <StackPanel Orientation="Horizontal" >
                <Image Stretch="None" Source="{StaticResource IconMiniCantrip}" Width="48" Height="48" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,5,0"/>
                <TextBlock VerticalAlignment="Center" Text="{Binding Source='h7d02199dg44ecg4a1egbcacg9cc1cec197b3', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipTitleNoCollapseStyle}" />
            </StackPanel>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h9dd3b484g4092g4f1bgb272gb64846326fdb', Converter={StaticResource TranslatedStringConverter}}" Margin="{StaticResource DefaultMarginBottom}"/>
        </StackPanel>
    </DataTemplate>

    <!--#endregion-->
</ResourceDictionary>
